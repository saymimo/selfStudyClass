<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtCostUserMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtCostUser" >
    <id column="COST_USERR_ID" property="costUserrId" jdbcType="VARCHAR" />
    <result column="COST_APPLY_ID" property="costApplyId" jdbcType="VARCHAR" />
    <result column="COST_STATE" property="costState" jdbcType="INTEGER" />
    <result column="APPLY_DATE" property="applyDate" jdbcType="TIMESTAMP" />
    <result column="APPLY_BY" property="applyBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    COST_USERR_ID, COST_APPLY_ID, COST_STATE, APPLY_DATE, APPLY_BY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_cost_user
    where COST_USERR_ID = #{costUserrId,jdbcType=VARCHAR}
  </select>
  
  <select id="findUserName" parameterType="pd" resultType="pd">
  SELECT 
  u.`NAME` 
FROM
  sys_user u 
WHERE u.`STRUCT_ID`=#{STRUCT_ID,jdbcType=VARCHAR} 
  AND u.`IS_DEL` = 0 
  AND u.`USERNAME` IS NOT NULL 
  
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_cost_user
    where COST_USERR_ID = #{costUserrId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtCostUser" >
    insert into tt_cost_user (COST_USERR_ID, COST_APPLY_ID, COST_STATE, 
      APPLY_DATE, APPLY_BY)
    values (#{costUserrId,jdbcType=VARCHAR}, #{costApplyId,jdbcType=VARCHAR}, #{costState,jdbcType=INTEGER}, 
      #{applyDate,jdbcType=TIMESTAMP}, #{applyBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.TtCostUser" >
    insert into tt_cost_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="costUserrId != null" >
        COST_USERR_ID,
      </if>
      <if test="costApplyId != null" >
        COST_APPLY_ID,
      </if>
      <if test="costState != null" >
        COST_STATE,
      </if>
      <if test="applyDate != null" >
        APPLY_DATE,
      </if>
      <if test="applyBy != null" >
        APPLY_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="costUserrId != null" >
        #{costUserrId,jdbcType=VARCHAR},
      </if>
      <if test="costApplyId != null" >
        #{costApplyId,jdbcType=VARCHAR},
      </if>
      <if test="costState != null" >
        #{costState,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="applyBy != null" >
        #{applyBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.TtCostUser" >
    update tt_cost_user
    <set >
      <if test="costApplyId != null" >
        COST_APPLY_ID = #{costApplyId,jdbcType=VARCHAR},
      </if>
      <if test="costState != null" >
        COST_STATE = #{costState,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        APPLY_DATE = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="applyBy != null" >
        APPLY_BY = #{applyBy,jdbcType=VARCHAR},
      </if>
    </set>
    where COST_USERR_ID = #{costUserrId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.TtCostUser" >
    update tt_cost_user
    set COST_APPLY_ID = #{costApplyId,jdbcType=VARCHAR},
      COST_STATE = #{costState,jdbcType=INTEGER},
      APPLY_DATE = #{applyDate,jdbcType=TIMESTAMP},
      APPLY_BY = #{applyBy,jdbcType=VARCHAR}
    where COST_USERR_ID = #{costUserrId,jdbcType=VARCHAR}
  </update>
  <select id="selectbyCostUserid" resultMap="BaseResultMap" parameterType="pd" >
    SELECT  COST_USERR_ID, COST_APPLY_ID, COST_STATE, APPLY_DATE, APPLY_BY from tt_cost_user
    where COST_APPLY_ID = #{COST_APPLY_ID,jdbcType=VARCHAR}
  </select>
    
  <delete id="deleteAllCostUserByid" parameterType="String" flushCache="false">
		DELETE FROM `tt_tribune_user` 
		WHERE TRIBUNE_ID=#{costApplyId}
  			 
	</delete>
	
   <select id="findCostUserByCostApplyId" resultMap="BaseResultMap" parameterType="pd" >
    SELECT T.`TRIBUNE_USER_ID`, T.`TRIBUNE_ID`, T.`STATE`, 
    (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.`USER_ID`) AS USER_ID    FROM `tt_tribune_user` t
    WHERE t.`TRIBUNE_ID` = #{COST_APPLY_ID,jdbcType=VARCHAR}
  </select>
  
    <select id="findCostUserByState" resultType="pd" parameterType="pd" >
	     SELECT 
			(SELECT IFNULL(SUM(1),0) FROM tt_tribune_user  t WHERE  s.`TRIBUNE_ID`=t.TRIBUNE_ID) AS zongshu,
			(SELECT IFNULL(SUM(1),0) FROM tt_tribune_user  t WHERE   s.TRIBUNE_ID=t.TRIBUNE_ID AND  t.STATE=1) AS tongyishu,
			(SELECT IFNULL(SUM(1),0) FROM tt_tribune_user  t WHERE   s.TRIBUNE_ID=t.TRIBUNE_ID AND  t.STATE!=0) AS pingjiashu 
		 FROM `tt_tribune_user`  s WHERE s.TRIBUNE_ID=#{costApplyId,jdbcType=VARCHAR} GROUP BY s.TRIBUNE_ID
    
  </select>
  
  
 
  
   <update id="updateCostUser" parameterType="pd" >
    UPDATE `tt_tribune_user`    SET      STATE = #{costState,jdbcType=INTEGER}
    WHERE TRIBUNE_ID = #{costApplyId,jdbcType=VARCHAR} and USER_ID=#{userId,jdbcType=VARCHAR}
  </update>
  
</mapper>