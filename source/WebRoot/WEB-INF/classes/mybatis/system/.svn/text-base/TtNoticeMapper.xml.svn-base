<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtNotice" >
    <id column="NOTICE_ID" property="noticeId" jdbcType="VARCHAR" />
    <result column="STRUCT_ID" property="structId" jdbcType="VARCHAR" />
    <result column="PUBLISH_DATE" property="publishDate" jdbcType="DATE" />
    <result column="NOTICE_TITLE" property="noticeTitle" jdbcType="VARCHAR" />
    <result column="NOTICE_CONTENT" property="noticeContent" jdbcType="VARCHAR" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    NOTICE_ID, STRUCT_ID, PUBLISH_DATE, NOTICE_TITLE, NOTICE_CONTENT, IS_DEL, CREATE_DATE, 
    CREATE_BY, UPDATE_DATE, UPDATE_BY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_notice
    where NOTICE_ID = #{noticeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_notice
    where NOTICE_ID = #{noticeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtNotice" >
    insert into tt_notice (NOTICE_ID, STRUCT_ID, PUBLISH_DATE, 
      NOTICE_TITLE, NOTICE_CONTENT, IS_DEL, 
      CREATE_DATE, CREATE_BY, UPDATE_DATE, 
      UPDATE_BY)
    values (#{noticeId,jdbcType=VARCHAR}, #{structId,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, 
      #{noticeTitle,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.TtNotice" >
    insert into tt_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        NOTICE_ID,
      </if>
      <if test="structId != null" >
        STRUCT_ID,
      </if>
      <if test="publishDate != null" >
        PUBLISH_DATE,
      </if>
      <if test="noticeTitle != null" >
        NOTICE_TITLE,
      </if>
      <if test="noticeContent != null" >
        NOTICE_CONTENT,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        #{noticeId,jdbcType=VARCHAR},
      </if>
      <if test="structId != null" >
        #{structId,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="noticeTitle != null" >
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd" >
    update tt_notice
    <set >
      <if test="structId != null" >
        STRUCT_ID = #{structId,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        PUBLISH_DATE = #{publishDate,jdbcType=DATE},
      </if>
      <if test="noticeTitle != null" >
        NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        NOTICE_CONTENT = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where NOTICE_ID = #{noticeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.TtNotice" >
    update tt_notice
    set STRUCT_ID = #{structId,jdbcType=VARCHAR},
      PUBLISH_DATE = #{publishDate,jdbcType=DATE},
      NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR},
      NOTICE_CONTENT = #{noticeContent,jdbcType=VARCHAR},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where NOTICE_ID = #{noticeId,jdbcType=VARCHAR}
  </update>
  
  
  
    <!-- 通过struct_id获取公告通知列表 -->
	<select id="listPageAllNoticeStructid" parameterType="page" resultType="pd" useCache="false">
		 select 
    		 NOTICE_ID, STRUCT_ID, PUBLISH_DATE, NOTICE_TITLE, NOTICE_CONTENT, IS_DEL, CREATE_DATE, 
    (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_BY
    , UPDATE_DATE, UPDATE_BY
	    from tt_notice t
	    where
	STRUCT_ID=#{pd.STRUCT_ID} and IS_DEL=0
		
		 <if test="pd.ITEMNAME != null and pd.ITEMNAME != ''">
			and
				(
					 NOTICE_TITLE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%')
					 or 
					 NOTICE_CONTENT LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%') 
				)
		</if><!-- 关键词检索 -->
	</select>
	
	<select id="listtabNotice" parameterType="page" resultType="pd" useCache="false">
		 select 
    		 NOTICE_ID, STRUCT_ID, PUBLISH_DATE, NOTICE_TITLE, NOTICE_CONTENT, IS_DEL, CREATE_DATE, 
    (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_BY
    , UPDATE_DATE, UPDATE_BY
	    from tt_notice t
	    where
	STRUCT_ID=#{pd.STRUCT_ID} and IS_DEL=0
		
	</select>
	
	
	<select id="findByStructId" parameterType="pd" resultType="pd" useCache="false">
		 select 
    		 NOTICE_ID, STRUCT_ID, PUBLISH_DATE, NOTICE_TITLE, NOTICE_CONTENT, IS_DEL, CREATE_DATE, 
    (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_NAME
    , UPDATE_DATE, UPDATE_BY
	    from tt_notice t
	    where
	STRUCT_ID=#{STRUCT_ID} and YEAR(create_date)=YEAR(#{NOWTIME})
	 AND MONTH(create_date)=MONTH(#{NOWTIME}) AND DAY(create_date) = DAY(#{NOWTIME}) ORDER BY create_date DESC LIMIT 1;
		
	</select>
	<select id="findByStructIdList" parameterType="pd" resultType="pd" useCache="false">
		 select 
    		 NOTICE_ID, STRUCT_ID, PUBLISH_DATE, NOTICE_TITLE, NOTICE_CONTENT, IS_DEL, CREATE_DATE, 
    (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_NAME
    , UPDATE_DATE, UPDATE_BY
	    from tt_notice t
	     <if test="structAge==1" >
	   	WHERE
	    (t.STRUCT_ID =#{STRUCT_ID}   OR t.STRUCT_ID=(SELECT ss.`STRUCT_ID` FROM `sys_structinfo`  ss WHERE ss.`STRUCTST_AGE`=0))  
	    </if>
	   ORDER BY create_date DESC LIMIT 3; 
	</select>
	
	
	
		<!-- 通过user_id获取数据 -->
	<select id="findByNoticeById" parameterType="pd" resultType="pd" useCache="false">
		 select 
    		<include refid="Base_Column_List" />
	    from tt_notice
	   
	        where NOTICE_ID=#{NOTICE_ID}
	</select>
	
	
	
	<!-- 删除 -->
	  <update id="updateByIsDel" parameterType="pd">
  		 update tt_notice   set   IS_DEL = 1 where NOTICE_ID=#{NOTICE_ID}
	  </update>
	  <!-- 批量删除用户 -->
	<delete id="deleteAllItem" parameterType="String" flushCache="false">
		update tt_notice
		 set
			IS_DEL =1 where NOTICE_ID in 
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
</mapper>