<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtTribuneUserReplyMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtTribuneUserReply" >
    <id column="TRIBUNE_USER_REPLY_ID" property="tribuneUserReplyId" jdbcType="VARCHAR" />
    <result column="TRIBUNE_ID" property="tribuneId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="INTEGER" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    TRIBUNE_USER_REPLY_ID, TRIBUNE_ID, USER_ID, STATE, CONTENT, CREATE_DATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_tribune_user_reply
    where TRIBUNE_USER_REPLY_ID = #{tribuneUserReplyId,jdbcType=VARCHAR}
  </select>
  <select id="findTribuneUserReply" resultMap="BaseResultMap" parameterType="pd">
    SELECT 
  TRIBUNE_USER_REPLY_ID,
  TRIBUNE_ID,
  (SELECT 
    s.`NAME` 
  FROM
    `sys_user` s 
  WHERE s.`USER_ID` = t.USER_ID) AS USER_ID,
  STATE,
  CONTENT,
  CREATE_DATE 
FROM
  `tt_tribune_user_reply` t 
WHERE TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
order by  CREATE_DATE asc
  
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_tribune_user_reply
    where TRIBUNE_USER_REPLY_ID = #{tribuneUserReplyId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtTribuneUserReply" >
    insert into tt_tribune_user_reply (TRIBUNE_USER_REPLY_ID, TRIBUNE_ID, USER_ID, 
      STATE, CONTENT, CREATE_DATE
      )
    values (#{tribuneUserReplyId,jdbcType=VARCHAR}, #{tribuneId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.TtTribuneUserReply" >
    insert into tt_tribune_user_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tribuneUserReplyId != null" >
        TRIBUNE_USER_REPLY_ID,
      </if>
      <if test="tribuneId != null" >
        TRIBUNE_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tribuneUserReplyId != null" >
        #{tribuneUserReplyId,jdbcType=VARCHAR},
      </if>
      <if test="tribuneId != null" >
        #{tribuneId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.TtTribuneUserReply" >
    update tt_tribune_user_reply
    <set >
      <if test="tribuneId != null" >
        TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where TRIBUNE_USER_REPLY_ID = #{tribuneUserReplyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.TtTribuneUserReply" >
    update tt_tribune_user_reply
    set TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=INTEGER},
      CONTENT = #{content,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP}
    where TRIBUNE_USER_REPLY_ID = #{tribuneUserReplyId,jdbcType=VARCHAR}
  </update>
  
  <!-- 查询评价 -->
  <select id="findTenderReviewReplyByTenderid" resultMap="BaseResultMap" parameterType="pd">
  	SELECT 
  t.`TRIBUNE_USER_REPLY_ID`,
  t.`TRIBUNE_ID`,
  t.`CONTENT`,
  t.`STATE`,
  t.`CREATE_DATE`,
  (SELECT 
    s.`NAME` 
  FROM
    `sys_user` s 
  WHERE s.`USER_ID` = t.`USER_ID`) AS USER_ID 
FROM
  `tt_tribune_user_reply` t 
WHERE t.`TRIBUNE_ID` = #{tenderinfoId,jdbcType=VARCHAR} 
  
  </select>
  <select id="findCostApplyUserByCostApplyId" resultMap="BaseResultMap" parameterType="pd" >
 SELECT  t.`TRIBUNE_USER_REPLY_ID`, t.`TRIBUNE_ID`, t.`CONTENT`, t.`STATE`,t.`CREATE_DATE`,
    (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.`USER_ID`) AS USER_ID    FROM `tt_tribune_user_reply` t
    WHERE t.`TRIBUNE_ID` = #{COST_APPLY_ID,jdbcType=VARCHAR} order by CREATE_DATE desc
  </select>
</mapper>