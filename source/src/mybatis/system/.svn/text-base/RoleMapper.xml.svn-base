<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RoleMapper">
	
	<resultMap type="Role" id="roleResultMap">
		<id column="ROLE_ID" property="ROLE_ID"/>
		<result column="ROLE_NAME" property="ROLE_NAME"/>
		<result column="RIGHTS" property="RIGHTS"/>
	</resultMap>
	
	
	<!-- 权限 -->
	<update id="c1" parameterType="pd">
		update sys_user_qx 
		set C1=#{value} 
		where U_ID=#{kefu_id}
	</update>
	
	<!-- 列出二级角色信息 -->
	<select id="listAllERRoles" resultMap="roleResultMap" parameterType="pd">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from sys_role 
		where 
		STRUCT_ID=#{STRUCT_ID} and 
			PARENT_ID = '1'
	
	</select>
	
	<select id="selectRoleByUserid" resultMap="roleResultMap" parameterType="pd">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID,
			IF((SELECT       COUNT(1)     FROM      sys_user_role r
			     WHERE r.USER_ID=#{USER_ID}  AND r.ROLE_ID=s.ROLE_ID ) > 0,    '1',    '0'  ) AS rolecheck
		from sys_role s
		where 
		s.STRUCT_ID= (SELECT sys_user.struct_id FROM sys_user WHERE sys_user.user_id=#{USER_ID}) and 
			s.PARENT_ID = '1'
	
	</select>
	
	
		<!-- 去修改页面列出二级角色信息 -->
	<select id="listAllERRolesUpdate"  parameterType="pd" resultMap="roleResultMap">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID,
			IF((SELECT       COUNT(1)     FROM      sys_user_role r
			     WHERE r.USER_ID=#{USER_ID}  AND r.ROLE_ID=s.ROLE_ID ) > 0,    '1',    '0'  ) AS rolecheck
		from sys_role s
		where  s.STRUCT_ID=#{STRUCT_ID} and 
			s.PARENT_ID = '1'
	
	</select>
	<!-- 列出项目成员角色信息 -->
		<select id="listAllXMZCY"  parameterType="pd" resultMap="roleResultMap">
				  SELECT 
		  ROLE_ID,
		  ROLE_NAME,
		  RIGHTS,
		  PARENT_ID,
		  ADD_QX,
		  DEL_QX,
		  EDIT_QX,
		  CHA_QX,
		  QX_ID
		  FROM
		    sys_role s 
		  WHERE   s.PARENT_ID = '4'  and  s.STRUCT_ID=''
	</select>
	
	<!-- 列出会员二级角色信息 -->
	<select id="listAllappERRoles" resultMap="roleResultMap" parameterType="pd">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from sys_role 
		where  STRUCT_ID=#{STRUCT_ID} and 
		 	PARENT_ID = '7'
	</select>
	
	<!-- 列出此角色下的所有用户 -->
	<select id="listAllUByRid"  parameterType="pd" resultType="pd" >
		select USER_ID
		from sys_user
		where 
		ROLE_ID = #{ROLE_ID}
	</select>
	
	
	<!-- 列出评审组 -->
	<select id="listAllGroup"  parameterType="pd" resultType="pd" >
		SELECT 
  t.`ZD_ID`,
  t.`NAME`,
  t.`BIANMA`,
  t.`PARENT_ID`,
  t.`JB`,t.`P_BM`
FROM
  `sys_dictionaries` t 
WHERE t.`PARENT_ID` = (SELECT ZD_ID FROM  `sys_dictionaries` WHERE BIANMA='PSZ') 
	</select>

	<!-- 列出此角色下的所有会员 -->
	<select id="listAllAppUByRid"  parameterType="pd" resultType="pd" >
		select USER_ID
		from sys_app_user
		where 
		ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 通过当前登录用的角色id获取管理权限数据 -->
	<select id="findGLbyrid"   resultType="pd" >
		SELECT 
			GROUP_CONCAT(b.GL_ID) GL_ID,
			GROUP_CONCAT(b.ROLE_ID) ROLE_ID,
			GROUP_CONCAT(b.FX_QX) FX_QX,
			GROUP_CONCAT(b.FW_QX) FW_QX,
			GROUP_CONCAT(b.QX1) QX1,
			GROUP_CONCAT(b.QX2) QX2,
			GROUP_CONCAT(b.QX3) QX3,
			GROUP_CONCAT(b.QX4) QX4
		from sys_role a, sys_gl_qx b, sys_user c
		where 
			a.QX_ID = b.GL_ID
		and 
			a.ROLE_ID = c.ROLE_ID
		and
			c.ROLE_ID in
			<foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
			 #{item}  
			</foreach>  
		
		limit 0,1
	</select>
	
	<!-- 通过当前登录用的角色id获取用户权限数据 -->
	<select id="findYHbyrid"   resultType="pd" >
		SELECT 
			
			GROUP_CONCAT(b.C1) C1,
			GROUP_CONCAT(b.C2) C2,
			GROUP_CONCAT(b.C3) C3,
			GROUP_CONCAT(b.C4) C4,
			GROUP_CONCAT(b.Q1) Q1,
			GROUP_CONCAT(b.Q2) Q2,
			GROUP_CONCAT(b.Q3) Q3,
			GROUP_CONCAT(b.Q4) Q4
		from sys_role a, sys_user_qx b, sys_user c
		where 
			a.QX_ID = b.U_ID
		and 
			a.ROLE_ID = c.ROLE_ID
		and
			
			c.ROLE_ID in
			<foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
			 #{item}  
			</foreach>  
		limit 0,1
	</select>
	
	<!-- 列出K权限表里的数据 -->
	<select id="listAllkefu"  parameterType="pd" resultType="pd" >
		select 
			GL_ID,
			ROLE_ID,
			FX_QX,
			FW_QX,
			QX1,
			QX2,
			QX3,
			QX4
		from sys_gl_qx
	</select>
	
	<!-- 列出G权限表里的数据 -->
	<select id="listAllGysQX"  parameterType="pd" resultType="pd" >
		select 
			U_ID,
			C1,
			C2,
			C3,
			C4,
			Q1,
			Q2,
			Q3,
			Q4
		from sys_user_qx
	</select>
	
	<!-- 给全部子职位加菜单权限 -->
	<update id="setAllRights" parameterType="pd">
		update sys_role 
		set RIGHTS=#{rights} 
		where PARENT_ID=#{roleId}
	</update>
	
	<update id="add_qx" parameterType="pd">
		update sys_role 
		set ADD_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>
	
	<update id="del_qx" parameterType="pd">
		update sys_role 
		set DEL_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>
	
	<update id="edit_qx" parameterType="pd">
		update sys_role 
		set EDIT_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>
	
	<update id="cha_qx" parameterType="pd">
		update sys_role 
		set CHA_QX=#{value} 
		where ROLE_ID=#{ROLE_ID}
	</update>
	
	<update id="kfqx1" parameterType="pd">
		update sys_gl_qx 
		set QX1=#{value} 
		where GL_ID=#{kefu_id}
	</update>
	
	<update id="kfqx2" parameterType="pd">
		update sys_gl_qx 
		set QX2=#{value} 
		where GL_ID=#{kefu_id}
	</update>
	
	<update id="fxqx" parameterType="pd">
		update sys_gl_qx 
		set FX_QX=#{value} 
		where GL_ID=#{kefu_id}
	</update>
	
	<update id="fwqx" parameterType="pd">
		update sys_gl_qx 
		set FW_QX=#{value} 
		where GL_ID=#{kefu_id}
	</update>
	
	<select id="listAllRoles" resultMap="roleResultMap" parameterType="pd">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID
		from sys_role 
		where STRUCT_ID=#{STRUCT_ID} and  PARENT_ID = '0' 
		ORDER BY ROLE_ID
	</select>
	
	<select id="listAllRolesByPId" resultMap="roleResultMap">
		select 
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID,
			ROLE_CODE
		from sys_role  
		where 
			PARENT_ID = #{ROLE_ID} and STRUCT_ID=#{STRUCT_ID}
		ORDER BY ROLE_CODE ASC
	</select>
	

	<select id="getRoleById" parameterType="pd" resultMap="roleResultMap">
		select * from sys_role 
		where STRUCT_ID=#{STRUCT_ID} and  ROLE_ID=#{roleId}
	</select>
	
	
	<update id="updateRoleRights" parameterType="Role">
		update sys_role 
		set RIGHTS=#{RIGHTS} 
		where ROLE_ID=#{ROLE_ID}
	</update>
	<delete id="deleteRoleById" parameterType="String">
		delete from sys_role 
		where ROLE_ID=#{ROLE_ID}
	</delete>
	
	<!-- 删除K权限表里对应的数据 -->
	<delete id="deleteKeFuById" parameterType="String">
		delete from sys_gl_qx 
		where GL_ID = #{ROLE_ID}
	</delete>
		<!-- 删除sys_User_role表里对应的数据 -->
	<delete id="deleteUserRoleById" parameterType="String">
		delete from sys_user_role 
		where ROLE_ID = #{ROLE_ID}
	</delete>
	
	<!-- 删除G权限表里对应的数据 -->
	<delete id="deleteGById" parameterType="String">
		delete from sys_user_qx 
		where U_ID = #{ROLE_ID}
	</delete>
	
	<!-- 保存K权限 -->
	<insert id="saveKeFu" parameterType="pd">
		insert into sys_gl_qx (
			GL_ID,
			ROLE_ID,
			FX_QX,
			FW_QX,
			QX1,
			QX2,
			QX3,
			QX4
		) values (
			#{GL_ID},
			#{ROLE_ID},
			#{FX_QX},
			#{FW_QX},
			#{QX1},
			#{QX2},
			#{QX3},
			#{QX4}
		)
	</insert>
	
	<!-- 保存G权限 -->
	<insert id="saveGYSQX" parameterType="pd">
		insert into sys_user_qx (
			U_ID,
			C1,
			C2,
			C3,
			C4,
			Q1,
			Q2,
			Q3,
			Q4
		) values (
			#{U_ID},
			#{C1},
			#{C2},
			#{C3},
			#{C4},
			#{Q1},
			#{Q2},
			#{Q3},
			#{Q4}
		)
	</insert>
	
	<!-- 添加 -->
	<insert id="insert" parameterType="pd">
		insert into sys_role (
			ROLE_ID,
			ROLE_NAME,
			RIGHTS,
			PARENT_ID,
			ADD_QX,
			DEL_QX,
			EDIT_QX,
			CHA_QX,
			QX_ID,
			STRUCT_ID,
			ROLE_CODE
			
		) values (
			#{ROLE_ID},
			#{ROLE_NAME},
			#{RIGHTS},
			#{PARENT_ID},
			#{ADD_QX},
			#{DEL_QX},
			#{EDIT_QX},
			#{CHA_QX},
			#{QX_ID},
			#{STRUCT_ID},
			#{ROLE_CODE}
		)
	</insert>
	<select id="findStructIdAndBianma" resultType="int" parameterType="pd">
		
		SELECT COUNT(1) FROM `sys_role` r WHERE r.`ROLE_CODE`=#{ROLE_CODE} AND r.`STRUCT_ID`=#{STRUCT_ID}
	</select>
	
	<!-- 通过id查找 -->
	<select id="findObjectById" resultType="pd">
		select  
			GROUP_CONCAT(ROLE_ID) ROLE_ID,
			GROUP_CONCAT(ROLE_NAME) ROLE_NAME,
			GROUP_CONCAT(RIGHTS) RIGHTS,
			GROUP_CONCAT(PARENT_ID) PARENT_ID,
			GROUP_CONCAT(ADD_QX) ADD_QX,
			GROUP_CONCAT(DEL_QX) DEL_QX,
			GROUP_CONCAT(EDIT_QX) EDIT_QX,
			GROUP_CONCAT(CHA_QX) CHA_QX
		from sys_role
		where   ROLE_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
		 #{item}  
		</foreach>  
	</select>
	
		<!-- 编辑角色 -->
	<update id="edit" parameterType="pd">
		update sys_role 
		set ROLE_NAME = #{ROLE_NAME}
		where ROLE_ID = #{ROLE_ID}
	</update>
</mapper>