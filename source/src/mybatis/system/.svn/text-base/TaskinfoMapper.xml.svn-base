<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TaskinfoMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.Taskinfo" >
    <id column="UID" property="uid" jdbcType="VARCHAR" />
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="PARENTTASKUID" property="parenttaskuid" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="START" property="start" jdbcType="TIMESTAMP" />
    <result column="FINISH" property="finish" jdbcType="TIMESTAMP" />
    <result column="DURATION" property="duration" jdbcType="INTEGER" />
    <result column="WORK" property="work" jdbcType="INTEGER" />
    <result column="PERCENTCOMPLETE" property="percentcomplete" jdbcType="INTEGER" />
    <result column="WEIGHT" property="weight" jdbcType="INTEGER" />
    <result column="CONSTRAINTTYPE" property="constrainttype" jdbcType="INTEGER" />
    <result column="CONSTRAINTDATE" property="constraintdate" jdbcType="TIMESTAMP" />
    <result column="MILESTONE" property="milestone" jdbcType="INTEGER" />
    <result column="SUMMARY" property="summary" jdbcType="INTEGER" />
    <result column="CRITICAL" property="critical" jdbcType="INTEGER" />
    <result column="PRIORITY" property="priority" jdbcType="INTEGER" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="DEPARTMENT" property="department" jdbcType="VARCHAR" />
    <result column="PRINCIPAL" property="principal" jdbcType="VARCHAR" />
    <result column="PREDECESSORLINK" property="predecessorlink" jdbcType="VARCHAR" />
    <result column="FIXEDDATE" property="fixeddate" jdbcType="INTEGER" />
    <result column="PROJECTUID" property="projectuid" jdbcType="VARCHAR" />
    <result column="ACTUALSTART" property="actualstart" jdbcType="TIMESTAMP" />
    <result column="ACTUALFINISH" property="actualfinish" jdbcType="TIMESTAMP" />
    <result column="ACTUALDURATION" property="actualduration" jdbcType="INTEGER" />
    <result column="ASSIGNMENTS" property="assignments" jdbcType="VARCHAR" />
    <result column="WBS" property="wbs" jdbcType="VARCHAR" />
    <result column="OUTLINENUMBER" property="outlinenumber" jdbcType="VARCHAR" />
    <result column="CRITICAL2" property="critical2" jdbcType="INTEGER" />
    <result column="TASK_SATE" property="taskSate" jdbcType="INTEGER" />
    <result column="QUALITY_MARK" property="qualityMark" jdbcType="INTEGER" />
    <result column="SAFE_MARK" property="safeMark" jdbcType="INTEGER" />
    <result column="LW_FIXED_AMOUNT" property="lwFixedAmount" jdbcType="DECIMAL" />
    <result column="LW_COEFFICIENT_AMOUNT" property="lwCoefficientAmount" jdbcType="DECIMAL" />
    <result column="LW_TOTAL_AMOUNT" property="lwTotalAmount" jdbcType="DECIMAL" />
    <result column="PACT_SETTLEMENT" property="pactSettlement" jdbcType="INTEGER" />
    <result column="WORKNUM" property="worknum" jdbcType="DECIMAL" />
    <result column="APPROVAL_STATE" property="approvalState" jdbcType="INTEGER" />
    <result column="WAGE_APPROVAL" property="wageApproval" jdbcType="INTEGER" />
    <result column="SAFE_REMIND" property="safeRemind" jdbcType="INTEGER" />
    <result column="MASS_REMIND" property="massRemind" jdbcType="INTEGER" />
    <result column="APPROVAL_REMIND" property="approvalRemind" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="WAGE_VOUCHER" property="wageVoucher" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    UID, ID, PARENTTASKUID, NAME, START, FINISH, DURATION, WORK, PERCENTCOMPLETE, WEIGHT, 
    CONSTRAINTTYPE, CONSTRAINTDATE, MILESTONE, SUMMARY, CRITICAL, PRIORITY, NOTES, DEPARTMENT, 
    PRINCIPAL, PREDECESSORLINK, FIXEDDATE, PROJECTUID, ACTUALSTART, ACTUALFINISH, ACTUALDURATION, 
    ASSIGNMENTS, WBS, OUTLINENUMBER, CRITICAL2, TASK_SATE, QUALITY_MARK, SAFE_MARK, LW_FIXED_AMOUNT, 
    LW_COEFFICIENT_AMOUNT, LW_TOTAL_AMOUNT, PACT_SETTLEMENT, WORKNUM, APPROVAL_STATE, 
    WAGE_APPROVAL, SAFE_REMIND, MASS_REMIND, APPROVAL_REMIND, CREATE_DATE, CREATE_BY, 
    UPDATE_DATE, UPDATE_BY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="pd" >
    select 
    <include refid="Base_Column_List" />
    from tt_taskinfo
    where UID = #{uid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPK" resultType="pd" parameterType="pd" useCache="false">
    select 
    UID, ID, PARENTTASKUID
    from tt_taskinfo
    where UID = #{UID,jdbcType=VARCHAR}
  </select>
    <!-- 在findByTaskById之前查出PID然后通过PID查出findByTaskById的施工员安全员等  shenwei 2016/05/13-->
   <select id="findPid" resultType="pd" parameterType="pd" >
    SELECT `findPTaskOneByCId`(#{UID,jdbcType=VARCHAR}) as PID
  </select>
   <select id="findByTaskById" resultType="pd" parameterType="pd" >
    select 
    UID, ID, PARENTTASKUID, NAME, START, FINISH, DURATION, WORK, PERCENTCOMPLETE, WEIGHT, 
    CONSTRAINTTYPE, CONSTRAINTDATE, MILESTONE, SUMMARY, CRITICAL, PRIORITY, NOTES, DEPARTMENT, 
    PRINCIPAL, PREDECESSORLINK, FIXEDDATE, PROJECTUID, ACTUALSTART, ACTUALFINISH, ACTUALDURATION, 
    ASSIGNMENTS, WBS, OUTLINENUMBER, CRITICAL2, TASK_STATE, QUALITY_STATE, SECURITY_STATE, LW_FIXED_AMOUNT, 
    LW_COEFFICIENT_AMOUNT, LW_TOTAL_AMOUNT, PACT_SETTLEMENT, WORKNUM, APPROVAL_STATE, 
    WAGE_APPROVAL, SECURITY_REMIND, QUALITY_REMIND, APPROVAL_REMIND, CREATE_DATE, CREATE_BY, 
    UPDATE_DATE, UPDATE_BY ,(SELECT taskName(#{UID,jdbcType=VARCHAR}) )AS TASKNAME,TASK_UNIT,TRACK_END_DATE,TRACK_START_DATE
    , (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=tt_taskinfo.`CONSTRUCTION_USER`)  AS CONSTRUCTION_NAME,CONSTRUCTION_USER,BUSINESS_USER,TECHNOLOGY_USER,QUALITY_USER,SECURITY_USER
    ,  ( SELECT CONSTRUCTION_USER FROM tt_taskinfo WHERE uid= (SELECT `findPTaskOneByCId`(#{UID,jdbcType=VARCHAR})) )AS P_CONSTRUCTION_USER
    , (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=P_CONSTRUCTION_USER)  AS P_CONSTRUCTION_NAME,
    ( SELECT SECURITY_USER FROM tt_taskinfo WHERE uid= (SELECT `findPTaskOneByCId`(#{UID,jdbcType=VARCHAR})) )AS P_SECURITY_USER
    , (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=P_SECURITY_USER)  AS P_SECURITY_NAME,
    ( SELECT QUALITY_USER FROM tt_taskinfo WHERE uid= (SELECT `findPTaskOneByCId`(#{UID,jdbcType=VARCHAR})) )AS P_QUALITY_USER
    , (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=P_QUALITY_USER)  AS P_QUALITY_NAME,
        ( SELECT TECHNOLOGY_USER FROM tt_taskinfo WHERE uid= (SELECT `findPTaskOneByCId`(#{UID,jdbcType=VARCHAR})) )AS P_TECHNOLOGY_USER
    , (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=P_TECHNOLOGY_USER)  AS P_TECHNOLOGY_NAME,
        ( SELECT BUSINESS_USER FROM tt_taskinfo WHERE uid= (SELECT `findPTaskOneByCId`(#{UID,jdbcType=VARCHAR})) )AS P_BUSINESS_USER
    , (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=P_BUSINESS_USER)  AS P_BUSINESS_NAME
    from tt_taskinfo
    where UID = #{UID,jdbcType=VARCHAR}
  </select>
     <select id="findRole" resultType="pd" parameterType="pd" >
  SELECT 
  t.`USER_ID` 
FROM
  `tt_item_person` t 
WHERE t.`ROLE_ID` = 
  (SELECT 
    r.`ROLE_ID` 
  FROM
    sys_role r 
  WHERE  r.`role_code` = 'X_001') 
  AND t.`ITEM_ID` = 
  (SELECT 
    i.`PROJECTUID` 
  FROM
    `tt_taskinfo` i 
  WHERE i.`UID` = #{UID,jdbcType=VARCHAR}) 
  AND t.`STRUCT_ID` = #{structId,jdbcType=VARCHAR} 
  AND t.`USER_ID`= #{userId,jdbcType=VARCHAR};
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_taskinfo
    where UID = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.Taskinfo" >
    insert into tt_taskinfo (UID, ID, PARENTTASKUID, 
      NAME, START, FINISH, 
      DURATION, WORK, PERCENTCOMPLETE, 
      WEIGHT, CONSTRAINTTYPE, CONSTRAINTDATE, 
      MILESTONE, SUMMARY, CRITICAL, 
      PRIORITY, NOTES, DEPARTMENT, 
      PRINCIPAL, PREDECESSORLINK, FIXEDDATE, 
      PROJECTUID, ACTUALSTART, ACTUALFINISH, 
      ACTUALDURATION, ASSIGNMENTS, WBS, 
      OUTLINENUMBER, CRITICAL2, TASK_SATE, 
      QUALITY_MARK, SAFE_MARK, LW_FIXED_AMOUNT, 
      LW_COEFFICIENT_AMOUNT, LW_TOTAL_AMOUNT, PACT_SETTLEMENT, 
      WORKNUM, APPROVAL_STATE, WAGE_APPROVAL, 
      SAFE_REMIND, MASS_REMIND, APPROVAL_REMIND, 
      CREATE_DATE, CREATE_BY, UPDATE_DATE, 
      UPDATE_BY)
    values (#{uid,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{parenttaskuid,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{start,jdbcType=TIMESTAMP}, #{finish,jdbcType=TIMESTAMP}, 
      #{duration,jdbcType=INTEGER}, #{work,jdbcType=INTEGER}, #{percentcomplete,jdbcType=INTEGER}, 
      #{weight,jdbcType=INTEGER}, #{constrainttype,jdbcType=INTEGER}, #{constraintdate,jdbcType=TIMESTAMP}, 
      #{milestone,jdbcType=INTEGER}, #{summary,jdbcType=INTEGER}, #{critical,jdbcType=INTEGER}, 
      #{priority,jdbcType=INTEGER}, #{notes,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{principal,jdbcType=VARCHAR}, #{predecessorlink,jdbcType=VARCHAR}, #{fixeddate,jdbcType=INTEGER}, 
      #{projectuid,jdbcType=VARCHAR}, #{actualstart,jdbcType=TIMESTAMP}, #{actualfinish,jdbcType=TIMESTAMP}, 
      #{actualduration,jdbcType=INTEGER}, #{assignments,jdbcType=VARCHAR}, #{wbs,jdbcType=VARCHAR}, 
      #{outlinenumber,jdbcType=VARCHAR}, #{critical2,jdbcType=INTEGER}, #{taskSate,jdbcType=INTEGER}, 
      #{qualityMark,jdbcType=INTEGER}, #{safeMark,jdbcType=INTEGER}, #{lwFixedAmount,jdbcType=DECIMAL}, 
      #{lwCoefficientAmount,jdbcType=DECIMAL}, #{lwTotalAmount,jdbcType=DECIMAL}, #{pactSettlement,jdbcType=INTEGER}, 
      #{worknum,jdbcType=DECIMAL}, #{approvalState,jdbcType=INTEGER}, #{wageApproval,jdbcType=INTEGER}, 
      #{safeRemind,jdbcType=INTEGER}, #{massRemind,jdbcType=INTEGER}, #{approvalRemind,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR})
  </insert>
  
  <insert id="addList" parameterType="pd" >
    insert into tt_task_list (TASK_LIST_ID, LIST_ID, TYPE)
    values (#{TASK_LIST_ID,jdbcType=VARCHAR}, #{LIST_ID,jdbcType=VARCHAR}, #{TYPE,jdbcType=INTEGER})
  </insert>
  
  <delete id="deleteList" parameterType="pd" >
    delete from tt_task_list
    where TASK_LIST_ID = #{TASK_LIST_ID,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insertSelective" parameterType="com.ssc.entity.system.Taskinfo" >
    insert into tt_taskinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        UID,
      </if>
      <if test="id != null" >
        ID,
      </if>
      <if test="parenttaskuid != null" >
        PARENTTASKUID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="start != null" >
        START,
      </if>
      <if test="finish != null" >
        FINISH,
      </if>
      <if test="duration != null" >
        DURATION,
      </if>
      <if test="work != null" >
        WORK,
      </if>
      <if test="percentcomplete != null" >
        PERCENTCOMPLETE,
      </if>
      <if test="weight != null" >
        WEIGHT,
      </if>
      <if test="constrainttype != null" >
        CONSTRAINTTYPE,
      </if>
      <if test="constraintdate != null" >
        CONSTRAINTDATE,
      </if>
      <if test="milestone != null" >
        MILESTONE,
      </if>
      <if test="summary != null" >
        SUMMARY,
      </if>
      <if test="critical != null" >
        CRITICAL,
      </if>
      <if test="priority != null" >
        PRIORITY,
      </if>
      <if test="notes != null" >
        NOTES,
      </if>
      <if test="department != null" >
        DEPARTMENT,
      </if>
      <if test="principal != null" >
        PRINCIPAL,
      </if>
      <if test="predecessorlink != null" >
        PREDECESSORLINK,
      </if>
      <if test="fixeddate != null" >
        FIXEDDATE,
      </if>
      <if test="projectuid != null" >
        PROJECTUID,
      </if>
      <if test="actualstart != null" >
        ACTUALSTART,
      </if>
      <if test="actualfinish != null" >
        ACTUALFINISH,
      </if>
      <if test="actualduration != null" >
        ACTUALDURATION,
      </if>
      <if test="assignments != null" >
        ASSIGNMENTS,
      </if>
      <if test="wbs != null" >
        WBS,
      </if>
      <if test="outlinenumber != null" >
        OUTLINENUMBER,
      </if>
      <if test="critical2 != null" >
        CRITICAL2,
      </if>
      <if test="taskSate != null" >
        TASK_SATE,
      </if>
      <if test="qualityMark != null" >
        QUALITY_MARK,
      </if>
      <if test="safeMark != null" >
        SAFE_MARK,
      </if>
      <if test="lwFixedAmount != null" >
        LW_FIXED_AMOUNT,
      </if>
      <if test="lwCoefficientAmount != null" >
        LW_COEFFICIENT_AMOUNT,
      </if>
      <if test="lwTotalAmount != null" >
        LW_TOTAL_AMOUNT,
      </if>
      <if test="pactSettlement != null" >
        PACT_SETTLEMENT,
      </if>
      <if test="worknum != null" >
        WORKNUM,
      </if>
      <if test="approvalState != null" >
        APPROVAL_STATE,
      </if>
      <if test="wageApproval != null" >
        WAGE_APPROVAL,
      </if>
      <if test="safeRemind != null" >
        SAFE_REMIND,
      </if>
      <if test="massRemind != null" >
        MASS_REMIND,
      </if>
      <if test="approvalRemind != null" >
        APPROVAL_REMIND,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parenttaskuid != null" >
        #{parenttaskuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="start != null" >
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="finish != null" >
        #{finish,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="work != null" >
        #{work,jdbcType=INTEGER},
      </if>
      <if test="percentcomplete != null" >
        #{percentcomplete,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="constrainttype != null" >
        #{constrainttype,jdbcType=INTEGER},
      </if>
      <if test="constraintdate != null" >
        #{constraintdate,jdbcType=TIMESTAMP},
      </if>
      <if test="milestone != null" >
        #{milestone,jdbcType=INTEGER},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=INTEGER},
      </if>
      <if test="critical != null" >
        #{critical,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="predecessorlink != null" >
        #{predecessorlink,jdbcType=VARCHAR},
      </if>
      <if test="fixeddate != null" >
        #{fixeddate,jdbcType=INTEGER},
      </if>
      <if test="projectuid != null" >
        #{projectuid,jdbcType=VARCHAR},
      </if>
      <if test="actualstart != null" >
        #{actualstart,jdbcType=TIMESTAMP},
      </if>
      <if test="actualfinish != null" >
        #{actualfinish,jdbcType=TIMESTAMP},
      </if>
      <if test="actualduration != null" >
        #{actualduration,jdbcType=INTEGER},
      </if>
      <if test="assignments != null" >
        #{assignments,jdbcType=VARCHAR},
      </if>
      <if test="wbs != null" >
        #{wbs,jdbcType=VARCHAR},
      </if>
      <if test="outlinenumber != null" >
        #{outlinenumber,jdbcType=VARCHAR},
      </if>
      <if test="critical2 != null" >
        #{critical2,jdbcType=INTEGER},
      </if>
      <if test="taskSate != null" >
        #{taskSate,jdbcType=INTEGER},
      </if>
      <if test="qualityMark != null" >
        #{qualityMark,jdbcType=INTEGER},
      </if>
      <if test="safeMark != null" >
        #{safeMark,jdbcType=INTEGER},
      </if>
      <if test="lwFixedAmount != null" >
        #{lwFixedAmount,jdbcType=DECIMAL},
      </if>
      <if test="lwCoefficientAmount != null" >
        #{lwCoefficientAmount,jdbcType=DECIMAL},
      </if>
      <if test="lwTotalAmount != null" >
        #{lwTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="pactSettlement != null" >
        #{pactSettlement,jdbcType=INTEGER},
      </if>
      <if test="worknum != null" >
        #{worknum,jdbcType=DECIMAL},
      </if>
      <if test="approvalState != null" >
        #{approvalState,jdbcType=INTEGER},
      </if>
      <if test="wageApproval != null" >
        #{wageApproval,jdbcType=INTEGER},
      </if>
      <if test="safeRemind != null" >
        #{safeRemind,jdbcType=INTEGER},
      </if>
      <if test="massRemind != null" >
        #{massRemind,jdbcType=INTEGER},
      </if>
      <if test="approvalRemind != null" >
        #{approvalRemind,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd" >
    update tt_taskinfo
    <set >
      <if test="id != null" >
        ID = #{id,jdbcType=INTEGER},
      </if>
      <if test="parenttaskuid != null" >
        PARENTTASKUID = #{parenttaskuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="start != null" >
        START = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="finish != null" >
        FINISH = #{finish,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        DURATION = #{duration,jdbcType=INTEGER},
      </if>
      <if test="work != null" >
        WORK = #{work,jdbcType=INTEGER},
      </if>
      <if test="percentcomplete != null" >
        PERCENTCOMPLETE = #{percentcomplete,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        WEIGHT = #{weight,jdbcType=INTEGER},
      </if>
      <if test="constrainttype != null" >
        CONSTRAINTTYPE = #{constrainttype,jdbcType=INTEGER},
      </if>
      <if test="constraintdate != null" >
        CONSTRAINTDATE = #{constraintdate,jdbcType=TIMESTAMP},
      </if>
      <if test="milestone != null" >
        MILESTONE = #{milestone,jdbcType=INTEGER},
      </if>
      <if test="summary != null" >
        SUMMARY = #{summary,jdbcType=INTEGER},
      </if>
      <if test="critical != null" >
        CRITICAL = #{critical,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        PRIORITY = #{priority,jdbcType=INTEGER},
      </if>
      <if test="notes != null" >
        NOTES = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        DEPARTMENT = #{department,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        PRINCIPAL = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="predecessorlink != null" >
        PREDECESSORLINK = #{predecessorlink,jdbcType=VARCHAR},
      </if>
      <if test="fixeddate != null" >
        FIXEDDATE = #{fixeddate,jdbcType=INTEGER},
      </if>
      <if test="projectuid != null" >
        PROJECTUID = #{projectuid,jdbcType=VARCHAR},
      </if>
      <if test="actualstart != null" >
        ACTUALSTART = #{actualstart,jdbcType=TIMESTAMP},
      </if>
      <if test="actualfinish != null" >
        ACTUALFINISH = #{actualfinish,jdbcType=TIMESTAMP},
      </if>
      <if test="actualduration != null" >
        ACTUALDURATION = #{actualduration,jdbcType=INTEGER},
      </if>
      <if test="assignments != null" >
        ASSIGNMENTS = #{assignments,jdbcType=VARCHAR},
      </if>
      <if test="wbs != null" >
        WBS = #{wbs,jdbcType=VARCHAR},
      </if>
      <if test="outlinenumber != null" >
        OUTLINENUMBER = #{outlinenumber,jdbcType=VARCHAR},
      </if>
      <if test="critical2 != null" >
        CRITICAL2 = #{critical2,jdbcType=INTEGER},
      </if>
      <if test="taskSate != null" >
        TASK_SATE = #{taskSate,jdbcType=INTEGER},
      </if>
      <if test="qualityMark != null" >
        QUALITY_MARK = #{qualityMark,jdbcType=INTEGER},
      </if>
      <if test="safeMark != null" >
        SAFE_MARK = #{safeMark,jdbcType=INTEGER},
      </if>
      <if test="lwFixedAmount != null" >
        LW_FIXED_AMOUNT = #{lwFixedAmount,jdbcType=DECIMAL},
      </if>
      <if test="lwCoefficientAmount != null" >
        LW_COEFFICIENT_AMOUNT = #{lwCoefficientAmount,jdbcType=DECIMAL},
      </if>
      <if test="lwTotalAmount != null" >
        LW_TOTAL_AMOUNT = #{lwTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="pactSettlement != null" >
        PACT_SETTLEMENT = #{pactSettlement,jdbcType=INTEGER},
      </if>
      <if test="worknum != null" >
        WORKNUM = #{worknum,jdbcType=DECIMAL},
      </if>
      <if test="approvalState != null" >
        APPROVAL_STATE = #{approvalState,jdbcType=INTEGER},
      </if>
      <if test="wageApproval != null" >
        WAGE_APPROVAL = #{wageApproval,jdbcType=INTEGER},
      </if>
      <if test="safeRemind != null" >
        SAFE_REMIND = #{safeRemind,jdbcType=INTEGER},
      </if>
      <if test="massRemind != null" >
        MASS_REMIND = #{massRemind,jdbcType=INTEGER},
      </if>
      <if test="approvalRemind != null" >
        APPROVAL_REMIND = #{approvalRemind,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where UID = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.Taskinfo" >
    update tt_taskinfo
    set ID = #{id,jdbcType=INTEGER},
      PARENTTASKUID = #{parenttaskuid,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      START = #{start,jdbcType=TIMESTAMP},
      FINISH = #{finish,jdbcType=TIMESTAMP},
      DURATION = #{duration,jdbcType=INTEGER},
      WORK = #{work,jdbcType=INTEGER},
      PERCENTCOMPLETE = #{percentcomplete,jdbcType=INTEGER},
      WEIGHT = #{weight,jdbcType=INTEGER},
      CONSTRAINTTYPE = #{constrainttype,jdbcType=INTEGER},
      CONSTRAINTDATE = #{constraintdate,jdbcType=TIMESTAMP},
      MILESTONE = #{milestone,jdbcType=INTEGER},
      SUMMARY = #{summary,jdbcType=INTEGER},
      CRITICAL = #{critical,jdbcType=INTEGER},
      PRIORITY = #{priority,jdbcType=INTEGER},
      NOTES = #{notes,jdbcType=VARCHAR},
      DEPARTMENT = #{department,jdbcType=VARCHAR},
      PRINCIPAL = #{principal,jdbcType=VARCHAR},
      PREDECESSORLINK = #{predecessorlink,jdbcType=VARCHAR},
      FIXEDDATE = #{fixeddate,jdbcType=INTEGER},
      PROJECTUID = #{projectuid,jdbcType=VARCHAR},
      ACTUALSTART = #{actualstart,jdbcType=TIMESTAMP},
      ACTUALFINISH = #{actualfinish,jdbcType=TIMESTAMP},
      ACTUALDURATION = #{actualduration,jdbcType=INTEGER},
      ASSIGNMENTS = #{assignments,jdbcType=VARCHAR},
      WBS = #{wbs,jdbcType=VARCHAR},
      OUTLINENUMBER = #{outlinenumber,jdbcType=VARCHAR},
      CRITICAL2 = #{critical2,jdbcType=INTEGER},
      TASK_SATE = #{taskSate,jdbcType=INTEGER},
      QUALITY_MARK = #{qualityMark,jdbcType=INTEGER},
      SAFE_MARK = #{safeMark,jdbcType=INTEGER},
      LW_FIXED_AMOUNT = #{lwFixedAmount,jdbcType=DECIMAL},
      LW_COEFFICIENT_AMOUNT = #{lwCoefficientAmount,jdbcType=DECIMAL},
      LW_TOTAL_AMOUNT = #{lwTotalAmount,jdbcType=DECIMAL},
      PACT_SETTLEMENT = #{pactSettlement,jdbcType=INTEGER},
      WORKNUM = #{worknum,jdbcType=DECIMAL},
      APPROVAL_STATE = #{approvalState,jdbcType=INTEGER},
      WAGE_APPROVAL = #{wageApproval,jdbcType=INTEGER},
      SAFE_REMIND = #{safeRemind,jdbcType=INTEGER},
      MASS_REMIND = #{massRemind,jdbcType=INTEGER},
      APPROVAL_REMIND = #{approvalRemind,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where UID = #{uid,jdbcType=VARCHAR}
  </update>
  
  <!-- 更改审批，安全，执行，质量状态  shenwei-->
  <update id="updateByState" parameterType="pd" >
  	 update tt_taskinfo
  	 <set > 
  	 		<if test="APPROVAL_STATE != null" >
        APPROVAL_STATE = #{APPROVAL_STATE,jdbcType=INTEGER},
     		 </if>
     		 <if test="TASK_STATE != null" >
         TASK_STATE = #{TASK_STATE,jdbcType=INTEGER},
     		 </if>
     		 <if test="TASK_STATE != null" >
         TASK_STATE = #{TASK_STATE,jdbcType=INTEGER},
     		 </if>
     		 <if test="TRACK_START_DATE != null" >
         TRACK_START_DATE = #{TRACK_START_DATE,jdbcType=TIMESTAMP},
     		 </if>
     		 <if test="TRACK_END_DATE != null" >
        TRACK_END_DATE = #{TRACK_END_DATE,jdbcType=TIMESTAMP},
     		 </if>
     		 <if test="UPDATE_DATE != null" >
        UPDATE_DATE = #{UPDATE_DATE,jdbcType=INTEGER},
     		 </if>
     		 <if test="ACTUALSTART != null" >
        ACTUALSTART = #{ACTUALSTART,jdbcType=INTEGER},
     		 </if>
     		 <if test="ACTUALFINISH != null" >
        ACTUALFINISH = #{ACTUALFINISH,jdbcType=INTEGER},
     		 </if>
     		 <if test="ACTUALDURATION != null" >
        ACTUALDURATION = #{ACTUALDURATION,jdbcType=INTEGER},
     		 </if>
     		 <if test="PERCENTCOMPLETE != null" >
        PERCENTCOMPLETE = #{PERCENTCOMPLETE,jdbcType=INTEGER},
     		 </if>
      </set>
  	 where UID = #{UID,jdbcType=VARCHAR}
  </update>
  
  <!-- 通过任务id查询项目id -->
  <select id="findIteminfoByTaskId" resultType="pd" parameterType="pd" >
   select 
    *
    from tt_taskinfo
    where UID = #{taskid,jdbcType=VARCHAR}
  
  </select>
  
  <!-- 通过项目id查询任务id -->
  <select id="findTaskIdByItemId" resultType="pd" parameterType="pd">
   select 
    UID
    from tt_taskinfo
    where PROJECTUID = #{ITEM_ID}
  </select>
    <!-- 通过子任务id查询最顶级父任务信息 -->
  <select id="findPTaskOneByCId" resultType="pd" parameterType="pd" >
    select 
    UID, ID, PARENTTASKUID, NAME, START, FINISH, DURATION, WORK, PERCENTCOMPLETE, WEIGHT, 
    CONSTRAINTTYPE, CONSTRAINTDATE, MILESTONE, SUMMARY, CRITICAL, PRIORITY, NOTES, DEPARTMENT, 
    PRINCIPAL, PREDECESSORLINK, FIXEDDATE, PROJECTUID, ACTUALSTART, ACTUALFINISH, ACTUALDURATION, 
    ASSIGNMENTS, WBS, OUTLINENUMBER, CRITICAL2, TASK_STATE, QUALITY_STATE, SECURITY_STATE, LW_FIXED_AMOUNT, 
    LW_COEFFICIENT_AMOUNT, LW_TOTAL_AMOUNT, PACT_SETTLEMENT, WORKNUM, APPROVAL_STATE, 
    WAGE_APPROVAL, SECURITY_REMIND, QUALITY_REMIND, APPROVAL_REMIND, CREATE_DATE, CREATE_BY, 
    UPDATE_DATE, UPDATE_BY ,(SELECT taskName(#{TASK_ID,jdbcType=VARCHAR}) )AS TASKNAME,TASK_UNIT,TRACK_END_DATE,TRACK_START_DATE
    ,CONSTRUCTION_USER,BUSINESS_USER,TECHNOLOGY_USER,QUALITY_USER,SECURITY_USER
    from tt_taskinfo
    where UID = (SELECT `findPTaskOneByCId`(#{TASK_ID,jdbcType=VARCHAR})) 
  
  </select>
  
  <!-- 任务进程报表 -->
  <select id="findTaskinfoReportsByItemId" resultType="pd" parameterType="pd">
  
 
  SELECT 
  (SELECT 
    COUNT(1) 
  FROM
    `tt_taskinfo` t 
  WHERE t.`PROJECTUID` =#{ITEM_ID} 
    AND TO_DAYS(t.START) &gt; TO_DAYS(t.ACTUALSTART) 
    AND t.TASK_STATE  &lt;&gt; 0) AS tiqiankaishi,
  (SELECT 
    COUNT(1) 
  FROM
    `tt_taskinfo` t 
  WHERE t.`PROJECTUID` = #{ITEM_ID} 
    AND TO_DAYS(t.START) &lt; TO_DAYS(t.ACTUALSTART) 
    AND t.TASK_STATE  &lt;&gt; 0) AS zhihoukaishi,
  (SELECT 
    COUNT(1) 
  FROM
    `tt_taskinfo` t 
  WHERE t.`PROJECTUID` =#{ITEM_ID} 
    AND TO_DAYS(t.FINISH) &gt; TO_DAYS(t.ACTUALFINISH) 
    AND t.TASK_STATE = 3) AS tiqianwancheng,
  (SELECT 
    COUNT(1) 
  FROM
    `tt_taskinfo` t 
  WHERE t.`PROJECTUID` = #{ITEM_ID} 
    AND TO_DAYS(t.FINISH) &lt; TO_DAYS(t.ACTUALFINISH) 
    AND t.TASK_STATE = 3) AS zhihouwancheng,
  (SELECT 
    COUNT(1) 
  FROM
    `tt_taskinfo` t 
  WHERE t.`PROJECTUID` = #{ITEM_ID}  
    AND t.DURATION  &lt;&gt; t.ACTUALDURATION) AS gongqibiangeng 
FROM
  tt_taskinfo task 
WHERE task.PROJECTUID = #{ITEM_ID} 
GROUP BY tiqiankaishi 
  
  </select>
  <!-- 提前开始任务数 列表 -->
  <select id="findTaskinfoBytiqiankaishi" resultType="pd" parameterType="pd">
	  SELECT
	t.`NAME`,t.START,t.FINISH,t.ACTUALSTART,t.ACTUALFINISH,IFNULL(TIMESTAMPDIFF(DAY,t.START,t.ACTUALSTART),'') AS kaishicha,IFNULL(TIMESTAMPDIFF(DAY,t.FINISH,t.ACTUALFINISH),'') AS jieshucha
	FROM
	  `tt_taskinfo` t 
	WHERE t.`PROJECTUID` = #{ITEM_ID} 
	  AND TO_DAYS(t.START) &gt;TO_DAYS(t.ACTUALSTART) 
	  AND t.TASK_STATE &lt;&gt; 0 
  </select>
    <!-- 滞后开始任务数 列表 -->
  <select id="findTaskinfoByzhihoukaishi" resultType="pd" parameterType="pd">
	  SELECT
	t.`NAME`,t.START,t.FINISH,t.ACTUALSTART,t.ACTUALFINISH,IFNULL(TIMESTAMPDIFF(DAY,t.START,t.ACTUALSTART),'') AS kaishicha,IFNULL(TIMESTAMPDIFF(DAY,t.FINISH,t.ACTUALFINISH),'') AS jieshucha
	FROM
	  `tt_taskinfo` t 
	WHERE t.`PROJECTUID` = #{ITEM_ID} 
	  AND TO_DAYS(t.START) &lt; TO_DAYS(t.ACTUALSTART) 
	  AND t.TASK_STATE &lt;&gt; 0 
  </select>
    <!-- 提前完成任务数 列表 -->
  <select id="findTaskinfoBytiqianwancheng" resultType="pd" parameterType="pd">
	  SELECT 
	   t.`NAME`,t.START,t.FINISH,t.ACTUALSTART,t.ACTUALFINISH,IFNULL(TIMESTAMPDIFF(DAY,t.START,t.ACTUALSTART),'') AS kaishicha,IFNULL(TIMESTAMPDIFF(DAY,t.FINISH,t.ACTUALFINISH),'') AS jieshucha
	  FROM
	    `tt_taskinfo` t 
	  WHERE t.`PROJECTUID` =  #{ITEM_ID} 
	    AND TO_DAYS(t.FINISH) &gt; TO_DAYS(t.ACTUALFINISH) 
	    AND t.TASK_STATE = 3
  </select>
    <!-- 滞后完成任务数 列表 -->
  <select id="findTaskinfoByzhihouwancheng" resultType="pd" parameterType="pd">
	  SELECT 
	   t.`NAME`,t.START,t.FINISH,t.ACTUALSTART,t.ACTUALFINISH,IFNULL(TIMESTAMPDIFF(DAY,t.START,t.ACTUALSTART),'') AS kaishicha,IFNULL(TIMESTAMPDIFF(DAY,t.FINISH,t.ACTUALFINISH),'') AS jieshucha
	  FROM
	    `tt_taskinfo` t 
	  WHERE t.`PROJECTUID` =  #{ITEM_ID} 
	    AND TO_DAYS(t.FINISH) &lt; TO_DAYS(t.ACTUALFINISH) 
	    AND t.TASK_STATE = 3
  </select>
    <!--工期变更任务数 列表 -->
  <select id="findTaskinfoBygongqibiangeng" resultType="pd" parameterType="pd">
	  SELECT 
	  t.`NAME`,t.START,t.FINISH,t.ACTUALSTART,t.ACTUALFINISH,(ACTUALDURATION-DURATION) AS kaishicha
	  FROM
	    `tt_taskinfo` t 
	  WHERE t.`PROJECTUID` =  #{ITEM_ID} 
	    AND t.DURATION  &lt;&gt; t.ACTUALDURATION
  </select>
  <!-- 任务成本报表 -->
  <select id="findTaskAndTaskCostQuotaList" resultType="pd" parameterType="String" flushCache="false">
 SELECT 
  `taskName` (t.UID) AS taskName,
  t.`OUTLINENUMBER`,
  t.WORKNUM,
  IFNULL(t.TASK_UNIT, '') AS TASK_UNIT,
  (SELECT 
    NAME 
  FROM
    `sys_user` u 
  WHERE u.`USER_ID` = 
    (SELECT 
      task.CONSTRUCTION_USER 
    FROM
      `tt_taskinfo` task 
    WHERE task.`UID` = t.`UID`
      )) AS userName,
  IFNULL(
    (SELECT 
      SUM(
        ROUND(
          tq.quota_price * tq.quota_Consumption,
          2
        )
      ) 
    FROM
      tt_task_quota_detail tq 
    WHERE tq.`TASK_COST_QUOTA_ID` IN 
      (SELECT 
        tc.`TASK_COST_QUOTA_ID` 
      FROM
        tt_task_cost_quota tc 
      WHERE 
          tc.`TASK_ID`=t.`UID`
       
        AND tc.`IS_DEL` = 0 
        AND tc.`APPROVAL_STATE` = 1) 
      AND tq.`IS_DEL` = 0),
    0
  ) AS jihuaMoney,
  IFNULL(sl.outAmout,0) AS shijiMoney 
FROM
  `tt_taskinfo` t
 LEFT JOIN
  (SELECT IFNULL(SUM(ss.outamout), 0) AS outamout,ss.task_id  FROM (SELECT 
  tu.AMOUNT AS outAmout ,
  tu.`OUT_STORAGE_OBJ`  AS task_id
FROM
  `tt_out_storage` o 
  LEFT JOIN `tt_item_storage` i 
    ON o.`ITEM_STORAGE_ID` = i.`ITEM_STORAGE_ID` 
  LEFT JOIN `tt_out_task` tu 
    ON o.`OUT_STORAGE_ID` = tu.`OUT_STORAGE_ID` 
WHERE  o.`IS_DEL` = 0 
UNION
SELECT 
  ip.PAYMENT_AMOUNT AS outAmout ,
  ip.payment_obj AS task_id
FROM
  `tt_item_payment`  ip
WHERE ip.is_del = 0 
UNION
SELECT 
  lt.AMOUNT AS outAmout, 
  lt.task_id  AS task_id
FROM
  `tt_lease_task` lt 
WHERE lt.is_del = 0) ss 
GROUP BY ss.task_id) AS sl
  ON t.`UID` = sl.task_id 
  
  
  
WHERE t.`UID` IN 
 <foreach item="arrTaskIDS" index="index" collection="array" open="(" separator="," close=")">
                  #{arrTaskIDS}
             </foreach>
             
             ORDER BY t.`ID`
  </select>
  
  
 <!-- 资源消耗报表 -->
 <select id="taskQuotaDetailConsumeExcel" resultType="pd" parameterType="String" flushCache="false">
 
 SELECT 
  quota_name,
  quota_Specification,
  quota_unit,
  ifnull(SUM(quota_unit_Consumption),0) AS jihua,
  ifnull((SELECT 
    SUM(o.`NUM`) 
  FROM
    `tt_out_storage` o 
    LEFT JOIN `tt_item_storage` i 
      ON o.`ITEM_STORAGE_ID` = i.`ITEM_STORAGE_ID` 
  WHERE i.NAME = tq.quota_name 
    AND i.SPECIFICATION = tq.`QUOTA_SPECIFICATION` 
    AND i.UNIT = tq.`QUOTA_UNIT` 
    AND o.OUT_STORAGE_OBJ IN
     <foreach item="arrTaskIDS" index="index" collection="array" open="(" separator="," close=")">
                  #{arrTaskIDS}
             </foreach>
    
    ),0) AS shiji ,
    ifnull((SELECT 
    SUM(o.`NUM`) 
  FROM
    `tt_out_storage` o 
    LEFT JOIN `tt_item_storage` i 
      ON o.`ITEM_STORAGE_ID` = i.`ITEM_STORAGE_ID` 
  WHERE i.NAME = tq.quota_name 
    AND i.SPECIFICATION = tq.`QUOTA_SPECIFICATION` 
    AND i.UNIT = tq.`QUOTA_UNIT` 
    AND o.OUT_STORAGE_OBJ IN 
    <foreach item="arrTaskIDS" index="index" collection="array" open="(" separator="," close=")">
                  #{arrTaskIDS}
             </foreach>
    )-SUM(quota_unit_Consumption),0) AS mubiaocha
    
FROM
  tt_task_quota_detail tq 
WHERE tq.`TASK_COST_QUOTA_ID` IN 
  (SELECT 
    tc.`TASK_COST_QUOTA_ID` 
  FROM
    tt_task_cost_quota tc 
  WHERE tc.`TASK_ID` IN <foreach item="arrTaskIDS" index="index" collection="array" open="(" separator="," close=")">
                  #{arrTaskIDS}
             </foreach>
    AND tc.`IS_DEL` = 0 
    AND tc.`APPROVAL_STATE` = 1) 
GROUP BY tq.quota_name,
  tq.quota_Specification,
  tq.quota_unit 
  AND tq.`IS_DEL` = 0 
UNION
SELECT 
  i.`NAME`,
  i.`SPECIFICATION`,
  i.`UNIT`,
  0,
  SUM(o.`NUM`),
   SUM(o.`NUM`)
   
FROM
  `tt_out_storage` o 
  LEFT JOIN `tt_item_storage` i 
    ON o.`ITEM_STORAGE_ID` = i.`ITEM_STORAGE_ID` 
WHERE o.`OUT_STORAGE_OBJ` IN 
<foreach item="arrTaskIDS" index="index" collection="array" open="(" separator="," close=")">
                  #{arrTaskIDS}
             </foreach>
  AND i.name NOT IN 
  (SELECT 
    quota_name 
  FROM
    tt_task_quota_detail tq 
  WHERE tq.`TASK_COST_QUOTA_ID` IN 
    (SELECT 
      tc.`TASK_COST_QUOTA_ID` 
    FROM
      tt_task_cost_quota tc 
    WHERE tc.`TASK_ID` IN 
    <foreach item="arrTaskIDS" index="index" collection="array" open="(" separator="," close=")">
                  #{arrTaskIDS}
             </foreach>
      AND tc.`IS_DEL` = 0 
      AND tc.`APPROVAL_STATE` = 1)) 
GROUP BY i.`NAME`,
  i.`SPECIFICATION`,
  i.`UNIT` 
 
 
 
 </select>
 
 
 <!-- 仓储报表 -->
 
 <select id="storageExcel" resultType="pd" parameterType="pd">
 
 

SELECT 
  c.name,
  c.SPECIFICATION,
  c.unit,
  SUM(c.in_num) AS in_num,
  IFNULL(ROUND((SUM(c.in_amount) / SUM(c.in_num)),2),0) AS in_danjia,
  SUM(c.in_amount) AS in_amount,
  SUM(c.out_num) AS out_num,
  IFNULL(ROUND((SUM(c.out_amount) / SUM(c.out_num)),2),0) AS out_danjia,
  SUM(c.out_amount) AS out_amount,
  c.ITEM_STORAGE_ID 
FROM
  (SELECT 
    t.`ITEM_STORAGE_ID`,
    t.`NAME`,
    t.`SPECIFICATION`,
    t.`UNIT`,
    in_sto.in_num,
    in_sto.in_amount,
    0 AS out_num,
    0 AS out_amount 
  FROM
    tt_item_storage t,
    (SELECT 
      ins.`ITEM_STORAGE_ID`,
      SUM(ins.`NUM`) AS in_num,
      SUM(ins.`AMOUNT`) AS in_amount 
    FROM
      tt_in_storage ins 
      WHERE 1=1
     <if test="StartData != null and EndData!=''" >
 		     	and   ins.`CREATE_DATE` &gt;= #{StartData} 	 
 	</if>
 	 <if test="EndData != null and EndData!=''" >
 		     		 and   ins.`CREATE_DATE` &lt;= #{EndData!=}  	 
 	</if>
 	
      
   
    GROUP BY ins.`ITEM_STORAGE_ID`) in_sto 
  WHERE t.`ITEM_STORAGE_ID` = in_sto.ITEM_STORAGE_ID 
    AND t.`ITEM_ID` = #{ITEM_ID} 
  UNION
  SELECT 
    t.`ITEM_STORAGE_ID`,
    t.`NAME`,
    t.`SPECIFICATION`,
    t.`UNIT`,
    0 AS in_num,
    0 AS in_amount,
    out_sto.out_num,
    out_sto.out_amount 
  FROM
    tt_item_storage t,
    (SELECT 
      ins.`ITEM_STORAGE_ID`,
      SUM(ins.`NUM`) AS out_num,
      SUM(ins.`AMOUNT`) AS out_amount 
    FROM
      tt_out_storage ins 
    WHERE 
       1=1
    <if test="StartData != null  and EndData!=''" >
 		     	and   ins.`CREATE_DATE` &gt;= #{StartData} 	 
 	</if>
 	 <if test="EndData != null and EndData!=''" >
 		     		 and   ins.`CREATE_DATE` &lt;= #{EndData}  	 
 	</if>
    GROUP BY ins.`ITEM_STORAGE_ID`) out_sto 
  WHERE t.`ITEM_STORAGE_ID` = out_sto.ITEM_STORAGE_ID 
    AND t.`ITEM_ID` = #{ITEM_ID}) c 
GROUP BY c.ITEM_STORAGE_ID 
 </select>
 
 <!-- 采购报表 -->
 <select id="purchaseExcal" resultType="pd" parameterType="pd">
 	
SELECT 
pd.`DECLARE_NO`,
pd.`PURCHASE_ID`,
  p.`NAME`,
  p.`SPECIFICATION`,
  p.`UNIT`,
  IFNULL(SUM(pd.`DECLARE_NUM`),0) AS DECLARE_NUM,
  IFNULL(SUM(pd.`DECLARE_AMOUNT`),0) as DECLARE_AMOUNT,
  IFNULL(SUM(pd.`INSTRUCTIONS_NUM`),0) as INSTRUCTIONS_NUM,
  IFNULL(SUM(pd.`INSTRUCTIONS_AOMUNT`),0) as INSTRUCTIONS_AOMUNT,
    IFNULL((SELECT SUM(t.num) FROM tt_in_storage t  WHERE t.`SPECIFICATION` IN(
	SELECT tt.`DECLARE_NO` FROM tt_purchase_declare tt WHERE tt.`PURCHASE_ID`=p.PURCHASE_ID AND tt.`ITEM_ID`=#{ITEM_ID}
	
	
   <if test="StartData != null  and EndData!=''" >
 		     	and    tt.CREATE_DATE &gt;= #{StartData} 	 
 	</if>
 	 <if test="EndData != null and EndData!=''" >
 		     		 and    tt.CREATE_DATE &lt;= #{EndData}  	 
 	</if>
  
  
  )),0) AS in_num,IFNULL((
  
  SELECT SUM(t.AMOUNT) FROM tt_in_storage t  WHERE t.`SPECIFICATION` IN(
	SELECT tt.`DECLARE_NO` FROM tt_purchase_declare tt WHERE tt.`PURCHASE_ID`=p.PURCHASE_ID AND tt.`ITEM_ID`=#{ITEM_ID}
	
	
	 <if test="StartData != null  and EndData!=''" >
 		     	and    tt.CREATE_DATE &gt;= #{StartData} 	 
 	</if>
 	 <if test="EndData != null and EndData!=''" >
 		     		 and    tt.CREATE_DATE &lt;= #{EndData}  	 
 	</if>
  
  )),0) AS in_amount
FROM
  tt_purchase p ,
  tt_purchase_declare pd
  WHERE p.`PURCHASE_ID`=pd.`PURCHASE_ID`
  AND pd.`ITEM_ID`=#{ITEM_ID}
  
   <if test="StartData != null  and EndData!=''" >
 		     	and    pd.CREATE_DATE &gt;= #{StartData} 	 
 	</if>
 	 <if test="EndData != null and EndData!=''" >
 		     		 and    pd.CREATE_DATE &lt;= #{EndData}  	 
 	</if>
  
  GROUP BY pd.`PURCHASE_ID`;
  
 
 
 </select>
 
 
   <!-- 任务列表甘特图查询自动提示 sw20160321 -->
  <select id="findAutoComplete" resultType="pd" parameterType="pd" >
    select DISTINCT
    NAME as id, NAME as text
     from tt_taskinfo 
    where PROJECTUID =  #{ITEM_ID,jdbcType=VARCHAR}
     <if test="KEY != null" >
 		and (NAME like  #{KEY,jdbcType=VARCHAR})      		 
 	</if>
    
  
  </select>
  
     <!--判断任务角色-->
  <select id="findTaskinfoByUidAndConstructionUser" resultType="pd" parameterType="pd" >
      SELECT SECURITY_USER,QUALITY_USER,TECHNOLOGY_USER,BUSINESS_USER,CONSTRUCTION_USER
     FROM tt_taskinfo 
    WHERE UID =  (SELECT findPTaskOneByCId(#{TASK_ID,jdbcType=VARCHAR}))
    
  </select>
  
  <!-- 更改Sstate-->
	  <update id="updateSecurityState" parameterType="pd" >
  		 update  tt_taskinfo  set SECURITY_STATE= #{securityState}  where UID = #{taskId}
	  </update>
  
   <!-- 更改Qstate-->
	  <update id="updateQualityState" parameterType="pd" >
  		 update  tt_taskinfo  set QUALITY_STATE= #{qualityState}  where UID = #{taskId}
	  </update>
  
</mapper>