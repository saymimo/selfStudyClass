<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ttItemCcMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.ttItemCc" >
    <id column="ITEM_SN_ID" property="itemSnId" jdbcType="VARCHAR" />
    <result column="CC_SN" property="ccSn" jdbcType="VARCHAR" />
    <result column="ITEM_ID" property="itemId" jdbcType="VARCHAR" />
    <result column="CC_REMARK" property="ccRemark" jdbcType="VARCHAR" />
    <result column="CC_UPDATE_TIME" property="ccUpdateTime" jdbcType="TIMESTAMP" />
    <result column="CC_EXPIRED" property="ccExpired" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ITEM_SN_ID, CC_SN, ITEM_ID, CC_REMARK, CC_UPDATE_TIME, CC_EXPIRED
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_item_cc
    where ITEM_SN_ID = #{itemSnId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_item_cc
    where ITEM_SN_ID = #{itemSnId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.ttItemCc" >
    insert into tt_item_cc (ITEM_SN_ID, CC_SN, ITEM_ID, 
      CC_REMARK, CC_UPDATE_TIME, CC_EXPIRED
      )
    values (#{itemSnId,jdbcType=VARCHAR}, #{ccSn,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{ccRemark,jdbcType=VARCHAR}, #{ccUpdateTime,jdbcType=TIMESTAMP}, #{ccExpired,jdbcType=VARCHAR}
      )
  </insert>
  
   
  <!-- 考勤设备下   当考勤设备改变时   更改劳务人员考勤设备-->
  <update id="updateCcSn" parameterType="pd" >
  UPDATE tt_lw_personalinfo p
SET p.`CC_SN`=(SELECT GROUP_CONCAT(c.`CC_SN`)
FROM tt_item_cc c
WHERE c.`ITEM_ID`= #{itemId,jdbcType=VARCHAR})
WHERE p.`ITEM_ID`=#{itemId,jdbcType=VARCHAR}
  </update>
  <!-- 获取当前羡慕下所有人员信息   不带分页 -->
  <select id="findPersonByItemId" resultType="pd" parameterType="pd">
  SELECT 
  * 
FROM
  tt_lw_personalinfo p 
WHERE p.`ITEM_ID` =#{itemId,jdbcType=VARCHAR}
  </select>
  <!-- 将 员工 从 设备 移除  或者  添加 -->
   <update id="updateCcSns" parameterType="pd" >
UPDATE 
  tt_lw_personalinfo p 
SET
  p.`CC_SN` = #{ccSn}
WHERE p.`CC_LW_PERSONALINFO_ID` =#{ccId}
  </update>
  
  <!-- 批量删除 -->
	<delete id="deleteAllM" parameterType="pd" flushCache="false">
	  delete from tt_item_cc
    where ITEM_ID=#{itemId,jdbcType=VARCHAR} and 
			CC_SN in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	<!-- 移除设备时  查询所有  要移出的人员 -->
	<select id="findCcIdByCcSn"  resultType="java.lang.String" parameterType="pd">
	SELECT 
  GROUP_CONCAT(p.`CC_LW_PERSONALINFO_ID`) 
FROM
  tt_lw_personalinfo p 
WHERE p.`ITEM_ID`=#{itemId,jdbcType=VARCHAR} 
  AND 
    <foreach item="item" index="index" collection="array" open="(" separator="or" close=")">
            p.`CC_SN` LIKE   '%${item}%' 
   </foreach>
  
	</select>
	
	
	<!-- 删除根据  itemId -->
	<delete id="deleteByFk" parameterType="pd" flushCache="false">
	  delete from tt_item_cc
    where ITEM_ID=#{itemId,jdbcType=VARCHAR}
	</delete>
	<!-- 查询当前项目下面 所有设备ID -->
	<select id="findSN" resultType="java.lang.String" parameterType="pd">
	SELECT GROUP_CONCAT(c.`CC_SN`) AS sn
FROM tt_item_cc c 
WHERE c.`ITEM_ID`=#{itemId,jdbcType=VARCHAR}
	</select>
	<!-- 需要移除的人员     -->
	<select id="selectByCcId" resultType="pd" parameterType="pd">
	SELECT *
FROM tt_lw_personalinfo p
WHERE p.`CC_LW_PERSONALINFO_ID` IN
<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</select>
	
	
	<!-- 但前设备下的员工     带分页 -->
	<select id="listPagePersonByCcSn" resultType="pd" parameterType="pd">
	SELECT 
  * 
FROM
  tt_lw_personalinfo p 
WHERE p.`CC_SN` LIKE '%${pd.ccSn}%' 
  AND p.`ITEM_ID` = #{pd.itemId,jdbcType=VARCHAR} 
  <if test="pd.NAME != null and pd.NAME !='' ">
  and (
      p.`LW_NAME` LIKE  #{pd.NAME2,jdbcType=VARCHAR} 
      OR p.`LW_IDENTITYCODE` LIKE #{pd.NAME2,jdbcType=VARCHAR} 
      OR p.`MOBILE_PHONE` LIKE #{pd.NAME2,jdbcType=VARCHAR}
      )
  </if>
	</select>
	
	<!-- 不是当前设备下的员工    不带分页-->
	<select id="allPersonByCcSn" resultType="pd" parameterType="pd">
	SELECT 
  * 
FROM
  tt_lw_personalinfo p 
WHERE
p.`LW_PERSONALINFO_ID` NOT IN 
  (SELECT 
    LW_PERSONALINFO_ID 
  FROM
    tt_lw_personalinfo 
  WHERE CC_SN LIKE '%${ccSn}%' 
    AND ITEM_ID = #{itemId,jdbcType=VARCHAR}) 
  AND p.`ITEM_ID` = #{itemId,jdbcType=VARCHAR} 
	</select>
	
  <!-- 查找所有   设备信息   带分页 itemId -->
  <select id="listPageByItemid" resultMap="BaseResultMap" parameterType="pd">
SELECT 
  * 
FROM
  tt_item_cc c 
WHERE c.`ITEM_ID` =#{pd.ITEM_ID,jdbcType=VARCHAR}
  </select>
  
<!-- 查找所有 不  带分页 itemId -->  
   <select id="listAll" resultMap="BaseResultMap" parameterType="pd">
SELECT 
  * 
FROM
  tt_item_cc c 

  </select>
  
<update id="upCcSnForRemove" parameterType="pd">
UPDATE 
  tt_lw_personalinfo t 
SET
  t.`CC_SN` = 
  (SELECT 
    GROUP_CONCAT(tic.`CC_SN`) 
  FROM
    tt_item_cc tic 
  WHERE tic.`CC_SN` != #{ccSn,jdbcType=VARCHAR}
    AND tic.`ITEM_ID` = #{itemId,jdbcType=VARCHAR}) 
WHERE t.`IS_DEL` = 0 
  AND t.`ITEM_ID` = #{itemId,jdbcType=VARCHAR}
</update>  
  
  <insert id="insertSelective" parameterType="com.ssc.entity.system.ttItemCc" >
    insert into tt_item_cc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemSnId != null" >
        ITEM_SN_ID,
      </if>
      <if test="ccSn != null" >
        CC_SN,
      </if>
      <if test="itemId != null" >
        ITEM_ID,
      </if>
      <if test="ccRemark != null" >
        CC_REMARK,
      </if>
      <if test="ccUpdateTime != null" >
        CC_UPDATE_TIME,
      </if>
      <if test="ccExpired != null" >
        CC_EXPIRED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemSnId != null" >
        #{itemSnId,jdbcType=VARCHAR},
      </if>
      <if test="ccSn != null" >
        #{ccSn,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="ccRemark != null" >
        #{ccRemark,jdbcType=VARCHAR},
      </if>
      <if test="ccUpdateTime != null" >
        #{ccUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ccExpired != null" >
        #{ccExpired,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.ttItemCc" >
    update tt_item_cc
    <set >
      <if test="ccSn != null" >
        CC_SN = #{ccSn,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        ITEM_ID = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="ccRemark != null" >
        CC_REMARK = #{ccRemark,jdbcType=VARCHAR},
      </if>
      <if test="ccUpdateTime != null" >
        CC_UPDATE_TIME = #{ccUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ccExpired != null" >
        CC_EXPIRED = #{ccExpired,jdbcType=VARCHAR},
      </if>
    </set>
    where ITEM_SN_ID = #{itemSnId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.ttItemCc" >
    update tt_item_cc
    set CC_SN = #{ccSn,jdbcType=VARCHAR},
      ITEM_ID = #{itemId,jdbcType=VARCHAR},
      CC_REMARK = #{ccRemark,jdbcType=VARCHAR},
      CC_UPDATE_TIME = #{ccUpdateTime,jdbcType=TIMESTAMP},
      CC_EXPIRED = #{ccExpired,jdbcType=VARCHAR}
    where ITEM_SN_ID = #{itemSnId,jdbcType=VARCHAR}
  </update>
</mapper>