<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ItemPersonMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.ItemPerson" >
    <id column="ITEM_PERSON_ID" property="itemPersonId" jdbcType="VARCHAR" />
    <result column="ITEM_ID" property="itemId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="STRUCT_ID" property="structId" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="DUTYDEPICT" property="dutydepict" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ITEM_PERSON_ID, ITEM_ID, USER_ID, STRUCT_ID, ROLE_ID, DUTYDEPICT
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_item_person
    where ITEM_PERSON_ID = #{itemPersonId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_item_person
    where ITEM_PERSON_ID = #{itemPersonId,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByItemPersonUserId" parameterType="pd" >
    delete from tt_item_person
    where USER_ID = #{USER_ID,jdbcType=VARCHAR}
  </delete>
  
  
  <insert id="insert" parameterType="com.ssc.entity.system.ItemPerson" >
    insert into tt_item_person (ITEM_PERSON_ID, ITEM_ID, USER_ID, 
      STRUCT_ID, ROLE_ID, DUTYDEPICT
      )
    values (#{itemPersonId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{structId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{dutydepict,jdbcType=VARCHAR}
      )
  </insert>
  
  <!-- 显示list     sf      -->
  <select id="list" useCache="false" resultType="pd" parameterType="pd">
  SELECT  t.`ITEM_NAME`,t.`START_DATE`,t.`END_DATE`,p.`ITEM_PERSON_ID`,p.`ITEM_ID`,p.`USER_ID`,p.`DUTYDEPICT`,
	(SELECT u.`NAME` FROM sys_user u WHERE u.`USER_ID`=p.`USER_ID`) AS USERNAME,t.`CREATE_DATE`,
	(SELECT GROUP_CONCAT(sl.`ROLE_NAME`)<!-- 角色 -->
	FROM sys_role sl
	WHERE sl.`ROLE_ID` IN(SELECT   r.`ROLE_ID`
	FROM sys_user_role r
	WHERE r.`USER_ID`=p.`USER_ID`)
	) AS ROLE_NAME
	
	FROM tt_item_person  p ,tt_iteminfo t
	WHERE p.`ITEM_ID`=t.`ITEM_ID` AND p.`USER_ID`=#{userId}
	 <if test="TENDERNAME!=null and TENDERNAME != '' ">
	 and (t.`ITEM_NAME` like  #{TENDERNAME2,jdbcType=VARCHAR})
	 </if>
	GROUP BY p.`ITEM_ID`
	order by t.`CREATE_DATE`
  </select>
  <!-- 显示list     sf      -->
  
  <!-- 显示list带用户职称带分页     sf      -->
  <select id="listPageAndRole" useCache="false" resultType="pd" parameterType="pd">
  SELECT 
  t.`ITEM_NAME`,
  t.`START_DATE`,
  t.`END_DATE`,
  p.`ITEM_PERSON_ID`,
  p.`ITEM_ID`,
  p.`USER_ID`,
  p.`DUTYDEPICT`,
  (SELECT 
    u.`NAME` 
  FROM
    sys_user u 
  WHERE u.`USER_ID` = p.`USER_ID`) AS USERNAME,
  t.`CREATE_DATE`,
  (SELECT 
    r.`ROLE_NAME` 
  FROM
    sys_role r 
  WHERE r.`ROLE_ID` = p.`ROLE_ID`) AS ROLE_NAME 
FROM
  tt_item_person p,
  tt_iteminfo t 
WHERE p.`ITEM_ID` = t.`ITEM_ID` 
 <if test="pd.TENDERNAME!=null and pd.TENDERNAME != '' ">
	 and (t.`ITEM_NAME` like  #{pd.TENDERNAME2,jdbcType=VARCHAR})
	 </if>
  AND p.`USER_ID` =#{pd.userId} 
ORDER BY t.`CREATE_DATE` 
  </select>
  <!-- 显示list带用户职称     sf      -->
  
  <!-- 主键查询 -->
  <select id="findByPK" useCache="false" resultType="pd" parameterType="pd">
  SELECT  t.`ITEM_NAME`,t.`START_DATE`,t.`END_DATE`,p.`ITEM_PERSON_ID`,p.`ITEM_ID`,p.`USER_ID`,p.`DUTYDEPICT`,
	(SELECT u.`NAME` FROM sys_user u WHERE u.`USER_ID`=p.`USER_ID`) AS USERNAME,
	(SELECT GROUP_CONCAT(sl.`ROLE_NAME`)<!-- 角色 -->
	FROM sys_role sl
	WHERE sl.`ROLE_ID` IN(SELECT   r.`ROLE_ID`
	FROM sys_user_role r
	WHERE r.`USER_ID`=p.`USER_ID`)
	) AS ROLE_NAME
	
	FROM tt_item_person  p ,tt_iteminfo t
	WHERE p.`ITEM_ID`=t.`ITEM_ID` AND p.`ITEM_PERSON_ID`=#{itemPersonId}
	
  </select>
  
  <insert id="insertSelective" parameterType="com.ssc.entity.system.ItemPerson" >
    insert into tt_item_person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemPersonId != null" >
        ITEM_PERSON_ID,
      </if>
      <if test="itemId != null" >
        ITEM_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="structId != null" >
        STRUCT_ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="dutydepict != null" >
        DUTYDEPICT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemPersonId != null" >
        #{itemPersonId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="structId != null" >
        #{structId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="dutydepict != null" >
        #{dutydepict,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.ItemPerson" >
    update tt_item_person
    <set >
      <if test="itemId != null" >
        ITEM_ID = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="structId != null" >
        STRUCT_ID = #{structId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="dutydepict != null" >
        DUTYDEPICT = #{dutydepict,jdbcType=VARCHAR},
      </if>
    </set>
    where ITEM_PERSON_ID = #{itemPersonId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.ItemPerson" >
    update tt_item_person
    set ITEM_ID = #{itemId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      STRUCT_ID = #{structId,jdbcType=VARCHAR},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      DUTYDEPICT = #{dutydepict,jdbcType=VARCHAR}
    where ITEM_PERSON_ID = #{itemPersonId,jdbcType=VARCHAR}
  </update>
  
  
  
   <delete id="deleteByitemidAndStructid" parameterType="pd" >
    delete from tt_item_person
    where STRUCT_ID = #{STRUCT_ID} and ITEM_ID=#{itemId}
  </delete>
  
  
  <select id="listItemAllByItemId" parameterType="pd" resultType="pd" >
    SELECT a.role_id,a.ROLE_NAME,a.ROLE_CODE,GROUP_CONCAT(c.USERNAME) AS USERNAME,GROUP_CONCAT(c.NAME) AS NAME
	FROM sys_role a
	LEFT JOIN tt_item_person b ON (a.ROLE_ID=b.ROLE_ID AND b.ITEM_ID= #{ITEM_ID,jdbcType=VARCHAR} )
	LEFT JOIN sys_user c ON b.USER_ID=c.USER_ID
	WHERE  a.parent_id=4  
	GROUP BY a.ROLE_ID
  </select>
  
  <!-- 根据角色标识和ITEMID查询ITEM下人员，如施工员 -->
  <select id="findPersonByCode" parameterType="pd" resultType="pd" >
  	SELECT  i.`USER_ID`as id,u.`NAME` as name FROM `tt_item_person` i 
    LEFT JOIN `sys_role` r ON r.role_id = i.`ROLE_ID`  LEFT JOIN `sys_user` u ON u.`USER_ID`=i.`USER_ID`
	 WHERE i.`ITEM_ID`=#{ITEM_ID,jdbcType=VARCHAR}  and  r.`ROLE_CODE` =#{ROLE_CODE,jdbcType=VARCHAR}
	 AND i.`STRUCT_ID`=(SELECT struct_id FROM `tt_iteminfo` WHERE item_id=#{ITEM_ID,jdbcType=VARCHAR})
  </select>
    <!-- 根据角色标识和ITEMID查询ITEM下人员，如施工员 -->
  <select id="findPersonByCodeandUserid" parameterType="pd" resultType="pd" >
  	SELECT  i.`USER_ID`as id,u.`NAME` as name FROM `tt_item_person` i 
    LEFT JOIN `sys_role` r ON r.role_id = i.`ROLE_ID`  LEFT JOIN `sys_user` u ON u.`USER_ID`=i.`USER_ID`
	 WHERE i.`ITEM_ID`=#{ITEM_ID,jdbcType=VARCHAR}  and  r.`ROLE_CODE` =#{ROLE_CODE,jdbcType=VARCHAR}
	 AND i.`STRUCT_ID`=#{STRUCT_ID} AND i.`USER_ID`=#{UserId}
  </select>
  
   <!-- 参数ROLE_CODE USER_ID ITEM_ID,查这个user在这个item下面 担任什么角色 -->
  <select id="findRoleUser" parameterType="pd" resultType="pd" >
  	SELECT  i.`USER_ID`as id,u.`NAME` as name FROM `tt_item_person` i 
    LEFT JOIN `sys_role` r ON r.role_id = i.`ROLE_ID`  LEFT JOIN `sys_user` u ON u.`USER_ID`=i.`USER_ID`
	 WHERE i.`ITEM_ID`=#{ITEM_ID,jdbcType=VARCHAR}   AND r.`ROLE_CODE` =#{ROLE_CODE,jdbcType=VARCHAR}
	 AND i.`STRUCT_ID`=(SELECT struct_id FROM `tt_iteminfo` WHERE item_id=#{ITEM_ID,jdbcType=VARCHAR})
	 AND i.`USER_ID`= #{USER_ID,jdbcType=VARCHAR}
  </select>
  
  <select id="findUserinfoByItemidAndType" resultType="pd" parameterType="pd">
	  	SELECT u.`USER_ID`,u.`NAME` FROM `tt_item_person` i  LEFT JOIN `sys_role` r  ON  i.`ROLE_ID`=r.`ROLE_ID` LEFT JOIN `sys_user` u ON u.`USER_ID`=i.`USER_ID`
		WHERE   i.`ITEM_ID`=#{ITEM_ID} AND r.`ROLE_CODE` IN (#{Type})
  </select>
  
  <select id="findItemPersonLeft" resultType="pd" parameterType="pd">
  		SELECT "-1" AS ITEM_STRUCT_ID,STRUCT_ID ,
  		0 AS STRUCTST_AGE,
		(SELECT struct_name FROM `sys_structinfo` WHERE sys_structinfo.`STRUCT_ID` =tt_iteminfo.`STRUCT_ID`) 
		AS STRUCT_NAME FROM  `tt_iteminfo` WHERE item_id=#{ITEM_ID,jdbcType=VARCHAR} AND is_del=0
		UNION
	  	SELECT ITEM_STRUCT_ID,STRUCT_ID,
	  	(SELECT STRUCTST_AGE FROM `sys_structinfo` WHERE sys_structinfo.`STRUCT_ID` =tt_item_struct.`STRUCT_ID`) AS STRUCTST_AGE,
	  	(SELECT struct_name FROM `sys_structinfo` WHERE sys_structinfo.`STRUCT_ID` =tt_item_struct.`STRUCT_ID`)
	  	 AS STRUCT_NAME FROM `tt_item_struct` WHERE item_id=#{ITEM_ID,jdbcType=VARCHAR} AND is_del=0 AND `APPROVAL_STATUS`=1
			ORDER BY STRUCTST_AGE ASC
		
  </select>
  
  
  <select id="findIteminfoItemPersonByItemId" resultType="pd" parameterType="pd">
  
SELECT 
  u.USER_ID,
  u.USERNAME,
  u.PASSWORD,
  u.LAST_LOGIN,
  u.STRUCT_ID,
  u.NAME,
  u.IP,
  u.EMAIL,
  (SELECT 
    GROUP_CONCAT(REVIEW_GROUP_NAME) 
  FROM
    `tt_review_group` g 
  WHERE g.`REVIEW_GROUP_ID` IN 
    (SELECT 
      r.`TT_REVIEW_GROUP` 
    FROM
      tt_review_group_user r 
    WHERE r.`USER_ID` = u.USER_ID)) AS GROUP_NAME,
  (SELECT 
    GROUP_CONCAT(REVIEW_GROUP_ID) 
  FROM
    `tt_review_group` g 
  WHERE g.`REVIEW_GROUP_ID` IN 
    (SELECT 
      r.`TT_REVIEW_GROUP` 
    FROM
      tt_review_group_user r 
    WHERE r.`USER_ID` = u.USER_ID)) AS GROUP_ID,
  (SELECT 
    ss.`STRUCT_NAME` 
  FROM
    sys_structinfo ss 
  WHERE ss.`STRUCT_ID` = u.STRUCT_ID) AS STRUCT_NAME,
  u.NUMBER,
  u.PHONE,
  u.BM,
  (SELECT 
    d.`NAME` 
  FROM
    sys_dictionaries d 
  WHERE d.`ZD_ID` = u.BM) AS BM_NAME 
FROM
  `sys_user` u 
WHERE u.`USER_ID` IN 
  (SELECT 
    p.`USER_ID` 
  FROM
    `tt_item_person` p,
    `tt_iteminfo` i 
  WHERE p.`ITEM_ID` = i.`ITEM_ID` 
    AND p.`STRUCT_ID` = i.`STRUCT_ID` 
    AND i.`ITEM_ID` = #{ITEM_ID}) 
   </select>
    
  
  <select id="findItemPersonByItemIdNotSelect" resultType="pd" parameterType="pd">
  
SELECT 
  u.USER_ID,
  u.USERNAME,
  u.PASSWORD,
  u.LAST_LOGIN,
  u.STRUCT_ID,
  u.NAME,
  u.IP,
  u.EMAIL,
  (SELECT 
    GROUP_CONCAT(REVIEW_GROUP_NAME) 
  FROM
    `tt_review_group` g 
  WHERE g.`REVIEW_GROUP_ID` IN 
    (SELECT 
      r.`TT_REVIEW_GROUP` 
    FROM
      tt_review_group_user r 
    WHERE r.`USER_ID` = u.USER_ID)) AS GROUP_NAME,
  (SELECT 
    GROUP_CONCAT(REVIEW_GROUP_ID) 
  FROM
    `tt_review_group` g 
  WHERE g.`REVIEW_GROUP_ID` IN 
    (SELECT 
      r.`TT_REVIEW_GROUP` 
    FROM
      tt_review_group_user r 
    WHERE r.`USER_ID` = u.USER_ID)) AS GROUP_ID,
  (SELECT 
    ss.`STRUCT_NAME` 
  FROM
    sys_structinfo ss 
  WHERE ss.`STRUCT_ID` = u.STRUCT_ID) AS STRUCT_NAME,
  u.NUMBER,
  u.PHONE,
  u.BM,
  (SELECT 
    d.`NAME` 
  FROM
    sys_dictionaries d 
  WHERE d.`ZD_ID` = u.BM) AS BM_NAME 
FROM
  `sys_user` u 
WHERE u.`USER_ID` IN 
  (SELECT 
    p.`USER_ID` 
  FROM
    `tt_item_person` p,
    `tt_iteminfo` i 
  WHERE p.`ITEM_ID` = i.`ITEM_ID` 
    AND p.`STRUCT_ID` = i.`STRUCT_ID` 
    AND i.`ITEM_ID` = #{ITEM_ID}) 
    AND  NOT  FIND_IN_SET(u.`USER_ID`,#{USER_LIST})
   </select>
  
  <delete id="deleteItemPersonLeft" parameterType="pd" >
 	 delete from tt_item_person
    where item_id=(SELECT item_id FROM `tt_item_struct` WHERE item_struct_id= #{ITEM_STRUCT_ID,jdbcType=VARCHAR}) 
     AND struct_id=(SELECT struct_id FROM `tt_item_struct` WHERE item_struct_id= #{ITEM_STRUCT_ID,jdbcType=VARCHAR}) 
  </delete>
  <delete id="deleteItemPersonLeftTwo" parameterType="pd" >
 	 delete from tt_item_struct
    where ITEM_STRUCT_ID = #{ITEM_STRUCT_ID,jdbcType=VARCHAR}
  </delete>
</mapper>