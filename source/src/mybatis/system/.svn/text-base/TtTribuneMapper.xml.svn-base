<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtTribuneMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtTribune" >
    <id column="TRIBUNE_ID" property="tribuneId" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="TRIBUNE_CONTENT" property="tribuneContent" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="TRIBUNE_TITLE" property="tribuneTitle" jdbcType="VARCHAR" />
    <result column="READING_NUMBER" property="readingNumber" jdbcType="INTEGER" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="IS_REVIEW" property="isReview" jdbcType="INTEGER" />
    <result column="STATE" property="state" jdbcType="INTEGER" />
    <result column="IS_TOP" property="state" jdbcType="INTEGER" />
    <result column="REVIEW_OBJ_ID" property="reviewObjId" jdbcType="VARCHAR" />
	<result column="REVIEW_TYPE" property="reviewType" jdbcType="CHAR" />
	<result column="FLOW_STATE" property="flowState" jdbcType="INTEGER" />
	<result column="TYPE" property="type" jdbcType="INTEGER" />
	<result column="USER_ID" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    TRIBUNE_ID, PARENT_ID, TRIBUNE_CONTENT, CREATE_DATE, UPDATE_DATE, UPDATE_BY, TRIBUNE_TITLE, 
    READING_NUMBER,IS_REVIEW,REVIEW_OBJ_ID,STATE,IS_TOP,REVIEW_TYPE,FLOW_STATE
  </sql>



<!--投标发送修改-->
 <update id="updateTenderInfoByReviewObjId" parameterType="pd" >
    update tt_tribune
    set
      TRIBUNE_CONTENT = #{tribuneContent,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      TRIBUNE_TITLE = #{tribuneTitle,jdbcType=VARCHAR},
      STATE=#{state},
      REVIEW_TYPE=#{reviewType},
      USER_ID=#{userId},
      REVIEW_GROUP_ID=#{reviewGroupId}
    where REVIEW_OBJ_ID = #{reviewObjId,jdbcType=VARCHAR} and TYPE=#{type}
  </update>
    <!-- 投标发送 -->
	  <update id="updateTenderinfoFlowState" parameterType="pd" >
  		 update  tt_tribune  set STATE=1  where REVIEW_OBJ_ID = #{tenderinfoId} and TYPE=#{type}
	  </update>
  
  <sql id="Blob_Column_List" >
    CREATE_BY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tt_tribune
    where TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_tribune
    where TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtTribune" >
    insert into tt_tribune (TRIBUNE_ID, PARENT_ID, TRIBUNE_CONTENT, 
      CREATE_DATE, UPDATE_DATE, UPDATE_BY, 
      TRIBUNE_TITLE, READING_NUMBER, CREATE_BY,REVIEW_TYPE
      )
    values (#{tribuneId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{tribuneContent,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{tribuneTitle,jdbcType=VARCHAR}, #{readingNumber,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{reviewType,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.TtTribune" >
    insert into tt_tribune
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tribuneId != null" >
        TRIBUNE_ID,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="tribuneContent != null" >
        TRIBUNE_CONTENT,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="tribuneTitle != null" >
        TRIBUNE_TITLE,
      </if>
      <if test="readingNumber != null" >
        READING_NUMBER,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
       <if test="isReview != null" >
        IS_REVIEW,
      </if>
        <if test="state != null" >
        STATE,
      </if>
      <if test="isTop != null" >
        IS_TOP,
      </if>
      <if test="reviewObjId != null" >
        REVIEW_OBJ_ID,
      </if>
      <if test="reviewType != null" >
        REVIEW_TYPE,
      </if>
      <if test="flowState != null" >
        FLOW_STATE,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="reviewGroupId != null" >
        REVIEW_GROUP_ID,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tribuneId != null" >
        #{tribuneId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="tribuneContent != null" >
        #{tribuneContent,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="tribuneTitle != null" >
        #{tribuneTitle,jdbcType=VARCHAR},
      </if>
      <if test="readingNumber != null" >
        #{readingNumber,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="isReview != null" >
        #{isReview,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isTop != null" >
        #{isTop,jdbcType=INTEGER},
      </if>
      <if test="reviewObjId != null" >
        #{reviewObjId,jdbcType=VARCHAR},
      </if>
      <if test="reviewType != null" >
        #{reviewType,jdbcType=CHAR},
      </if>
      <if test="flowState != null" >
        #{flowState,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
        <if test="userId != null" >
        #{userId},
      </if>
      <if test="reviewGroupId != null" >
        #{reviewGroupId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.TtTribune" >
    update tt_tribune
    <set >
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="tribuneContent != null" >
        TRIBUNE_CONTENT = #{tribuneContent,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="tribuneTitle != null" >
        TRIBUNE_TITLE = #{tribuneTitle,jdbcType=VARCHAR},
      </if>
      <if test="readingNumber != null" >
        READING_NUMBER = #{readingNumber,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="isReview != null" >
        IS_REVIEW = #{isReview,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="flowState != null" >
        FLOW_STATE = #{flowState,jdbcType=INTEGER},
      </if>
      <if test="isTop != null" >
        IS_TOP = #{isTop,jdbcType=INTEGER},
      </if>
      <if test="reviewObjId != null" >
        REVIEW_OBJ_ID = #{reviewObjId,jdbcType=VARCHAR},
      </if>
      <if test="reviewType != null" >
        REVIEW_TYPE = #{reviewType,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId},
      </if>
      <if test="reviewGroupId != null" >
        REVIEW_GROUP_ID = #{reviewGroupId},
      </if>
    </set>
    where TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssc.entity.system.TtTribune" >
    update tt_tribune
    set PARENT_ID = #{parentId,jdbcType=VARCHAR},
      TRIBUNE_CONTENT = #{tribuneContent,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      TRIBUNE_TITLE = #{tribuneTitle,jdbcType=VARCHAR},
      READING_NUMBER = #{readingNumber,jdbcType=INTEGER},
      CREATE_BY = #{createBy,jdbcType=VARCHAR}
    where TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.TtTribune" >
    update tt_tribune
    set PARENT_ID = #{parentId,jdbcType=VARCHAR},
      TRIBUNE_CONTENT = #{tribuneContent,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      TRIBUNE_TITLE = #{tribuneTitle,jdbcType=VARCHAR},
      READING_NUMBER = #{readingNumber,jdbcType=INTEGER}
    where TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  </update>
  
   <!--首页显示5条 非评审企业论坛帖子-->
  <select id="findByIsReview" resultType="pd" parameterType="page" useCache="false">
 		select  TRIBUNE_ID,   CREATE_DATE,  TRIBUNE_TITLE,   CREATE_BY,(SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=tt_tribune.CREATE_BY)AS CREATE_NAME,PARENT_ID,STATE
   , IS_REVIEW from tt_tribune WHERE IS_REVIEW='0' ORDER BY create_date DESC LIMIT 5
  </select>
  
  <!-- 查询带分页-->
  <select id="listPageAll" resultType="pd" parameterType="page" useCache="false">
 SELECT  IS_REVIEW,
TRIBUNE_ID,PARENT_ID,(SELECT COUNT(*) FROM `tt_tribune_user_reply` t WHERE t.TRIBUNE_ID=tt_tribune.`TRIBUNE_ID`)AS NUMBER,
TRIBUNE_CONTENT,CREATE_DATE,(SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=tt_tribune.CREATE_BY)AS CREATE_NAME,CREATE_BY,UPDATE_DATE,UPDATE_BY,TRIBUNE_TITLE,READING_NUMBER,
 TYPE,
(SELECT ITEM_NAME FROM `tt_tenderinfo` WHERE `tt_tenderinfo`.`TENDERINFO_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS TENDER_NAME,
(SELECT SEAL_NAME FROM `tt_seal` WHERE `tt_seal`.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS SEAL_NAME,
(SELECT ITEM_NAME FROM `tt_iteminfo` WHERE `tt_iteminfo`.`ITEM_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS ITEM_NAME,STATE,IS_TOP
FROM tt_tribune
WHERE (tt_tribune.`TYPE`=1 OR tt_tribune.`TYPE`=4 OR tt_tribune.`TYPE`=2 OR tt_tribune.`TYPE`=99
OR tt_tribune.`TYPE` IN 
    (SELECT 
      BIANMA 
    FROM
      sys_dictionaries s 
    WHERE s.PARENT_ID = 
      (SELECT 
        s.ZD_ID 
      FROM
        sys_dictionaries s 
      WHERE s.BIANMA = 'SPLX') 
    ORDER BY s.bianma)) AND PARENT_ID=#{pd.PARENT_ID} AND (CREATE_BY=#{pd.userId}  OR ( #{pd.userId} IN
   (SELECT t.`USER_ID` FROM  `tt_tribune_user` t  WHERE t.`TRIBUNE_ID` = tt_tribune.`TRIBUNE_ID`)))
<if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and (TRIBUNE_TITLE LIKE #{pd.NAME2})
		</if>
ORDER BY
CASE 
WHEN tt_tribune.`IS_TOP`=1
THEN  update_date 
END DESC,
CASE
WHEN tt_tribune.`IS_TOP`=0  
THEN CREATE_DATE
END
DESC 
  </select>
  
    <!-- 查询带分页-->
  <select id="listPageAllJSJY" resultType="pd" parameterType="page" useCache="false">
 SELECT  IS_REVIEW,
TRIBUNE_ID,PARENT_ID,(SELECT COUNT(*) FROM `tt_tribune_user_reply` t WHERE t.TRIBUNE_ID=tt_tribune.`TRIBUNE_ID`)AS NUMBER,
TRIBUNE_CONTENT,CREATE_DATE,(SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=tt_tribune.CREATE_BY)AS CREATE_NAME,CREATE_BY,UPDATE_DATE,UPDATE_BY,TRIBUNE_TITLE,READING_NUMBER,
 TYPE,
(SELECT ITEM_NAME FROM `tt_tenderinfo` WHERE `tt_tenderinfo`.`TENDERINFO_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS TENDER_NAME,
(SELECT SEAL_NAME FROM `tt_seal` WHERE `tt_seal`.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS SEAL_NAME,
(SELECT ITEM_NAME FROM `tt_iteminfo` WHERE `tt_iteminfo`.`ITEM_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS ITEM_NAME,STATE,IS_TOP
FROM tt_tribune
WHERE PARENT_ID=#{pd.PARENT_ID}
<if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and (TRIBUNE_TITLE LIKE #{pd.NAME2})
		</if>
ORDER BY
CASE 
WHEN tt_tribune.`IS_TOP`=1
THEN  update_date 
END DESC,
CASE
WHEN tt_tribune.`IS_TOP`=0  
THEN CREATE_DATE
END
DESC 
  </select>
  
  
  <select id="findzdid" resultType="java.lang.String" >
  
  SELECT ZD_ID FROM sys_dictionaries WHERE BIANMA='PSSP'
  
  </select>
  
  <select id="findtype" resultType="java.lang.String" >
  
  SELECT REVIEW_TYPE FROM`sys_user` WHERE USER_ID= #{userId,jdbcType=VARCHAR}
  
  </select>
  
    <!-- 评审审批 微信 不分页 shenwei2016/05/17-->
  <select id="findTribuneList" resultType="pd" parameterType="pd" useCache="false">
  
  	SELECT  		
TRIBUNE_ID,PARENT_ID,(SELECT COUNT(*) FROM `tt_tribune_user_reply` t WHERE t.TRIBUNE_ID=tt_tribune.`TRIBUNE_ID`)AS NUMBER,
TRIBUNE_CONTENT,CREATE_DATE,(SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=tt_tribune.CREATE_BY)AS CREATE_NAME,CREATE_BY,UPDATE_DATE,UPDATE_BY,TRIBUNE_TITLE,READING_NUMBER,
CASE 
WHEN(SELECT SEAL_ID FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NOT NULL
THEN '1'
WHEN(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)IS NOT NULL
THEN '2'
WHEN (SELECT SEAL_ID FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL AND 
(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN '3'
END AS TYPE,
(SELECT ITEM_NAME FROM `tt_tenderinfo` WHERE `tt_tenderinfo`.`TENDERINFO_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS TENDER_NAME,
(SELECT SEAL_NAME FROM `tt_seal` WHERE `tt_seal`.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`) AS SEAL_NAME,STATE
FROM tt_tribune
WHERE PARENT_ID=(SELECT ZD_ID FROM `sys_dictionaries` WHERE NAME ='评审审批')
order by  CREATE_DATE DESC
  </select>
  
  <select id="findstate" resultType="java.lang.String" >
  
  SELECT STATE FROM `tt_tribune` WHERE TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  
  </select>
  

  <!-- 论坛内容查询 -->
   <select id="listPageLB" resultType="pd" parameterType="page" useCache="false">
   SELECT 
  t.`TRIBUNE_ID`,
  t.`PARENT_ID`,
  t.`TRIBUNE_CONTENT` AS CONTENT,
  t.`CREATE_BY`,
  t.`CREATE_DATE`,
  t.STATE,
  t.`TRIBUNE_TITLE`,
  (SELECT ZD_ID FROM `sys_dictionaries` WHERE BIANMA='PSSP')AS ID,
  (SELECT NAME FROM `sys_dictionaries`WHERE ZD_ID=( SELECT BM FROM `sys_user` i WHERE  i.`USER_ID`=t.`CREATE_BY`)) AS BMNAME,
  (SELECT i.`BIANMA` FROM `sys_dictionaries` i WHERE i.`ZD_ID`=(SELECT t.`PARENT_ID` FROM `tt_tribune` t WHERE t.`TRIBUNE_ID`=#{pd.tribuneId})) AS LUNTAN,
  'zhuti' as type,
  (SELECT 
    NAME 
  FROM
    sys_user u 
  WHERE u.USER_ID = t.`CREATE_BY`) AS USER_NAME 
FROM
  tt_tribune t 
WHERE t.`TRIBUNE_ID` =#{pd.tribuneId}
UNION
ALL 
SELECT 
  r.`TRIBUNE_USER_REPLY_ID`,
  r.`TRIBUNE_ID`,
  r.`CONTENT`,
  r.`USER_ID`,
  r.`CREATE_DATE`,
  r.STATE,
  (SELECT TRIBUNE_TITLE FROM `tt_tribune` WHERE tt_tribune.`TRIBUNE_ID`=r.`TRIBUNE_ID`),
  (SELECT ZD_ID FROM `sys_dictionaries` WHERE BIANMA='PSSP')AS ID,
  (SELECT NAME FROM `sys_dictionaries`WHERE ZD_ID=( SELECT BM FROM `sys_user` i WHERE  i.`USER_ID`=r.`USER_ID`)) AS BMNAME,
  (SELECT i.`BIANMA` FROM `sys_dictionaries` i WHERE i.`ZD_ID`=(SELECT t.`PARENT_ID` FROM `tt_tribune` t WHERE t.`TRIBUNE_ID`=#{pd.tribuneId})) AS LUNTAN,
  'huifu' AS TYPE,
  (SELECT 
    NAME 
  FROM
    sys_user u 
  WHERE u.USER_ID = r.`USER_ID`) AS USER_NAME 
FROM
  tt_tribune_user_reply r 
WHERE r.`TRIBUNE_ID` =#{pd.tribuneId}
		ORDER BY  CREATE_DATE
  </select>
  
  <!-- 通过论坛id查询投标编号和id -->
  <select id="findTribuneinfoByid" parameterType="pd" resultType="pd">
  SELECT 
  t.`TRIBUNE_ID`,
  t.`PARENT_ID`,
  t.`TRIBUNE_CONTENT` AS CONTENT,
  t.`CREATE_BY`,
  t.`CREATE_DATE`,
  t.STATE,
  t.TYPE,
  t.REVIEW_OBJ_ID,
  (SELECT i.`ITEM_NUMBER` FROM `tt_tenderinfo` i  WHERE i.`TENDERINFO_ID`= t.REVIEW_OBJ_ID) AS itemNumber,
  t.REVIEW_GROUP_ID
FROM
  `tt_tribune` t WHERE t.`TRIBUNE_ID`=#{tribuneId}
  
  </select>
  
  
  <select id="findTribuneAndTenderByid" parameterType="pd" resultType="pd">
  SELECT t.`TRIBUNE_ID` FROM `tt_tribune` t WHERE t.`REVIEW_OBJ_ID`=#{tenderinfoId} AND t.`TYPE`=3
  </select>
  
  <!--招标标的tenderinfoid 查询 tribune表的id-->
    <select id="findTribuneIdByTenderinfoId" parameterType="pd" resultType="String">
  SELECT t.`TRIBUNE_ID` FROM `tt_tribune` t WHERE t.`REVIEW_OBJ_ID`=#{tenderinfoId} AND t.`TYPE`=#{type} 
  </select>
  
    <select id="findTribuneIdByReviewGroupId" parameterType="pd" resultType="String">
  SELECT t.`TRIBUNE_ID`,t.REVIEW_GROUP_ID FROM `tt_tribune` t WHERE t.`REVIEW_OBJ_ID`=#{reviewObjId} 
  <if test="type != null and type!=''" >
        AND t.`TYPE`=#{type} 
      </if>
  </select>
  
  
  <!-- 论坛内容查询  微信端 不分页 2016/05/17 shenwei-->
   <select id="findTribuneLB" resultType="pd" parameterType="pd" useCache="false">
   SELECT 
  t.`TRIBUNE_ID`,
  t.`PARENT_ID`,
  t.`TRIBUNE_CONTENT` AS CONTENT,
  t.`CREATE_BY`,
  t.`CREATE_DATE`,
  t.STATE,
  (SELECT ZD_ID FROM `sys_dictionaries` WHERE BIANMA='PSSP')AS ID,
  (SELECT NAME FROM `sys_dictionaries`WHERE ZD_ID=( SELECT BM FROM `sys_user` i WHERE  i.`USER_ID`=t.`CREATE_BY`)) AS BMNAME,
  (SELECT i.`BIANMA` FROM `sys_dictionaries` i WHERE i.`ZD_ID`=(SELECT t.`PARENT_ID` FROM `tt_tribune` t WHERE t.`TRIBUNE_ID`=#{tribuneId})) AS LUNTAN,
  'zhuti' as type,
  (SELECT 
    NAME 
  FROM
    sys_user u 
  WHERE u.USER_ID = t.`CREATE_BY`) AS USER_NAME 
FROM
  tt_tribune t 
WHERE t.`TRIBUNE_ID` =#{tribuneId}
UNION
ALL 
SELECT 
  r.`TRIBUNE_USER_REPLY_ID`,
  r.`TRIBUNE_ID`,
  r.`CONTENT`,
  r.`USER_ID`,
  r.`CREATE_DATE`,
  r.STATE,
  (SELECT ZD_ID FROM `sys_dictionaries` WHERE BIANMA='PSSP')AS ID,
  (SELECT NAME FROM `sys_dictionaries`WHERE ZD_ID=( SELECT BM FROM `sys_user` i WHERE  i.`USER_ID`=r.`USER_ID`)) AS BMNAME,
  (SELECT i.`BIANMA` FROM `sys_dictionaries` i WHERE i.`ZD_ID`=(SELECT t.`PARENT_ID` FROM `tt_tribune` t WHERE t.`TRIBUNE_ID`=#{tribuneId})) AS LUNTAN,
  'huifu' AS TYPE,
  (SELECT 
    NAME 
  FROM
    sys_user u 
  WHERE u.USER_ID = r.`USER_ID`) AS USER_NAME 
FROM
  tt_tribune_user_reply r 
WHERE r.`TRIBUNE_ID` =#{tribuneId}
		ORDER BY  CREATE_DATE
  </select>
  
  
  <!-- 编辑 -->
  <select id="selectTribune"  resultType="pd" parameterType="pd" >
    select 
TRIBUNE_ID,PARENT_ID,TRIBUNE_CONTENT,CREATE_DATE,(SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=tt_tribune.CREATE_BY)AS CREATE_BY,TYPE,
UPDATE_DATE,UPDATE_BY,TRIBUNE_TITLE,READING_NUMBER,REVIEW_OBJ_ID,
 CASE 
WHEN(SELECT SEAL_NAME FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
AND (SELECT ITEM_NAME FROM `tt_iteminfo` j WHERE j.`ITEM_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)
WHEN(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
AND (SELECT ITEM_NAME FROM `tt_iteminfo` j WHERE j.`ITEM_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN(SELECT SEAL_NAME FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)
WHEN(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
AND (SELECT SEAL_NAME FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN(SELECT ITEM_NAME FROM `tt_iteminfo` j WHERE j.`ITEM_ID`=tt_tribune.`REVIEW_OBJ_ID`)
END AS REVIEW_OBJ_NAME,
 CASE 
WHEN(SELECT SEAL_ID FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN '0'
WHEN(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN '1'
WHEN (SELECT SEAL_ID FROM `tt_seal` i WHERE i.`SEAL_ID`=tt_tribune.`REVIEW_OBJ_ID`)IS NULL AND 
(SELECT ITEM_NAME FROM `tt_tenderinfo` k WHERE k.TENDERINFO_ID=tt_tribune.`REVIEW_OBJ_ID`)IS NULL
THEN '2'
END AS TYPE
FROM tt_tribune
     where TRIBUNE_ID = #{TRIBUNE_ID,jdbcType=VARCHAR}
  </select>
  
  <!-- 主题 -->
	  <select id="findtitle" parameterType="pd" >
  		SELECT TRIBUNE_TITLE  FROM `tt_tribune`  where TRIBUNE_ID = #{TRIBUNE_ID}
	  </select>
	  
	  <!-- 审批状态 -->
	  <select id="findState" parameterType="pd" >
  		SELECT STATE  FROM `tt_tribune`  where TRIBUNE_ID =#{pd.tribuneId}
	  </select>
  
  
  <!-- 置顶 -->
	  <update id="toup" parameterType="pd" >
  		 UPDATE  tt_tribune SET IS_TOP=1,UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}  WHERE TRIBUNE_ID = #{TRIBUNE_ID}
	  </update>
	  
	  <!-- 置顶 -->
	  <update id="tonoup" parameterType="pd" >
  		 UPDATE  tt_tribune SET IS_TOP=0,UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}  WHERE TRIBUNE_ID = #{TRIBUNE_ID}
	  </update>
  
   <!-- 发送 -->
	  <update id="changeTribune" parameterType="pd" >
  		 update  tt_tribune  set STATE=1  where TRIBUNE_ID = #{TRIBUNE_ID}
	  </update>
  
  <!-- 删除 -->
	  <delete id="deleteTribune" parameterType="pd" >
  		 delete from tt_tribune   where TRIBUNE_ID = #{TRIBUNE_ID}
	  </delete>
	  
	  <!-- 删除User -->
	  <delete id="deleteTribuneUser" parameterType="pd" >
  		 delete from tt_tribune_user   where TRIBUNE_ID = #{TRIBUNE_ID}
	  </delete>
	   
  <!-- 删除 -->
	  <delete id="deleteReply" parameterType="pd" >
  		 DELETE FROM `tt_tribune_user_reply`   WHERE TRIBUNE_USER_REPLY_ID= #{TRIBUNE_ID}
	  </delete>
	  
	  
	  <!-- 删除 -->
	  <update id="updateByNumber" parameterType="pd" >
  		 UPDATE tt_tribune tr
SET tr.`READING_NUMBER`=tr.`READING_NUMBER`+1
WHERE tr.`TRIBUNE_ID`= #{tribuneId}
	  </update>
	  
	  
	  <update id="updateByState" parameterType="pd">
  		 update tt_tribune   set   STATE = #{state,jdbcType=INTEGER} where TRIBUNE_ID=#{tribuneId}
	  </update>
	  
	  <select id="selectForType" resultType="pd" parameterType="pd" >
    SELECT 
    *
    FROM `tt_tribune`
    WHERE TRIBUNE_ID  = #{tribuneId}
 </select>
 
   <select id="findCcUserByTribuneidList" resultType="pd" parameterType="pd" >
SELECT 
  s.`USER_ID`,
  s.`NAME` 
FROM
  `sys_user` s 
WHERE s.`USER_ID` IN 
  (SELECT 
    c.`USER_ID` 
  FROM
    `tt_cc_user` c 
  WHERE c.`TRIBUNE_ID` = #{tribuneId})
  </select>
 
 
  <update id="updateReviewType" parameterType="pd">
UPDATE `tt_tribune` t SET t.`REVIEW_TYPE`= #{reviewType,jdbcType=VARCHAR} 
WHERE t.`TRIBUNE_ID`= #{tribuneId,jdbcType=VARCHAR}  
  </update>
  
   <update id="updateTribuneByUserId" parameterType="pd">
 UPDATE `tt_tribune` t SET t.`USER_ID`= REPLACE(t.USER_ID,#{USER_ID},'')
WHERE t.`TRIBUNE_ID`= #{tribuneId,jdbcType=VARCHAR}  
  </update>
  
     <update id="updateTribuneByUserIdXJ" parameterType="pd">
 UPDATE `tt_tribune` t SET t.`USER_ID`= #{userIdList}
WHERE t.`TRIBUNE_ID`= #{tribuneId,jdbcType=VARCHAR}  
  </update>
  
  
  
  
    <select id="selectTribuneByuserId" resultMap="BaseResultMap" parameterType="pd" >
    select 
    t.TRIBUNE_ID,
  	t.USER_ID
    from tt_tribune t
    where t.TRIBUNE_ID = #{tribuneId,jdbcType=VARCHAR}
  </select>
  
  
  <!--我的评审 列表查询 -->
  
  <select id="findMyTribunelistPage" resultType="pd" parameterType="page" >
  SELECT 
  t.CREATE_DATE AS CREATE_DATE,
  t.`TRIBUNE_ID` AS TRIBUNE_ID,
  t.`TRIBUNE_CONTENT` AS TRIBUNE_CONTENT,
  (SELECT 
    u.`NAME` 
  FROM
    `sys_user` u 
  WHERE u.`USER_ID` = t.`CREATE_BY`) AS CREATE_BY,
  (SELECT 
    NAME 
  FROM
    `sys_dictionaries` d 
  WHERE d.`ZD_ID` = 
    (SELECT 
      s.`BM` 
    FROM
      `sys_user` s 
    WHERE s.`USER_ID` = t.`CREATE_BY`)) AS BMNAME,
  (SELECT 
    s.`STRUCT_NAME` 
  FROM
    `sys_structinfo` s 
  WHERE s.`STRUCT_ID` = 
    (SELECT 
      u.`STRUCT_ID` 
    FROM
      `sys_user` u 
    WHERE u.`USER_ID` = t.`CREATE_BY`)) AS STRUCT_NAME,
  t.`TRIBUNE_TITLE`,
  t.`REVIEW_OBJ_ID`,
  t.TYPE,
  t.STATE,
  '1' AS SP_TYPE 
FROM
  `tt_tribune` t 
WHERE t.`TRIBUNE_ID` IN 
  (SELECT 
    tu.`TRIBUNE_ID` 
  FROM
    `tt_tribune_user` tu 
  WHERE tu.`USER_ID` = #{pd.userId}) 
  
  <if test="pd.STRUCT_ID != null and pd.STRUCT_ID != ''" >
     AND  (SELECT 
        u.`STRUCT_ID` 
      FROM
        `sys_user` u 
      WHERE u.`USER_ID` = t.`CREATE_BY`)=#{pd.STRUCT_ID}
      </if>
        <if test="pd.NAME != null and pd.NAME != ''" >
     AND      t.`TRIBUNE_TITLE`      LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
      </if>
    <if test="pd.TYPEBIANMA != null and pd.TYPEBIANMA != ''" >
      AND t.`TYPE`=#{pd.TYPEBIANMA}
      </if>
     
    UNION
    SELECT 
      t.CREATE_DATE AS CREATE_DATE,
      t.`ITEM_REVIEW_ID` AS TRIBUNE_ID,
      t.`CONTENT` AS TRIBUNE_CONTENT,
      (SELECT 
        u.`NAME` 
      FROM
        `sys_user` u 
      WHERE u.`USER_ID` = t.`CREATE_BY`) AS CREATE_BY,
      (SELECT 
        NAME 
      FROM
        `sys_dictionaries` d 
      WHERE d.`ZD_ID` = 
        (SELECT 
          s.`BM` 
        FROM
          `sys_user` s 
        WHERE s.`USER_ID` = t.`CREATE_BY`)) AS BMNAME,
      (SELECT 
        s.`STRUCT_NAME` 
      FROM
        `sys_structinfo` s 
      WHERE s.`STRUCT_ID` = 
        (SELECT 
          u.`STRUCT_ID` 
        FROM
          `sys_user` u 
        WHERE u.`USER_ID` = t.`CREATE_BY`)) AS STRUCT_NAME,
      t.`TITLE` AS TRIBUNE_TITLE,
      t.`FOREIGN_KEY_ID` AS REVIEW_OBJ_ID,
      t.TYPE,
      t.STATE,
      '2' AS SP_TYPE 
    FROM
      `tt_item_review` t 
    WHERE t.`ITEM_REVIEW_ID` IN 
      (SELECT 
        tu.`TRIBUNE_ID` 
      FROM
        `tt_tribune_user` tu 
      WHERE tu.`USER_ID` = #{pd.userId})
        <if test="pd.STRUCT_ID != null and pd.STRUCT_ID != ''" >
     AND  (SELECT 
        u.`STRUCT_ID` 
      FROM
        `sys_user` u 
      WHERE u.`USER_ID` = t.`CREATE_BY`)=#{pd.STRUCT_ID}
      </if>
        <if test="pd.NAME != null and pd.NAME != ''" >
     AND      t.`TITLE`      LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
      </if>
      <if test="pd.TYPEBIANMA != null and pd.TYPEBIANMA != ''" >
      AND t.`TYPE`=#{pd.TYPEBIANMA}
      </if>
ORDER BY  `CREATE_DATE` DESC
    </select>
    
    
    <!--我的审批 列表查询 -->
  
  <select id="findMyTribuneCreateBylistPage" resultType="pd" parameterType="page" >
  SELECT 
  t.CREATE_DATE AS CREATE_DATE,
  t.`TRIBUNE_ID` AS TRIBUNE_ID,
  t.`TRIBUNE_CONTENT` AS TRIBUNE_CONTENT,
  (SELECT 
    u.`NAME` 
  FROM
    `sys_user` u 
  WHERE u.`USER_ID` = t.`CREATE_BY`) AS CREATE_BY,
  (SELECT 
    NAME 
  FROM
    `sys_dictionaries` d 
  WHERE d.`ZD_ID` = 
    (SELECT 
      s.`BM` 
    FROM
      `sys_user` s 
    WHERE s.`USER_ID` = t.`CREATE_BY`)) AS BMNAME,
  (SELECT 
    s.`STRUCT_NAME` 
  FROM
    `sys_structinfo` s 
  WHERE s.`STRUCT_ID` = 
    (SELECT 
      u.`STRUCT_ID` 
    FROM
      `sys_user` u 
    WHERE u.`USER_ID` = t.`CREATE_BY`)) AS STRUCT_NAME,
  t.`TRIBUNE_TITLE`,
  t.`REVIEW_OBJ_ID`,
  t.TYPE,
  t.STATE,
  '1' AS SP_TYPE 
FROM
  `tt_tribune` t 
WHERE t.CREATE_BY= #{pd.userId}
  <if test="pd.STRUCT_ID != null and pd.STRUCT_ID != ''" >
     AND  (SELECT 
        u.`STRUCT_ID` 
      FROM
        `sys_user` u 
      WHERE u.`USER_ID` = t.`CREATE_BY`)=#{pd.STRUCT_ID}
      </if>
        <if test="pd.NAME != null and pd.NAME != ''" >
     AND      t.`TRIBUNE_TITLE`      LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
      </if>
    <if test="pd.TYPEBIANMA != null and pd.TYPEBIANMA != ''" >
      AND t.`TYPE`=#{pd.TYPEBIANMA}
      </if>
    UNION
    SELECT 
      t.CREATE_DATE AS CREATE_DATE,
      t.`ITEM_REVIEW_ID` AS TRIBUNE_ID,
      t.`CONTENT` AS TRIBUNE_CONTENT,
      (SELECT 
        u.`NAME` 
      FROM
        `sys_user` u 
      WHERE u.`USER_ID` = t.`CREATE_BY`) AS CREATE_BY,
      (SELECT 
        NAME 
      FROM
        `sys_dictionaries` d 
      WHERE d.`ZD_ID` = 
        (SELECT 
          s.`BM` 
        FROM
          `sys_user` s 
        WHERE s.`USER_ID` = t.`CREATE_BY`)) AS BMNAME,
      (SELECT 
        s.`STRUCT_NAME` 
      FROM
        `sys_structinfo` s 
      WHERE s.`STRUCT_ID` = 
        (SELECT 
          u.`STRUCT_ID` 
        FROM
          `sys_user` u 
        WHERE u.`USER_ID` = t.`CREATE_BY`)) AS STRUCT_NAME,
      t.`TITLE` AS TRIBUNE_TITLE,
      t.`FOREIGN_KEY_ID` AS REVIEW_OBJ_ID,
      t.TYPE,
      t.STATE,
      '2' AS SP_TYPE 
    FROM
      `tt_item_review` t 
    WHERE 
     t.CREATE_BY= #{pd.userId}
        <if test="pd.STRUCT_ID != null and pd.STRUCT_ID != ''" >
     AND  (SELECT 
        u.`STRUCT_ID` 
      FROM
        `sys_user` u 
      WHERE u.`USER_ID` = t.`CREATE_BY`)=#{pd.STRUCT_ID}
      </if>
        <if test="pd.NAME != null and pd.NAME != ''" >
     AND      t.`TITLE`      LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
      </if>
  <if test="pd.TYPEBIANMA != null and pd.TYPEBIANMA != ''" >
      AND t.`TYPE`=#{pd.TYPEBIANMA}
      </if>
    </select>
  
</mapper>