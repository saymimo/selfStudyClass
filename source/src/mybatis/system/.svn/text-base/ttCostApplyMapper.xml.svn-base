<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ttCostApplyMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.ttCostApply" >
    <id column="COST_APPLY_ID" property="costApplyId" jdbcType="VARCHAR" />
    <result column="STRUCT_ID" property="structId" jdbcType="VARCHAR" />
    <result column="COST_TITLE" property="costTitle" jdbcType="VARCHAR" />
    <result column="COST_CONTENT" property="costContent" jdbcType="VARCHAR" />
    <result column="COST_MONEY" property="costMoney" jdbcType="DECIMAL" />
    <result column="COST_STATE" property="costState" jdbcType="INTEGER" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="FLOW_STATE" property="flowState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    COST_APPLY_ID, STRUCT_ID, COST_TITLE, COST_CONTENT, COST_MONEY, COST_STATE, IS_DEL, 
    CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY,FLOW_STATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_cost_apply
    where COST_APPLY_ID = #{costApplyId,jdbcType=VARCHAR}
  </select>
  <!-- 微信 通过主键获取 -->
  <select id="findMyApprovalById" resultType="pd" parameterType="pd" >
    select 
    COST_APPLY_ID, STRUCT_ID, COST_TITLE, COST_CONTENT, COST_MONEY, COST_STATE, IS_DEL, 
    CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY,(SELECT NAME FROM `sys_user` WHERE user_id=tt_cost_apply.CREATE_BY) AS CREATE_NAME
    from tt_cost_apply
    where COST_APPLY_ID = #{COST_APPLY_ID,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_cost_apply
    where COST_APPLY_ID = #{costApplyId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.ttCostApply" >
    insert into tt_cost_apply (COST_APPLY_ID, STRUCT_ID, COST_TITLE, 
      COST_CONTENT, COST_MONEY, COST_STATE, 
      IS_DEL, CREATE_DATE, CREATE_BY, 
      UPDATE_DATE, UPDATE_BY)
    values (#{costApplyId,jdbcType=VARCHAR}, #{structId,jdbcType=VARCHAR}, #{costTitle,jdbcType=VARCHAR}, 
      #{costContent,jdbcType=VARCHAR}, #{costMoney,jdbcType=DECIMAL}, #{costState,jdbcType=INTEGER}, 
      #{isDel,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.ttCostApply" >
    insert into tt_cost_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="costApplyId != null" >
        COST_APPLY_ID,
      </if>
      <if test="structId != null" >
        STRUCT_ID,
      </if>
      <if test="costTitle != null" >
        COST_TITLE,
      </if>
      <if test="costContent != null" >
        COST_CONTENT,
      </if>
      <if test="costMoney != null" >
        COST_MONEY,
      </if>
      <if test="costState != null" >
        COST_STATE,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="flowState != null" >
        FLOW_STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="costApplyId != null" >
        #{costApplyId,jdbcType=VARCHAR},
      </if>
      <if test="structId != null" >
        #{structId,jdbcType=VARCHAR},
      </if>
      <if test="costTitle != null" >
        #{costTitle,jdbcType=VARCHAR},
      </if>
      <if test="costContent != null" >
        #{costContent,jdbcType=VARCHAR},
      </if>
      <if test="costMoney != null" >
        #{costMoney,jdbcType=DECIMAL},
      </if>
      <if test="costState != null" >
        #{costState,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
       <if test="flowState != null" >
        #{flowState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd" >
    update tt_cost_apply
    <set >
      <if test="structId != null" >
        STRUCT_ID = #{structId,jdbcType=VARCHAR},
      </if>
      <if test="costTitle != null" >
        COST_TITLE = #{costTitle,jdbcType=VARCHAR},
      </if>
      <if test="costContent != null" >
        COST_CONTENT = #{costContent,jdbcType=VARCHAR},
      </if>
      <if test="costMoney != null" >
        COST_MONEY = #{costMoney,jdbcType=DECIMAL},
      </if>
      <if test="costState != null" >
        COST_STATE = #{costState,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="flowState != null" >
        FLOW_STATE = #{flowState,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where COST_APPLY_ID = #{costApplyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.ttCostApply" >
    update tt_cost_apply
    set STRUCT_ID = #{structId,jdbcType=VARCHAR},
      COST_TITLE = #{costTitle,jdbcType=VARCHAR},
      COST_CONTENT = #{costContent,jdbcType=VARCHAR},
      COST_MONEY = #{costMoney,jdbcType=DECIMAL},
      COST_STATE = #{costState,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where COST_APPLY_ID = #{costApplyId,jdbcType=VARCHAR}
  </update>
  
  
  
   <!-- 通过struct_id获取公告通知列表 -->
	<select id="listPageAllCostApplyStructid" parameterType="page" resultType="pd" useCache="false">
		 select 
    		  COST_APPLY_ID, STRUCT_ID, COST_TITLE, COST_CONTENT, COST_MONEY, COST_STATE, IS_DEL, 
    CREATE_DATE,FLOW_STATE
    , (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_BY
    , UPDATE_DATE, (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.UPDATE_BY) as UPDATE_BY
	    from tt_cost_apply t
	    where
	STRUCT_ID=#{pd.STRUCT_ID} and IS_DEL=0 and t.CREATE_BY=#{pd.CREATE_BY}
		
		 <if test="pd.ITEMNAME != null and pd.ITEMNAME != ''">
			and
				(
					 COST_TITLE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%')
					 or 
					 COST_STATE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%') 
				)
		</if><!-- 关键词检索 -->
		 ORDER BY t.`CREATE_DATE`
	</select>
	
	<!-- 微信公众号点击我的审批（费用）查3条-->
	<select id="findMyApproval" parameterType="pd" resultType="pd" useCache="false">
 		SELECT   COST_APPLY_ID,  STRUCT_ID,  COST_TITLE,  COST_CONTENT,  COST_MONEY,  COST_STATE,  IS_DEL,
 	 CREATE_DATE,  (SELECT     s.NAME   FROM    sys_user s   WHERE s.USER_ID = t.CREATE_BY) AS CREATE_BY,
 	 UPDATE_DATE,  (SELECT     s.NAME   FROM    sys_user s   WHERE s.USER_ID = t.UPDATE_BY) AS UPDATE_BY 
	FROM  tt_cost_apply t WHERE (    t.COST_APPLY_ID IN     (SELECT       u.TRIBUNE_ID     FROM
      tt_tribune_user u     WHERE u.user_id =       (SELECT         user_id       FROM        sys_user 
      WHERE open_id =#{OPEN_ID}  )       AND u.STATE = 0) )  AND is_del=0  ORDER BY CREATE_DATE DESC LIMIT 3
		
	</select>
	
	<!-- 微信公众号点击我的审批（费用）全查-->
	<select id="findMyApprovalAll" parameterType="pd" resultType="pd" useCache="false">
 	
 	SELECT   COST_APPLY_ID,  STRUCT_ID,  COST_TITLE,  COST_CONTENT,  COST_MONEY,  COST_STATE,  IS_DEL,
 	 CREATE_DATE,  (SELECT     s.NAME   FROM    sys_user s   WHERE s.USER_ID = t.CREATE_BY) AS CREATE_BY,
 	 UPDATE_DATE,  (SELECT     s.NAME   FROM    sys_user s   WHERE s.USER_ID = t.UPDATE_BY) AS UPDATE_BY 
	FROM  tt_cost_apply t WHERE (    t.COST_APPLY_ID IN     (SELECT       u.TRIBUNE_ID     FROM
      tt_tribune_user u     WHERE u.user_id =       (SELECT         user_id       FROM        sys_user 
      WHERE open_id =#{OPEN_ID}  )       AND u.STATE = 0) )  AND is_del=0  ORDER BY CREATE_DATE DESC
		
	</select>
	
	  <!-- 费用评审列表 -->
	<select id="listPageAllCostApplyStateStructid" parameterType="page" resultType="pd" useCache="false">
	
	


		 select 
    		  COST_APPLY_ID, STRUCT_ID, COST_TITLE, COST_CONTENT, COST_MONEY, COST_STATE, IS_DEL, 
    CREATE_DATE
    , (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_BY
    , UPDATE_DATE, (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.UPDATE_BY) as UPDATE_BY
	    from tt_cost_apply t
	    
	    where
	    
	(   t.COST_APPLY_ID IN(SELECT u.TRIBUNE_ID FROM `tt_tribune_user` u WHERE u.USER_ID=#{pd.Userid})  OR t.CREATE_BY=#{pd.Userid} )  and t.IS_DEL=0
		
		 <if test="pd.ITEMNAME != null and pd.ITEMNAME != ''">
			and
				(
					 t.COST_TITLE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%')
					 or 
					 t.COST_STATE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%') 
				)
		</if><!-- 关键词检索 -->
	</select>
	 <!-- 通过struct_id获取公告通知列表 -->
	<select id="listAllCostApplyStructidTab" parameterType="page" resultType="pd" useCache="false">
		 select 
    		  COST_APPLY_ID, STRUCT_ID, COST_TITLE, COST_CONTENT, COST_MONEY, COST_STATE, IS_DEL, 
    CREATE_DATE
    , (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_BY,FLOW_STATE
    , UPDATE_DATE, (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.UPDATE_BY) as UPDATE_BY
	    from tt_cost_apply t
	    where
	STRUCT_ID=#{pd.STRUCT_ID} and IS_DEL=0 and t.CREATE_BY=#{pd.CREATE_BY}
		
		 <if test="pd.ITEMNAME != null and pd.ITEMNAME != ''">
			and
				(
					 COST_TITLE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%')
					 or 
					 COST_STATE LIKE CONCAT(CONCAT('%', #{pd.ITEMNAME}),'%') 
				)
		</if><!-- 关键词检索 -->
	</select>
  	
		<!-- 通过user_id获取数据 -->
	<select id="findByCostApplyById" parameterType="pd" resultType="pd" useCache="false">
		 select 
    		<include refid="Base_Column_List" />
	    from tt_cost_apply
	   
	        where COST_APPLY_ID=#{COST_APPLY_ID}
	</select>
	
	
		<!-- 通过user_id获取数据 -->
	<select id="findByCostApplyStateById" parameterType="pd" resultType="pd" useCache="false">
		 select 
    		  COST_APPLY_ID, STRUCT_ID, COST_TITLE, COST_CONTENT, COST_MONEY, COST_STATE, IS_DEL, 
    CREATE_DATE
    , (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.CREATE_BY) as CREATE_BY
    , UPDATE_DATE, (SELECT s.NAME FROM sys_user s WHERE s.USER_ID=t.UPDATE_BY) as UPDATE_BY
	    from tt_cost_apply t
	   
	        where COST_APPLY_ID=#{COST_APPLY_ID}
	</select>
	
  	<!-- 删除 -->
	  <update id="updateByIsDel" parameterType="pd">
  		 update tt_cost_apply   set   IS_DEL = 1 where COST_APPLY_ID=#{COST_APPLY_ID}
	  </update>
	  <!-- 发送 -->
	  <update id="sent" parameterType="pd">
  		 update tt_cost_apply   set   FLOW_STATE = 1 where COST_APPLY_ID=#{COST_APPLY_ID}
	  </update>
	  
	  <!-- 批量删除 -->
	<delete id="deleteAllCostApply" parameterType="String" flushCache="false">
		update tt_cost_apply
		 set
			IS_DEL =1 where COST_APPLY_ID in 
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<update id="updateByState" parameterType="pd">
  		 update tt_cost_apply   set   COST_STATE = #{costState,jdbcType=INTEGER} where COST_APPLY_ID=#{costApplyId}
	  </update>
	  
	  
	  
	<select id="selectCCId"  parameterType="pd" resultType="java.lang.String">
     SELECT GROUP_CONCAT(t.`APPLY_BY`) FROM `tt_cost_user` t WHERE t.`COST_APPLY_ID`=#{COST_APPLY_ID}
  </select>
</mapper>