<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtTaskQualityMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtTaskQuality" >
    <id column="TASK_QUALITY_ID" property="taskQualityId" jdbcType="VARCHAR" />
    <result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
    <result column="ITEM_ID" property="itemId" jdbcType="VARCHAR" />
    <result column="QUALITY_TITLE" property="qualityTitle" jdbcType="VARCHAR" />
    <result column="QUALITY_CONTENT" property="qualityContent" jdbcType="VARCHAR" />
    <result column="QUALITY_STATE" property="qualityState" jdbcType="INTEGER" />
    <result column="RESULT" property="result" jdbcType="INTEGER" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="TASK_NAME" property="TASK_NAME" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    TASK_QUALITY_ID, TASK_ID, ITEM_ID, QUALITY_TITLE, QUALITY_CONTENT, QUALITY_STATE, 
    RESULT, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY
  </sql>
  
  <select id="findCreateBy" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT i.`CREATE_BY` FROM `tt_task_quality` i WHERE  i.`TASK_QUALITY_ID` = #{taskQualityId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    TASK_QUALITY_ID, ITEM_ID, QUALITY_TITLE, QUALITY_CONTENT,QUALITY_STATE, 
    RESULT, IS_DEL, CREATE_DATE,TASK_ID,IFNULL((SELECT taskName(t.TASK_ID) ),'') AS TASK_NAME,
    (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=t.CREATE_BY) as CREATE_BY,
     UPDATE_DATE, UPDATE_BY
    from tt_task_quality t
    where TASK_QUALITY_ID = #{taskQualityId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_task_quality
    where TASK_QUALITY_ID = #{taskQualityId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtTaskQuality" >
    insert into tt_task_quality (TASK_QUALITY_ID, TASK_ID, ITEM_ID, 
      QUALITY_TITLE, QUALITY_CONTENT, QUALITY_STATE, 
      RESULT, IS_DEL, CREATE_DATE, 
      CREATE_BY, UPDATE_DATE, UPDATE_BY
      )
    values (#{taskQualityId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{qualityTitle,jdbcType=VARCHAR}, #{qualityContent,jdbcType=VARCHAR}, #{qualityState,jdbcType=INTEGER}, 
      #{result,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
   <!-- 保存 -->
  <insert id="insertSelective" parameterType="pd" >
    insert into tt_task_quality
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskQualityId != null" >
        TASK_QUALITY_ID,
      </if>
      <if test="taskId != null" >
        TASK_ID,
      </if>
      <if test="itemId != null" >
        ITEM_ID,
      </if>
      <if test="qualityTitle != null" >
        QUALITY_TITLE,
      </if>
      <if test="qualityContent != null" >
        QUALITY_CONTENT,
      </if>
      <if test="qualityState != null" >
        QUALITY_STATE,
      </if>
      <if test="result != null" >
        RESULT,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
       <if test="finDate != null" >
        FIN_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskQualityId != null" >
        #{taskQualityId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="qualityTitle != null" >
        #{qualityTitle,jdbcType=VARCHAR},
      </if>
      <if test="qualityContent != null" >
        #{qualityContent,jdbcType=VARCHAR},
      </if>
      <if test="qualityState != null" >
        #{qualityState,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        #{result,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type},
      </if>
       <if test="finDate != null" >
        #{finDate},
      </if>
    </trim>
  </insert>
  <!-- 修改 -->
  <update id="updateByPKSelective" parameterType="pd" flushCache="false">
    update tt_task_quality
    <set >
      <if test="taskId != null" >
        TASK_ID = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        ITEM_ID = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="qualityTitle != null" >
        QUALITY_TITLE = #{qualityTitle,jdbcType=VARCHAR},
      </if>
      <if test="qualityContent != null" ><!-- 与页面shuruto -->
        QUALITY_CONTENT = #{qualityContent,jdbcType=VARCHAR},
      </if>
      <if test="qualityState != null" >
        QUALITY_STATE = #{qualityState,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        RESULT = #{result,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where TASK_QUALITY_ID = #{taskQualityId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pd" >
    update tt_task_quality
    set TASK_ID = #{taskId,jdbcType=VARCHAR},
      ITEM_ID = #{itemId,jdbcType=VARCHAR},
      QUALITY_TITLE = #{qualityTitle,jdbcType=VARCHAR},
      QUALITY_CONTENT = #{qualityContent,jdbcType=VARCHAR},
      QUALITY_STATE = #{qualityState,jdbcType=INTEGER},
      RESULT = #{result,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where TASK_QUALITY_ID = #{taskQualityId,jdbcType=VARCHAR}
  </update>
  <!-- 主页面查询 -->
  <select id="listPageByItemid" resultType="pd" parameterType="page">
  select 
      TASK_QUALITY_ID, (SELECT tt.`NAME` FROM `tt_taskinfo` tt WHERE tt.`UID`=t.TASK_ID) AS TASK_ID, ITEM_ID, 
      QUALITY_TITLE, QUALITY_CONTENT, QUALITY_STATE, 
      RESULT, IS_DEL, CREATE_DATE, IFNULL((SELECT taskName(t.TASK_ID) ),'') as TASK_NAME,
      (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=t.CREATE_BY) 
   		as CREATE_NAME, CREATE_BY, UPDATE_DATE, UPDATE_BY,
   		(SELECT GROUP_CONCAT(su.`NAME`) FROM sys_user su WHERE su.`USER_ID` in (SELECT USER_ID FROM `tt_check_user` i WHERE i.SECURITY_QUALITY_ID=t.`TASK_QUALITY_ID`))AS NAME
    from tt_task_quality t
    where IS_DEL=0 and ITEM_ID = #{pd.ITEM_ID,jdbcType=VARCHAR}
       <if test="pd.LASTLOGINSTART1 !=null and pd.LASTLOGINSTART1 != '' ">
		 		<if test="pd.LASTLOGINSTART2 !=null and pd.LASTLOGINSTART2 != '' ">
		 		AND CREATE_DATE  &gt;=#{pd.LASTLOGINSTART1} AND CREATE_DATE &lt;=#{pd.LASTLOGINSTART2} 
		 		</if>
		 		</if>
       <if test="pd.ITEMCOLLECTNAME2!=null and pd.ITEMCOLLECTNAME2 != '' ">
		 		AND  QUALITY_CONTENT LIKE #{pd.ITEMCOLLECTNAME2}  
		 		</if>
		 <if test="pd.ITEMCOLLECTTYPE!=null and pd.ITEMCOLLECTTYPE != ''   and pd.ITEMCOLLECTTYPE != 3 ">
		 	and (QUALITY_STATE = #{pd.ITEMCOLLECTTYPE})
		</if>
		
		<if test="pd.ITEMCOLLECTPAGE!=null and pd.ITEMCOLLECTPAGE != ''  and pd.ITEMCOLLECTPAGE !=3">
		 	and (RESULT = #{pd.ITEMCOLLECTPAGE})
		</if>
		
	ORDER BY  CREATE_DATE DESC
  </select>
  
  
  <!-- 微信质量检查 不分页shenwei 2016/06/07 -->
  <select id="findQuality" resultType="pd" parameterType="pd">
  select 
      TASK_QUALITY_ID, (SELECT tt.`NAME` FROM `tt_taskinfo` tt WHERE tt.`UID`=t.TASK_ID) AS TASK_ID, ITEM_ID, 
      QUALITY_TITLE, QUALITY_CONTENT, QUALITY_STATE, 
      RESULT, IS_DEL, CREATE_DATE, IFNULL((SELECT taskName(t.TASK_ID) ),'') as TASK_NAME,
      (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=t.CREATE_BY) 
   		as CREATE_NAME, CREATE_BY, UPDATE_DATE, UPDATE_BY
    from tt_task_quality t
    where IS_DEL=0 and ITEM_ID = #{ITEM_ID,jdbcType=VARCHAR}
    AND CREATE_BY=#{userId,jdbcType=VARCHAR}
  OR  t.`TASK_QUALITY_ID` IN (SELECT i.`SECURITY_QUALITY_ID` FROM `tt_check_user` i WHERE i.`USER_ID`=#{userId,jdbcType=VARCHAR})
	ORDER BY  CREATE_DATE DESC
  </select>
  
  
  
  <!-- 任务中质量记录查询 -->
   <select id="listPageByItemidRecord" resultType="pd" parameterType="page">
  select 
      TASK_QUALITY_ID, (SELECT tt.`NAME` FROM `tt_taskinfo` tt WHERE tt.`UID`=t.TASK_ID) AS TASK_ID, ITEM_ID, 
      QUALITY_TITLE, QUALITY_CONTENT, QUALITY_STATE, 
      RESULT, IS_DEL, CREATE_DATE, IFNULL((SELECT taskName(t.TASK_ID) ),'') as TASK_NAME,
      (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=t.CREATE_BY) 
   		as CREATE_BY, UPDATE_DATE, UPDATE_BY,(SELECT GROUP_CONCAT(su.`NAME`) FROM sys_user su WHERE su.`USER_ID` in (SELECT USER_ID FROM `tt_check_user` i WHERE i.SECURITY_QUALITY_ID=t.`TASK_QUALITY_ID`))AS NAME
    from tt_task_quality t
    where IS_DEL=0 and ITEM_ID = #{pd.ITEM_ID,jdbcType=VARCHAR} and t.`TASK_ID`= #{pd.TASK_ID,jdbcType=VARCHAR}
       <if test="pd.LASTLOGINSTART1 !=null and pd.LASTLOGINSTART1 != '' ">
		 		<if test="pd.LASTLOGINSTART2 !=null and pd.LASTLOGINSTART2 != '' ">
		 		AND CREATE_DATE  &gt;=#{pd.LASTLOGINSTART1} AND CREATE_DATE &lt;=#{pd.LASTLOGINSTART2} 
		 		</if>
		 		</if>
       <if test="pd.ITEMCOLLECTNAME2!=null and pd.ITEMCOLLECTNAME2 != '' ">
		 		AND  QUALITY_CONTENT LIKE #{pd.ITEMCOLLECTNAME2}  
		 		</if>
		 <if test="pd.ITEMCOLLECTTYPE!=null and pd.ITEMCOLLECTTYPE != ''   and pd.ITEMCOLLECTTYPE != 3 ">
		 	and (QUALITY_STATE = #{pd.ITEMCOLLECTTYPE})
		</if>
		
		<if test="pd.ITEMCOLLECTPAGE!=null and pd.ITEMCOLLECTPAGE != ''  and pd.ITEMCOLLECTPAGE !=3">
		 	and (RESULT = #{pd.ITEMCOLLECTPAGE})
		</if>
		
	ORDER BY  CREATE_DATE DESC
  </select>
  
  <!--切换跳转页面查询-->
  <select id="listByItemid" resultType="pd" parameterType="page">
  select 
      TASK_QUALITY_ID, (SELECT tt.`NAME` FROM `tt_taskinfo` tt WHERE tt.`UID`=t.TASK_ID) AS TASK_ID, ITEM_ID, 
      QUALITY_TITLE, QUALITY_CONTENT, QUALITY_STATE, 
      RESULT, IS_DEL, CREATE_DATE,IFNULL((SELECT taskName(t.TASK_ID) ),'')as TASK_NAME,
      (SELECT s.`NAME` FROM `sys_user`  s WHERE s.`USER_ID`=t.CREATE_BY) 
   		as CREATE_NAME, CREATE_BY, UPDATE_DATE, UPDATE_BY
    from tt_task_quality t
    where IS_DEL=0 and ITEM_ID = #{pd.ITEM_ID,jdbcType=VARCHAR} 
     <if test="pd.ITEMCOLLECTNAME!=null and pd.ITEMCOLLECTNAME != '' ">
		 		AND  QUALITY_CONTENT LIKE #{pd.ITEMCOLLECTNAME2}  
		 		</if>
	ORDER BY  CREATE_DATE DESC
  </select>
  
  <!-- 删除 -->
	  <update id="deleteByIsDel" parameterType="pd" flushCache="false">
  		 update Tt_task_quality   set   IS_DEL = 1 where TASK_QUALITY_ID=#{taskQualityId,jdbcType=VARCHAR}
	  </update>
 <!-- 批量删除 -->
	<delete id="deleteAllTaskQuality" parameterType="String" flushCache="false">
		update Tt_task_quality
		 set
			IS_DEL =1 where TASK_QUALITY_ID in 
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
  
  <select id="selectCCId"  parameterType="pd" resultType="java.lang.String">
  SELECT GROUP_CONCAT(t.`USER_ID`) FROM `tt_check_user` t WHERE t.`SECURITY_QUALITY_ID`=#{taskQualityId,jdbcType=VARCHAR}
  </select>
  
</mapper>