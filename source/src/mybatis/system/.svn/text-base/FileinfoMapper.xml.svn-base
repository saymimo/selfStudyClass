<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="FileinfoMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.Fileinfo" >
    <id column="FILE_ID" property="fileId" jdbcType="VARCHAR" />
    <result column="FOREIGN_ID" property="foreignId" jdbcType="VARCHAR" />
    <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
    <result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
    <result column="FILE_TYPE" property="fileType" jdbcType="VARCHAR" />
    <result column="FILE_ARCHIVE" property="fileArchive" jdbcType="INTEGER" />
    <result column="PREVIEW" property="preview" jdbcType="VARCHAR" />
   <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="FILE_SUFFIX" property="fileSuffix" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    FILE_ID, FOREIGN_ID, FILE_NAME, FILE_PATH, FILE_TYPE, FILE_ARCHIVE,CREATE_DATE,CREATE_BY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  parameterType="pd" >
    select 
    FILE_ID, FOREIGN_ID, FILE_NAME, FILE_PATH, FILE_TYPE, FILE_ARCHIVE,CREATE_DATE,CREATE_BY,SUBSTRING_INDEX(FILE_NAME,'.',-1) as FILE_SUFFIX
    from tt_file
    where FILE_ID = #{FILEID,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByForeignId" resultMap="BaseResultMap" parameterType="pd" >
    select 
    FILE_ID, FOREIGN_ID, FILE_NAME, FILE_PATH, FILE_TYPE, FILE_ARCHIVE,CREATE_DATE,CREATE_BY,
    IF(SUBSTRING_INDEX(FILE_NAME,'.',-1)='docx' OR SUBSTRING_INDEX(FILE_NAME,'.',-1)='doc'  OR 
    SUBSTRING_INDEX(FILE_NAME,'.',-1)='xlsx' OR SUBSTRING_INDEX(FILE_NAME,'.',-1)='pdf'  OR 
    SUBSTRING_INDEX(FILE_NAME,'.',-1)='xls','yes','no') AS PREVIEW
    from tt_file
    where FOREIGN_ID = #{FOREIGNID,jdbcType=VARCHAR} 
  </select>
  
     <select id="findFileinfoByID" resultMap="BaseResultMap" parameterType="pd" >
    select 
    FILE_ID, FOREIGN_ID, FILE_NAME, FILE_PATH, FILE_TYPE, FILE_ARCHIVE,CREATE_DATE,CREATE_BY,
    IF(SUBSTRING_INDEX(FILE_NAME,'.',-1)='docx' OR SUBSTRING_INDEX(FILE_NAME,'.',-1)='doc'  OR 
    SUBSTRING_INDEX(FILE_NAME,'.',-1)='xlsx' OR SUBSTRING_INDEX(FILE_NAME,'.',-1)='pdf'  OR 
    SUBSTRING_INDEX(FILE_NAME,'.',-1)='xls','yes','no') AS PREVIEW
    from tt_file
    where FOREIGN_ID = #{FOREIGNID,jdbcType=VARCHAR} 
  </select>
  <!--这个sql的逻辑和selectByForeignId的sql的逻辑一样-->
  <select id="selectFileByTwo"  resultMap="BaseResultMap" parameterType="pd">
    SELECT 
  FILE_ID,
  FOREIGN_ID,
  FILE_NAME,
  FILE_PATH,
  FILE_TYPE,
  FILE_ARCHIVE,
  CREATE_DATE,
  CREATE_BY,
  IF(
    SUBSTRING_INDEX(FILE_NAME, '.', -1) = 'docx' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', -1) = 'doc' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', -1) = 'xlsx' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', -1) = 'xls'
    OR SUBSTRING_INDEX(FILE_NAME,'.',-1)='pdf',
    'yes',
    'no'
  ) AS PREVIEW 
FROM
  tt_file 
WHERE FOREIGN_ID IN  (#{PK,jdbcType=VARCHAR},#{FK,jdbcType=VARCHAR})

  </select>
  
  
   <select id="selectFileByTenderinfo"  resultMap="BaseResultMap" parameterType="pd">
  
  SELECT 
  FILE_ID,
  FOREIGN_ID,
  FILE_NAME,
  FILE_PATH,
  FILE_TYPE,
  FILE_ARCHIVE,
  CREATE_DATE,
  CREATE_BY,
  IF(
    SUBSTRING_INDEX(FILE_NAME, '.', - 1) = 'docx' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', - 1) = 'doc' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', - 1) = 'xlsx' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', - 1) = 'xls' 
    OR SUBSTRING_INDEX(FILE_NAME, '.', - 1) = 'pdf',
    'yes',
    'no'
  ) AS PREVIEW 
FROM
  tt_file 
WHERE FOREIGN_ID IN ((SELECT  t.`TRIBUNE_ID` FROM `tt_tribune`  t WHERE t.`REVIEW_OBJ_ID` =#{tenderInfo} AND t.`TYPE`=3),#{tenderInfo}) 

   </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="pd" >
    delete from tt_file
    where FILE_ID = #{FILEID,jdbcType=VARCHAR}
  </delete>
  
    <delete id="deleteByForeignId" parameterType="pd" >
    delete from tt_file
    where  FOREIGN_ID = #{FOREIGNID,jdbcType=VARCHAR}
   </delete>
  
  <insert id="insert" parameterType="pd" >
    insert into tt_file (FILE_ID, FOREIGN_ID, FILE_NAME, 
      FILE_PATH, FILE_TYPE, FILE_ARCHIVE,CREATE_DATE,CREATE_BY
      )
    values (#{FILEID,jdbcType=VARCHAR}, #{FOREIGNID,jdbcType=VARCHAR}, #{FILENAME,jdbcType=VARCHAR}, 
      #{FILEPATH,jdbcType=VARCHAR}, #{FILETYPE,jdbcType=VARCHAR}, #{FILEARCHIVE,jdbcType=INTEGER}
      , #{CREATE_DATE,jdbcType=TIMESTAMP}, #{CREATE_BY,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.Fileinfo" >
    insert into tt_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        FILE_ID,
      </if>
      <if test="foreignId != null" >
        FOREIGN_ID,
      </if>
      <if test="fileName != null" >
        FILE_NAME,
      </if>
      <if test="filePath != null" >
        FILE_PATH,
      </if>
      <if test="fileType != null" >
        FILE_TYPE,
      </if>
      <if test="fileArchive != null" >
        FILE_ARCHIVE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="foreignId != null" >
        #{foreignId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileArchive != null" >
        #{fileArchive,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.Fileinfo" >
    update tt_file
    <set >
      <if test="foreignId != null" >
        FOREIGN_ID = #{foreignId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileArchive != null" >
        FILE_ARCHIVE = #{fileArchive,jdbcType=INTEGER},
      </if>
    </set>
    where FILE_ID = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.Fileinfo" >
    update tt_file
    set FOREIGN_ID = #{foreignId,jdbcType=VARCHAR},
      FILE_NAME = #{fileName,jdbcType=VARCHAR},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      FILE_ARCHIVE = #{fileArchive,jdbcType=INTEGER}
    where FILE_ID = #{fileId,jdbcType=VARCHAR}
  </update>
</mapper>