<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="InvoiceOutMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.InvoiceOut" >
    <id column="INVOICE_OUT_ID" property="invoiceOutId" jdbcType="VARCHAR" />
    <result column="IN_INVOICE_ID" property="inInvoiceId" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="MONEY" property="money" jdbcType="DECIMAL" />
    <result column="TAX_MONEY" property="taxMoney" jdbcType="DECIMAL" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    INVOICE_OUT_ID, IN_INVOICE_ID, REMARK, MONEY, TAX_MONEY, IS_DEL, CREATE_DATE, CREATE_BY, 
    UPDATE_DATE, UPDATE_BY,TYPE
  </sql>
  <select id="selectByPrimaryKey" resultType="pd" parameterType="page" >
    select 
      INVOICE_OUT_ID, IN_INVOICE_ID, REMARK, MONEY, TAX_MONEY, IS_DEL, CREATE_DATE, CREATE_BY, 
    UPDATE_DATE, UPDATE_BY,TYPE 
    from tt_invoice_out
    where INVOICE_OUT_ID = #{invoiceOutId,jdbcType=VARCHAR}
  </select>
  
  <select id="findInvoidceOutToChooseList" resultType="pd" parameterType="pd" >
    select 
      i.IN_INVOICE_ID,
  i.STRUCT_ID,
  i.ITEM_ID,
  i.FOREIGN_KEY,
  i.SOURCE,
  i.FINANCE_NO,
  i.INVOICE_CODE,
  i.TAX_RATE,
  i.INVOICE_NO,
  i.TAX_DATE,
  i.PURCHASE_NAME,
  i.PURCHASE_IDENTIFY_NUMBER,
  i.PURCHASE_ADDRESS,
  i.PURCHASE_PHONE,
  i.PURCHASE_ACCOUNT_NUMBER,
  i.SALES_NAME,
  i.SALES_IDENTIFY_NUMBER,
  i.SALES_ADDRESS,
  i.SEALS_PHONE,
  i.SALES_ACCOUNT_NUMBER,
  i.INVOICE_MONEY,
  i.TAX_MONEY,
  i.COLLECT_NAME,
  i.CHECK_NAME,
  i.OPEN_NAME,
  i.IS_RIGHT,
  i.UP_DATE,
  i.STATE,
  i.CREATE_DATE,
  i.CREATE_BY,
  i.UPDATE_DATE,
  i.UPDATE_BY
    from tt_in_invoice i
    where  FIND_IN_SET(i.IN_INVOICE_ID,#{IN_INVOICE_ID_LIST})
  </select>
   
  <select id="selectInvoiceOut" resultType="pd" parameterType="page"  useCache="false">
  					 select 
      INVOICE_OUT_ID, IN_INVOICE_ID, REMARK, MONEY, TAX_MONEY, IS_DEL, CREATE_DATE, CREATE_BY, 
      (select INVOICE_NO from tt_in_invoice where tt_in_invoice.IN_INVOICE_ID = tt_invoice_out.IN_INVOICE_ID ) as INVOICE_NO,
      (select INVOICE_MONEY from tt_in_invoice where tt_in_invoice.IN_INVOICE_ID = tt_invoice_out.IN_INVOICE_ID ) as INVOICE_MONEY,
       (select TAX_RATE from tt_in_invoice where tt_in_invoice.IN_INVOICE_ID = tt_invoice_out.IN_INVOICE_ID ) as TAX_RATE,
   		 UPDATE_DATE, UPDATE_BY,TYPE 
    		from tt_invoice_out where INVOICE_OUT_ID = #{INVOICE_OUT_ID,jdbcType=VARCHAR}
  
   </select>
   
   
  <select id="listPageInvoiceOut" resultType="pd" parameterType="page" >
  		
  		 select 
      INVOICE_OUT_ID, IN_INVOICE_ID, REMARK, MONEY, TAX_MONEY, IS_DEL, CREATE_DATE, CREATE_BY, 
   		 UPDATE_DATE, UPDATE_BY,TYPE , (select INVOICE_NO from tt_in_invoice where tt_in_invoice.IN_INVOICE_ID = tt_invoice_out.IN_INVOICE_ID ) as INVOICE_NO,
   		  (select INVOICE_CODE from tt_in_invoice where tt_in_invoice.IN_INVOICE_ID = tt_invoice_out.IN_INVOICE_ID ) as INVOICE_CODE
    		from tt_invoice_out where IS_DEL=0 
    		<if test="pd.STRUCTAGE != 0 ">
		 	  and STRUCT_ID =  #{pd.STRUCT_ID,jdbcType=VARCHAR}
			</if>
			order by CREATE_DATE desc
  
  </select>
  
   <select id="listPageInInvoice" resultType="pd" parameterType="page"  useCache="false">
SELECT
  i.IN_INVOICE_ID,
  i.STRUCT_ID,
  i.ITEM_ID,
  i.FOREIGN_KEY,
  i.SOURCE,
  i.FINANCE_NO,
  i.INVOICE_CODE,
  i.TAX_RATE,
  i.INVOICE_NO,
  i.TAX_DATE,
  i.PURCHASE_NAME,
  i.PURCHASE_IDENTIFY_NUMBER,
  i.PURCHASE_ADDRESS,
  i.PURCHASE_PHONE,
  i.PURCHASE_ACCOUNT_NUMBER,
  i.SALES_NAME,
  i.SALES_IDENTIFY_NUMBER,
  i.SALES_ADDRESS,
  i.SEALS_PHONE,
  i.SALES_ACCOUNT_NUMBER,
  i.INVOICE_MONEY,
  i.TAX_MONEY,
  i.COLLECT_NAME,
  i.CHECK_NAME,
  i.OPEN_NAME,
  i.IS_RIGHT,
  i.UP_DATE,
  i.STATE,
  i.CREATE_DATE,
  i.CREATE_BY,
  i.UPDATE_DATE,
  i.UPDATE_BY,
  (SELECT 
    NAME 
  FROM
    `sys_user` u 
  WHERE u.USER_ID = i.CREATE_BY) AS CREATE_NAME,
  (SELECT 
    ITEM_NAME 
  FROM
    `tt_iteminfo` 
  WHERE tt_iteminfo.`ITEM_ID` = i.ITEM_ID) AS ITEM_NAME 
 FROM
  `tt_in_invoice`  i  LEFT JOIN  `tt_iteminfo` it ON it.`ITEM_ID`=i.`ITEM_ID`  
  WHERE i.IS_DEL=0  AND i.`IN_INVOICE_ID` NOT IN ( SELECT io.`IN_INVOICE_ID` FROM `tt_invoice_out`  io  WHERE io.`IS_DEL`=0 GROUP BY io.`IN_INVOICE_ID`)
   AND i.STRUCT_ID=#{pd.STRUCT_ID,jdbcType=VARCHAR}  and it.TAXATION_TYPE=0
  		<if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
					 i.INVOICE_CODE LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
					 or 
					 i.INVOICE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
					 or 
					 i.INVOICE_MONEY LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
					 or i.ITEM_ID in ( SELECT t.`ITEM_ID` FROM `tt_iteminfo` t WHERE t.`ITEM_NAME` LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')  )
				)
		</if>
ORDER BY  CREATE_DATE DESC
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_invoice_out
    where INVOICE_OUT_ID = #{invoiceOutId,jdbcType=VARCHAR}
  </delete>
  <insert id="saveInvoiceOut" parameterType="pd" >
    insert into tt_invoice_out (INVOICE_OUT_ID, IN_INVOICE_ID, REMARK, 
      MONEY, TAX_MONEY, IS_DEL, 
      CREATE_DATE, CREATE_BY,STRUCT_ID,
        TYPE)
    values (#{INVOICE_OUT_ID,jdbcType=VARCHAR}, #{IN_INVOICE_ID,jdbcType=VARCHAR}, #{REMARK,jdbcType=VARCHAR}, 
      #{MONEY,jdbcType=DECIMAL}, #{TAX_MONEY,jdbcType=DECIMAL}, #{IS_DEL,jdbcType=INTEGER}, 
      #{CREATE_DATE,jdbcType=TIMESTAMP}, #{CREATE_BY,jdbcType=VARCHAR},#{STRUCT_ID,jdbcType=VARBINARY},  #{TYPE,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ssc.entity.system.InvoiceOut" >
    insert into tt_invoice_out
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="invoiceOutId != null" >
        INVOICE_OUT_ID,
      </if>
      <if test="inInvoiceId != null" >
        IN_INVOICE_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
      <if test="taxMoney != null" >
        TAX_MONEY,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="invoiceOutId != null" >
        #{invoiceOutId,jdbcType=VARCHAR},
      </if>
      <if test="inInvoiceId != null" >
        #{inInvoiceId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="taxMoney != null" >
        #{taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateInvoiceOut" parameterType="pd" >
    update tt_invoice_out
    <set >
      <if test="IN_INVOICE_ID != null" >
        IN_INVOICE_ID = #{IN_INVOICE_ID,jdbcType=VARCHAR},
      </if>
      <if test="REMARK != null" >
        REMARK = #{REMARK,jdbcType=VARCHAR},
      </if>
      <if test="MONEY != null" >
        MONEY = #{MONEY,jdbcType=DECIMAL},
      </if>
      <if test="TAX_MONEY != null" >
        TAX_MONEY = #{TAX_MONEY,jdbcType=DECIMAL},
      </if>
      <if test="IS_DEL != null" >
        IS_DEL = #{IS_DEL,jdbcType=INTEGER},
      </if>
      <if test="CREATE_DATE != null" >
        CREATE_DATE = #{CREATE_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="CREATE_BY != null" >
        CREATE_BY = #{CREATE_BY,jdbcType=VARCHAR},
      </if>
      <if test="UPDATE_DATE != null" >
        UPDATE_DATE = #{UPDATE_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="UPDATE_BY != null" >
        UPDATE_BY = #{UPDATE_BY,jdbcType=VARCHAR},
      </if>
      <if test="TYPE != null" >
        TYPE = #{TYPE,jdbcType=VARBINARY},
      </if>
    </set>
    where INVOICE_OUT_ID = #{INVOICE_OUT_ID,jdbcType=VARCHAR}
  </update>
  
  
  
  <update id="deleteInvoiceOut" parameterType="pd" >
  		update tt_invoice_out
    set IS_DEL = 1
     where INVOICE_OUT_ID = #{INVOICE_OUT_ID,jdbcType=VARCHAR}
    
  </update>
  
  <!-- 批量删除用户 -->
	<delete id="deleteAll" parameterType="String" flushCache="false">
	 	update tt_invoice_out
    set IS_DEL = 1
		where 
			INVOICE_OUT_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssc.entity.system.InvoiceOut" >
    update tt_invoice_out
    set IN_INVOICE_ID = #{inInvoiceId,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      MONEY = #{money,jdbcType=DECIMAL},
      TAX_MONEY = #{taxMoney,jdbcType=DECIMAL},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARBINARY}
    where INVOICE_OUT_ID = #{invoiceOutId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.InvoiceOut" >
    update tt_invoice_out
    set IN_INVOICE_ID = #{inInvoiceId,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      MONEY = #{money,jdbcType=DECIMAL},
      TAX_MONEY = #{taxMoney,jdbcType=DECIMAL},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where INVOICE_OUT_ID = #{invoiceOutId,jdbcType=VARCHAR}
  </update>
</mapper>