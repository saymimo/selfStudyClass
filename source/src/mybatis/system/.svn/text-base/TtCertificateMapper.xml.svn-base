<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtCertificateMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtCertificate" >
    <id column="CERTIFICATE_ID" property="certificateId" jdbcType="VARCHAR" />
    <result column="STRUCT_ID" property="structId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="CERTIFICATE_TYPE" property="certificateType" jdbcType="INTEGER" />
    <result column="CERTIFICATE_PER" property="certificatePer" jdbcType="INTEGER" />
    <result column="CERTIFICATE_NO" property="certificateNo" jdbcType="VARCHAR" />
    <result column="CERTIFICATE_NAME" property="certificateName" jdbcType="VARCHAR" />
    <result column="SEND_DATE" property="sendDate" jdbcType="DATE" />
    <result column="SEND_UNIT" property="sendUnit" jdbcType="VARCHAR" />
    <result column="EXPIRE_DATE" property="expireDate" jdbcType="DATE" />
    <result column="REGISTER_DATE" property="registerDate" jdbcType="DATE" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="IS_B" property="isB" jdbcType="INTEGER" />
    <result column="NUM" property="num" jdbcType="INTEGER" />
    <result column="LEVEL" property="level" jdbcType="VARCHAR" />
    <result column="SPECIALTY_TYPE" property="specialtyType" jdbcType="VARCHAR" />
    <result column="CERTIFICATE_STATE" property="certificateState" jdbcType="INTEGER" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
     <result column="TYPE" property="type" jdbcType="VARCHAR" />
          <result column="CERTIFICATE_REMARK" property="certificateRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    CERTIFICATE_ID, STRUCT_ID, USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL, SPECIALTY_TYPE, CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, 
    UPDATE_BY,TYPE,CERTIFICATE_REMARK
  </sql>
  <select id="selectByPrimaryKey" resultType="pd" parameterType="pd" >
    select 
     CERTIFICATE_ID, STRUCT_ID, (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=tt_certificate.USER_ID) USER_ID, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL, (SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE, CERTIFICATE_STATE, IS_DEL, CREATE_DATE,
    (SELECT NAME FROM `sys_user` u WHERE u.`USER_ID`=tt_certificate.CREATE_BY) as  CREATE_BY, UPDATE_DATE, 
    UPDATE_BY,TYPE,CERTIFICATE_REMARK
    from tt_certificate
    where CERTIFICATE_ID = #{certificateId,jdbcType=VARCHAR}
  </select>
  
   <select id="findCertificateInfo" resultType="pd" parameterType="pd" >
    select 
     CERTIFICATE_ID, STRUCT_ID, (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=tt_certificate.USER_ID) USER_ID, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL, (SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE, CERTIFICATE_STATE, IS_DEL, CREATE_DATE,
    (SELECT NAME FROM `sys_user` u WHERE u.`USER_ID`=tt_certificate.CREATE_BY) as  CREATE_BY, UPDATE_DATE, 
    UPDATE_BY,TYPE,CERTIFICATE_REMARK
    from tt_certificate
    where CERTIFICATE_ID = #{cityId,jdbcType=VARCHAR}
  </select>
  
  <select id="findCertificateByTypeName" parameterType="String" resultType="pd">
			SELECT d.`NAME` FROM `sys_dictionaries` d WHERE d.`BIANMA` IN 
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</select>
  
  <!-- 通过id查询信息 -->
    <select id="findCertificateCertificateId" resultMap="BaseResultMap" parameterType="pd" >
    select 
      <include refid="Base_Column_List" />
    from tt_certificate
    where CERTIFICATE_ID = #{certificateId,jdbcType=VARCHAR}
  </select>
  
  <!-- 选择组织 -->
  <select id="findStructInfoByAll" parameterType="pd" resultType="pd">
  SELECT s.`STRUCT_ID`,s.`STRUCT_NAME` FROM `sys_structinfo` s
  </select>
  
  
  <update id="updateCertificateByState" parameterType="pd">
   update tt_certificate   set   CERTIFICATE_STATE = #{certificateState} where CERTIFICATE_ID=#{cityId}
  </update>
  		<!-- 删除 -->
	  <update id="updateByIsDel" parameterType="pd">
  		 update tt_certificate   set   IS_DEL = 1 where CERTIFICATE_ID=#{certificateId}
	  </update>
	  <!-- 批量删除 -->
	<delete id="deleteAllCertificate" parameterType="String" flushCache="false">
		update tt_certificate
		 set
			IS_DEL =1 where CERTIFICATE_ID in 
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
  
  <!-- 建造师证选择人员 -->
  <select id="findSysUser" parameterType="pd" resultType="pd">
 	 
		SELECT 
		  * 
		FROM
		  `sys_user` s 
		WHERE 
		  <!-- 
		  s.`USERNAME` IS NOT NULL 
		  AND s.`PASSWORD` IS NOT NULL 
		  AND
		   -->
		   s.`USER_ID` NOT IN 
		  (SELECT 
		    c.`USER_ID` 
		  FROM
		    `tt_certificate` c 
		  WHERE c.CERTIFICATE_PER = 0 
		    AND c.`CERTIFICATE_TYPE` = 1
		    <if test="certificateId != null and certificateId != ''">
			and c.CERTIFICATE_ID != #{certificateId} 
		</if>
		    )
  </select>
    
  <!-- 资格证选择人员 -->
  <select id="findSysUserZGZS" parameterType="pd" resultType="pd">
 	 
		SELECT 
		  * 
		FROM
		  `sys_user` s 
		  <!-- WHERE s.`USERNAME` IS NOT NULL 
		  AND s.`PASSWORD` IS NOT NULL  -->
		
  </select>
   <!-- 通过编号获取数据 -->
	<select id="hasCertificate" parameterType="pd" resultType="pd" useCache="false">
		select 
			 <include refid="Base_Column_List" />
		from 
			tt_certificate
		where 
			STRUCT_ID=#{STRUCT_ID} and 
			CERTIFICATE_NO = #{certificateNo} 
		<if test="certificateId != null and certificateId != ''">
			and CERTIFICATE_ID != #{certificateId} 
		</if>
	</select>
	
	 <!-- 判断用户加类型 是否唯一      比如  选择张三,类型是 材料员,如果 已存在, 就不可以 添加 张三并且 类型是 材料员的 信息 -->
	<select id="hasUserIdAndType" parameterType="pd" resultType="pd" useCache="false">
		select 
			 <include refid="Base_Column_List" />
		from 
			tt_certificate
		where 
			STRUCT_ID=#{STRUCT_ID} and 
			USER_ID=#{userId} and SPECIALTY_TYPE=#{specialtyType}
		<if test="certificateId != null and certificateId != ''">
			and CERTIFICATE_ID != #{certificateId} 
		</if>
	</select>
  
  <!-- 查询企业证书 -->
  <select id="findCertificatelistPage" parameterType="page" resultType="pd">
  select 
  	CERTIFICATE_ID, STRUCT_ID,  (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=c.USER_ID) AS USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL,  (SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE
    , CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE,TYPE, 
    UPDATE_BY,(SELECT (SELECT s.`STRUCT_NAME`  FROM  `sys_structinfo` s WHERE s.`STRUCT_ID` = l.`IN_STRUCT_ID`)  FROM    `tt_loan` l   WHERE l.`CITY_ID` = c.`CERTIFICATE_ID`     AND l.`STATE` != 3) AS suozai
    from tt_certificate c where IS_DEL=0 and STRUCT_ID=#{pd.STRUCT_ID} and CERTIFICATE_TYPE=0
      <if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
					c.`USER_ID` IN ( SELECT u.`USER_ID` FROM sys_user  u WHERE u.`NAME` LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')  )
					 or 
					 CERTIFICATE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
					  or 
					 LEVEL LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
				)
		</if>
		<if test="pd.specialtyType != null and pd.specialtyType != ''"><!-- 关键词检索 -->
		 AND c.`SPECIALTY_TYPE` =( SELECT d.`BIANMA` FROM `sys_dictionaries` d WHERE d.`BIANMA`=#{pd.specialtyType})
		 </if>
  </select>
    <!-- 建造师证书列表 -->
  <select id="findConstructionlistPage" parameterType="page" resultType="pd">
  select 
  	CERTIFICATE_ID, STRUCT_ID, (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=c.USER_ID) AS USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL,(SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE
    , CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, TYPE,
    UPDATE_BY,(SELECT (SELECT s.`STRUCT_NAME`  FROM  `sys_structinfo` s WHERE s.`STRUCT_ID` = l.`IN_STRUCT_ID`)  FROM    `tt_loan` l   WHERE l.`CITY_ID` = c.`CERTIFICATE_ID`     AND l.`STATE` != 3) AS suozai
    from tt_certificate c where IS_DEL=0 and STRUCT_ID=#{pd.STRUCT_ID} and CERTIFICATE_TYPE=1 and  CERTIFICATE_PER=0
    <if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
				
 					c.`USER_ID` IN ( SELECT u.`USER_ID` FROM sys_user  u WHERE u.`NAME` LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')  )
					 or 
					 CERTIFICATE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
					  or 
					 LEVEL LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
				)
		</if>
		  <if test="pd.CERTIFICATE_STATE != null and pd.CERTIFICATE_STATE != ''"><!-- 关键词检索 -->
		  and CERTIFICATE_STATE=#{pd.CERTIFICATE_STATE}
  		  </if>
    
  </select>
  <!--导出excel-->
  <select id="findConstructionExcel" parameterType="page" resultType="pd">
  select 
  	CERTIFICATE_ID, (SELECT s.`STRUCT_NAME` FROM `sys_structinfo` s WHERE s.`STRUCT_ID`=c.STRUCT_ID)  as STRUCT_ID, (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=c.USER_ID) AS USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL,(SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE
    , CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, ( SELECT GROUP_CONCAT(d.`NAME`) FROM `sys_dictionaries` d WHERE FIND_IN_SET(d.`BIANMA`,c.TYPE)) AS TYPE,
    UPDATE_BY,(SELECT (SELECT s.`STRUCT_NAME`  FROM  `sys_structinfo` s WHERE s.`STRUCT_ID` = l.`IN_STRUCT_ID`)  FROM    `tt_loan` l   WHERE l.`CITY_ID` = c.`CERTIFICATE_ID`     AND l.`STATE` != 3) AS suozai
    from tt_certificate c where IS_DEL=0 and STRUCT_ID=#{STRUCT_ID} and CERTIFICATE_TYPE=1 and  CERTIFICATE_PER=0
    <if test="NAME != null and NAME != ''"><!-- 关键词检索 -->
			and
				(
 					c.`USER_ID` IN ( SELECT u.`USER_ID` FROM sys_user  u WHERE u.`NAME` LIKE CONCAT(CONCAT('%', #{NAME}),'%')  )
					 or 
					 CERTIFICATE_NO LIKE CONCAT(CONCAT('%', #{NAME}),'%') 
					  or 
					 LEVEL LIKE CONCAT(CONCAT('%', #{NAME}),'%')
				)
		</if>
		  <if test="CERTIFICATE_STATE != null and CERTIFICATE_STATE != ''"><!-- 关键词检索 -->
		  and CERTIFICATE_STATE=#{CERTIFICATE_STATE}
  		  </if>
    
  </select>
      <!-- 资格证书列表 -->
  <select id="findQualificationlistPage" parameterType="page" resultType="pd">
  select 
  	CERTIFICATE_ID, STRUCT_ID,  (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=c.USER_ID) AS USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL,  (SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE
    , CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, TYPE,
    UPDATE_BY,(SELECT (SELECT s.`STRUCT_NAME`  FROM  `sys_structinfo` s WHERE s.`STRUCT_ID` = l.`IN_STRUCT_ID`)  FROM    `tt_loan` l   WHERE l.`CITY_ID` = c.`CERTIFICATE_ID`     AND l.`STATE` != 3) AS suozai
    from tt_certificate c where IS_DEL=0 and STRUCT_ID=#{pd.STRUCT_ID} and CERTIFICATE_TYPE=1 and  CERTIFICATE_PER=1
        <if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
					 c.`USER_ID` IN ( SELECT u.`USER_ID` FROM sys_user  u WHERE u.`NAME` LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')  )
					 or 
					 CERTIFICATE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
					 or 
					 LEVEL LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
				)
		</if>
		<if test="pd.specialtyType != null and pd.specialtyType != ''"><!-- 关键词检索 -->
		 AND c.`SPECIALTY_TYPE` =( SELECT d.`BIANMA` FROM `sys_dictionaries` d WHERE d.`BIANMA`=#{pd.specialtyType})
		 </if>
		 <if test="pd.CERTIFICATE_STATE != null and pd.CERTIFICATE_STATE != ''"><!-- 关键词检索 -->
		  and CERTIFICATE_STATE=#{pd.CERTIFICATE_STATE}
  		  </if>
  </select>
  
  
  <select id="findQualificationExcel" parameterType="page" resultType="pd">
  select 
  	CERTIFICATE_ID,(SELECT s.`STRUCT_NAME` FROM `sys_structinfo` s WHERE s.`STRUCT_ID`=c.STRUCT_ID)  as STRUCT_ID,  (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=c.USER_ID) AS USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL,  (SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE
    , CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, ( SELECT GROUP_CONCAT(d.`NAME`) FROM `sys_dictionaries` d WHERE FIND_IN_SET(d.`BIANMA`,c.TYPE)) AS TYPE,
    UPDATE_BY,(SELECT (SELECT s.`STRUCT_NAME`  FROM  `sys_structinfo` s WHERE s.`STRUCT_ID` = l.`IN_STRUCT_ID`)  FROM    `tt_loan` l   WHERE l.`CITY_ID` = c.`CERTIFICATE_ID`     AND l.`STATE` != 3) AS suozai
    from tt_certificate c where IS_DEL=0 and STRUCT_ID=#{STRUCT_ID} and CERTIFICATE_TYPE=1 and  CERTIFICATE_PER=1
        <if test="NAME != null and NAME != ''"><!-- 关键词检索 -->
			and
				(
					 c.`USER_ID` IN ( SELECT u.`USER_ID` FROM sys_user  u WHERE u.`NAME` LIKE CONCAT(CONCAT('%', #{NAME}),'%')  )
					 or 
					 CERTIFICATE_NO LIKE CONCAT(CONCAT('%', #{NAME}),'%') 
					 or 
					 LEVEL LIKE CONCAT(CONCAT('%', #{NAME}),'%')
				)
		</if>
		<if test="specialtyType != null and specialtyType != ''"><!-- 关键词检索 -->
		 AND c.`SPECIALTY_TYPE` =( SELECT d.`BIANMA` FROM `sys_dictionaries` d WHERE d.`BIANMA`=#{specialtyType})
		 </if>
		 <if test="CERTIFICATE_STATE != null and CERTIFICATE_STATE != ''"><!-- 关键词检索 -->
		  and CERTIFICATE_STATE=#{CERTIFICATE_STATE}
  		  </if>
  </select>
  
  <!-- 个人证书列表 -->
    <select id="findUserCertificatelistPage" parameterType="page" resultType="pd">
  select 
  	CERTIFICATE_ID, STRUCT_ID,  (SELECT u.`NAME` FROM `sys_user` u WHERE u.`USER_ID`=c.USER_ID) AS USER_ID, CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
    CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, EXPIRE_DATE, REGISTER_DATE, REMARK, IS_B, 
    NUM, LEVEL,  (SELECT    NAME  FROM   sys_dictionaries s   WHERE s.`BIANMA` = SPECIALTY_TYPE) AS SPECIALTY_TYPE
    , CERTIFICATE_STATE, IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, TYPE,
    UPDATE_BY,(SELECT (SELECT s.`STRUCT_NAME`  FROM  `sys_structinfo` s WHERE s.`STRUCT_ID` = l.`IN_STRUCT_ID`)  FROM    `tt_loan` l   WHERE l.`CITY_ID` = c.`CERTIFICATE_ID`     AND l.`STATE` != 3) AS suozai
    from tt_certificate c where   USER_ID=#{pd.userId}
       <if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
					c.`USER_ID` IN ( SELECT u.`USER_ID` FROM sys_user  u WHERE u.`NAME` LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')  )
					 or 
					 CERTIFICATE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
					  or 
					 LEVEL LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
				)
		</if>
		<if test="pd.specialtyType != null and pd.specialtyType != ''"><!-- 关键词检索 -->
		 AND c.`SPECIALTY_TYPE` =( SELECT d.`BIANMA` FROM `sys_dictionaries` d WHERE d.`BIANMA`=#{pd.specialtyType})
		 </if>
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_certificate
    where CERTIFICATE_ID = #{certificateId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtCertificate" >
    insert into tt_certificate (CERTIFICATE_ID, STRUCT_ID, USER_ID, 
      CERTIFICATE_TYPE, CERTIFICATE_PER, CERTIFICATE_NO, 
      CERTIFICATE_NAME, SEND_DATE, SEND_UNIT, 
      EXPIRE_DATE, REGISTER_DATE, REMARK, 
      IS_B, NUM, LEVEL, SPECIALTY_TYPE, 
      CERTIFICATE_STATE, IS_DEL, CREATE_DATE, 
      CREATE_BY, UPDATE_DATE, UPDATE_BY
      )
    values (#{certificateId,jdbcType=VARCHAR}, #{structId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{certificateType,jdbcType=INTEGER}, #{certificatePer,jdbcType=INTEGER}, #{certificateNo,jdbcType=VARCHAR}, 
      #{certificateName,jdbcType=VARCHAR}, #{sendDate,jdbcType=DATE}, #{sendUnit,jdbcType=VARCHAR}, 
      #{expireDate,jdbcType=DATE}, #{registerDate,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{isB,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{level,jdbcType=VARCHAR}, #{specialtyType,jdbcType=VARCHAR}, 
      #{certificateState,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pd" >
    insert into tt_certificate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="certificateId != null" >
        CERTIFICATE_ID,
      </if>
      <if test="structId != null" >
        STRUCT_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="certificateType != null" >
        CERTIFICATE_TYPE,
      </if>
      <if test="certificatePer != null" >
        CERTIFICATE_PER,
      </if>
      <if test="certificateNo != null" >
        CERTIFICATE_NO,
      </if>
      <if test="certificateName != null" >
        CERTIFICATE_NAME,
      </if>
      <if test="sendDate != null" >
        SEND_DATE,
      </if>
      <if test="sendUnit != null" >
        SEND_UNIT,
      </if>
      <if test="expireDate != null" >
        EXPIRE_DATE,
      </if>
      <if test="registerDate != null" >
        REGISTER_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="isB != null" >
        IS_B,
      </if>
      <if test="num != null" >
        NUM,
      </if>
      <if test="level != null" >
        LEVEL,
      </if>
      <if test="specialtyType != null" >
        SPECIALTY_TYPE,
      </if>
      <if test="certificateState != null" >
        CERTIFICATE_STATE,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
        <if test="certificateRemark != null" >
        CERTIFICATE_REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="certificateId != null" >
        #{certificateId,jdbcType=VARCHAR},
      </if>
      <if test="structId != null" >
        #{structId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null" >
        #{certificateType,jdbcType=INTEGER},
      </if>
      <if test="certificatePer != null" >
        #{certificatePer,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null" >
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="certificateName != null" >
        #{certificateName,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null" >
        #{sendDate,jdbcType=DATE},
      </if>
      <if test="sendUnit != null" >
        #{sendUnit,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=DATE},
      </if>
      <if test="registerDate != null" >
        #{registerDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isB != null" >
        #{isB,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="specialtyType != null" >
        #{specialtyType,jdbcType=VARCHAR},
      </if>
      <if test="certificateState != null" >
        #{certificateState,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
       <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
       <if test="certificateRemark != null" >
        #{certificateRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd" >
    update tt_certificate
    <set >
      <if test="structId != null" >
        STRUCT_ID = #{structId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null" >
        CERTIFICATE_TYPE = #{certificateType,jdbcType=INTEGER},
      </if>
      <if test="certificatePer != null" >
        CERTIFICATE_PER = #{certificatePer,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null" >
        CERTIFICATE_NO = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="certificateName != null" >
        CERTIFICATE_NAME = #{certificateName,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null" >
        SEND_DATE = #{sendDate,jdbcType=DATE},
      </if>
      <if test="sendUnit != null" >
        SEND_UNIT = #{sendUnit,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        EXPIRE_DATE = #{expireDate,jdbcType=DATE},
      </if>
      <if test="registerDate != null" >
        REGISTER_DATE = #{registerDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isB != null" >
        IS_B = #{isB,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        NUM = #{num,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        LEVEL = #{level,jdbcType=VARCHAR},
      </if>
      <if test="specialtyType != null" >
        SPECIALTY_TYPE = #{specialtyType,jdbcType=VARCHAR},
      </if>
      <if test="certificateState != null" >
        CERTIFICATE_STATE = #{certificateState,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
        <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      
      <if test="certificateRemark != null" >
        CERTIFICATE_REMARK=#{certificateRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where CERTIFICATE_ID = #{certificateId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.TtCertificate" >
    update tt_certificate
    set STRUCT_ID = #{structId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CERTIFICATE_TYPE = #{certificateType,jdbcType=INTEGER},
      CERTIFICATE_PER = #{certificatePer,jdbcType=INTEGER},
      CERTIFICATE_NO = #{certificateNo,jdbcType=VARCHAR},
      CERTIFICATE_NAME = #{certificateName,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=DATE},
      SEND_UNIT = #{sendUnit,jdbcType=VARCHAR},
      EXPIRE_DATE = #{expireDate,jdbcType=DATE},
      REGISTER_DATE = #{registerDate,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR},
      IS_B = #{isB,jdbcType=INTEGER},
      NUM = #{num,jdbcType=INTEGER},
      LEVEL = #{level,jdbcType=VARCHAR},
      SPECIALTY_TYPE = #{specialtyType,jdbcType=VARCHAR},
      CERTIFICATE_STATE = #{certificateState,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where CERTIFICATE_ID = #{certificateId,jdbcType=VARCHAR}
  </update>
</mapper>