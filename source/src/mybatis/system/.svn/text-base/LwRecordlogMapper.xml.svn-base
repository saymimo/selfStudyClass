<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="LwRecordlogMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.LwRecordlog" >
    <id column="ATTEN_ID" property="attenId" jdbcType="VARCHAR" />
    <result column="ATTEN_DEVICE" property="attenDevice" jdbcType="VARCHAR" />
    <result column="ATTEN_UID" property="attenUid" jdbcType="VARCHAR" />
    <result column="ATTEN_TYPE" property="attenType" jdbcType="INTEGER" />
    <result column="ATTEN_STATUS" property="attenStatus" jdbcType="INTEGER" />
    <result column="ATTEN_TIME" property="attenTime" jdbcType="VARCHAR" />
    <result column="ATTEN_DATE" property="attenDate" jdbcType="VARCHAR" />
    <result column="COMPANY_ID" property="companyId" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
    <result column="DEPART_NAME" property="departName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ATTEN_ID, ATTEN_DEVICE, ATTEN_UID, ATTEN_TYPE, ATTEN_STATUS, ATTEN_TIME, ATTEN_DATE, 
    COMPANY_ID, REMARK, REAL_NAME, DEPART_NAME
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from tt_lw_recordlog
  </select>
<select id="userInfo" parameterType="String" resultType="pd">
SELECT 
  u.`NAME`,
  u.`CC_USER_ID` 
FROM
  sys_user u 
WHERE u.`USER_ID` = #{userId,jdbcType=VARCHAR}
</select> 

<!-- 2016-09-20  管理人员ccIds -->
<select id="ccIdsForManagerUsers" parameterType="pd" resultType="String">
SELECT 
  GROUP_CONCAT(t.`CC_USER_ID`) 
FROM
  sys_user t 
WHERE t.`CC_USER_ID` IS NOT NULL 
  AND t.`CC_USER_ID` != ''
<if test="age=='no'">
  AND t.`STRUCT_ID` = #{STRUCT_ID,jdbcType=VARCHAR} 
</if>
ORDER BY t.`CREATE_DATE` ASC 
</select> 

<select id="slAllManageUser" parameterType="pd" resultType="String">
SELECT 
  GROUP_CONCAT(t.`CC_USER_ID`) 
FROM
  sys_user t 
WHERE t.`CC_USER_ID` IS NOT NULL 
  AND t.`CC_USER_ID` != '' 
<if test="age=='no'">
  AND t.`STRUCT_ID` = #{structId,jdbcType=VARCHAR} 
</if>
ORDER BY t.`CREATE_DATE` ASC 
</select>


<select id="slStructName" parameterType="pd" resultType="String">
SELECT 
  t.`STRUCT_NAME` 
FROM
  sys_structinfo t 
WHERE t.`STRUCT_ID` = #{structId,jdbcType=VARCHAR}
</select>

<select id="userListByStruct" parameterType="pd" resultType="pd">
SELECT 
  t.`CC_USER_ID`,
  t.`NAME`,
  ss.`STRUCT_NAME` 
FROM
  sys_user t,
  sys_structinfo ss 
WHERE t.`STRUCT_ID` = ss.`STRUCT_ID` 
  AND t.`CC_USER_ID` != '' 
<if test="age=='no'">
  AND t.`STRUCT_ID` = #{STRUCT_ID,jdbcType=VARCHAR} 
</if>

</select>

<select id="hasCcSn" parameterType="pd" resultType="String">
SELECT 
  GROUP_CONCAT(t.`CC_USER_ID`) 
FROM
  sys_user t 
WHERE t.`IS_DEL` = 0 
<if test="age=='no'">
  AND t.`STRUCT_ID` = #{STRUCT_ID,jdbcType=VARCHAR} 
</if>  
</select>

<select id="slUserNameByCcId" parameterType="String" resultType="String">
SELECT 
  t.`NAME` 
FROM
  sys_user t 
WHERE t.`CC_USER_ID` = #{useraccount,jdbcType=VARCHAR}
  AND t.`CC_USER_ID` IS NOT NULL 
  AND t.`CC_USER_ID` != '' 
</select>
  <select id="selectAllCcId" resultType="java.lang.String">
  SELECT 
  GROUP_CONCAT(p.`CC_LW_PERSONALINFO_ID`)  as ccId
FROM
  tt_lw_personalinfo p 
  WHERE p.`CC_LW_PERSONALINFO_ID` IS NOT NULL 
  </select>
  
  <select id="selectAllCcIdByItemId" resultType="java.lang.String"  parameterType="pd">
  SELECT 
  GROUP_CONCAT(p.`CC_LW_PERSONALINFO_ID`)  as ccId
FROM
  tt_lw_personalinfo p 
  WHERE p.`CC_LW_PERSONALINFO_ID` IS NOT NULL  and p.ITEM_ID=#{itemId,jdbcType=VARCHAR}
  </select>

  <!-- 删除当前项目下的 信息   根据  时间  和CcID-->
  <delete id="dlByDateAndCcId" parameterType="pd">
  delete from tt_lw_recordlog
    where ATTEN_DATE = #{start,jdbcType=VARCHAR} and ATTEN_UID in
    <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
 #{item}
</foreach>
  </delete>
  
  <!-- 通过cc_lw_personalinfo_id 查找tt_lw_personalinfo 表 lw_personalinfo_id  -->
  <select id="selectLwPersoninfoByCcId" parameterType="java.lang.String" resultType="java.lang.String">
  SELECT 
   p.`LW_NAME` 
FROM
  tt_lw_personalinfo p 
WHERE p.`CC_LW_PERSONALINFO_ID` = #{useraccount,jdbcType=VARCHAR}
  </select>
  <select id="selectPersonNames" parameterType="java.lang.String" resultType="java.lang.String">
  SELECT GROUP_CONCAT(p.`LW_NAME`)
FROM tt_lw_personalinfo p
WHERE p.`CC_LW_PERSONALINFO_ID` IN 
<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
  </select>
  
  <select id="selectItemNameById" parameterType="java.lang.String" resultType="java.lang.String">
 SELECT 
  i.`ITEM_NAME` 
FROM
  tt_iteminfo i 
WHERE i.`ITEM_ID`=#{ITEM_ID,jdbcType=VARCHAR}
  </select>
  
  
  
 <!-- 根据item_id  查询  tt_lw_personal 表  cc_lw_personalinfo_id --> 
  <select id="selectCcIdsByItemId"  parameterType="pd" resultType="java.lang.String">
  SELECT 
  GROUP_CONCAT(p.`CC_LW_PERSONALINFO_ID`) 
FROM
  tt_lw_personalinfo p 
WHERE p.`ITEM_ID` =#{ITEM_ID,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据  LW_TASKINFO_ID  和   attendance_date 时间更改考勤机预留 状态为1  -->
  <update id="upByDate" parameterType="pd">
  UPDATE 
  tt_lw_attendance a 
SET
  a.`ATTENDANCE_MACHINE` = 1,a.`UPDATE_DATE`=#{updateDate}
WHERE a.`LW_TASKINFO_ID` = #{lwTaskinfoId,jdbcType=VARCHAR}
  AND a.`ATTENDANCE_DATE` = #{attendanceDate} and ATTENDANCE_MACHINE !=1
  </update>
  
  <!-- 根据时间查询 tt_lw_attendance 表当天已有的 lw_taskinfo_id-->
  <select id="selectLwTaskinfoIdFromAttendance" resultType="java.lang.String" parameterType="java.lang.String">
  SELECT 
   GROUP_CONCAT(a.`LW_TASKINFO_ID` )
FROM
  tt_lw_attendance a 
WHERE a.`ATTENDANCE_DATE` = #{start,jdbcType=VARCHAR}
  AND a.`LW_TASKINFO_ID` NOT IN 
  (SELECT 
    lt.`LW_TASKINFO_ID` 
  FROM
    tt_lw_taskinfo lt 
  WHERE lt.`TASK_ID` IN 
    (SELECT 
      ti.`UID` 
    FROM
      tt_taskinfo ti 
    WHERE ti.`WAGE_APPROVAL` = 1 
      OR ti.`WAGE_APPROVAL` = 2))
  AND a.`ATTENDANCE_MACHINE` != 1 
  </select>
  
  <!-- 根据时间查询 tt_lw_taskinfo 表当天  所有的 lw_taskinfo_id   并且任务状态不是   审批中    和 已通过-->
  <select id="selectLwTaskinfoId" resultType="java.lang.String" parameterType="java.lang.String">
SELECT 
  GROUP_CONCAT(t.`LW_TASKINFO_ID`)
FROM
  tt_lw_taskinfo t 
WHERE t.`LW_PERSONALINFO_ID` IN 
  (SELECT 
    p.`LW_PERSONALINFO_ID` 
  FROM
    tt_lw_personalinfo p 
  WHERE p.`CC_LW_PERSONALINFO_ID` IN 
    (SELECT 
      r.`ATTEN_UID` 
    FROM
      tt_lw_recordlog r 
    WHERE r.`ATTEN_DATE` = #{start,jdbcType=VARCHAR})) 
     AND t.`TASK_ID` NOT IN 
  (SELECT 
    ti.`UID` 
  FROM
    tt_taskinfo ti 
  WHERE (
      ti.`WAGE_APPROVAL` = 1 
      OR ti.`WAGE_APPROVAL` = 2
    )) 
    AND t.`LW_TASKINFO_ID` NOT IN 
  (SELECT 
    a.`LW_TASKINFO_ID` 
  FROM
    tt_lw_attendance a 
  WHERE a.`ATTENDANCE_MACHINE` = 1 
    AND a.`ATTENDANCE_DATE` = #{start,jdbcType=VARCHAR})  
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_lw_recordlog
    where ATTEN_ID = #{attenId,jdbcType=VARCHAR}
  </select>
   <!-- 根据日期删除 -->
  <delete id="dlByDate" parameterType="java.lang.String" >
    delete from tt_lw_recordlog
    where ATTEN_DATE = #{start,jdbcType=VARCHAR}
  </delete>
 
   <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_lw_recordlog
    where ATTEN_ID = #{attenId,jdbcType=VARCHAR}
  </delete>
  
 
  <!-- ignore  忽略数据库中主键已存在的   -->
  <insert id="insertSelective" parameterType="pd" >
    insert ignore  into tt_lw_recordlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="attenId != null" >
        ATTEN_ID,
      </if>
      <if test="attenDevice != null" >
        ATTEN_DEVICE,
      </if>
      <if test="attenUid != null" >
        ATTEN_UID,
      </if>
      <if test="attenType != null" >
        ATTEN_TYPE,
      </if>
      <if test="attenStatus != null" >
        ATTEN_STATUS,
      </if>
      <if test="attenTime != null" >
        ATTEN_TIME,
      </if>
      <if test="attenDate != null" >
        ATTEN_DATE,
      </if>
      <if test="companyId != null" >
        COMPANY_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="realName != null" >
        REAL_NAME,
      </if>
      <if test="departName != null" >
        DEPART_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="attenId != null" >
        #{attenId,jdbcType=VARCHAR},
      </if>
      <if test="attenDevice != null" >
        #{attenDevice,jdbcType=VARCHAR},
      </if>
      <if test="attenUid != null" >
        #{attenUid,jdbcType=VARCHAR},
      </if>
      <if test="attenType != null" >
        #{attenType,jdbcType=INTEGER},
      </if>
      <if test="attenStatus != null" >
        #{attenStatus,jdbcType=INTEGER},
      </if>
      <if test="attenTime != null" >
        #{attenTime,jdbcType=VARCHAR},
      </if>
      <if test="attenDate != null" >
        #{attenDate,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="departName != null" >
        #{departName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.LwRecordlog" >
    update tt_lw_recordlog
    <set >
      <if test="attenDevice != null" >
        ATTEN_DEVICE = #{attenDevice,jdbcType=VARCHAR},
      </if>
      <if test="attenUid != null" >
        ATTEN_UID = #{attenUid,jdbcType=VARCHAR},
      </if>
      <if test="attenType != null" >
        ATTEN_TYPE = #{attenType,jdbcType=INTEGER},
      </if>
      <if test="attenStatus != null" >
        ATTEN_STATUS = #{attenStatus,jdbcType=INTEGER},
      </if>
      <if test="attenTime != null" >
        ATTEN_TIME = #{attenTime,jdbcType=VARCHAR},
      </if>
      <if test="attenDate != null" >
        ATTEN_DATE = #{attenDate,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        COMPANY_ID = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="departName != null" >
        DEPART_NAME = #{departName,jdbcType=VARCHAR},
      </if>
    </set>
    where ATTEN_ID = #{attenId,jdbcType=VARCHAR}
  </update>

</mapper>