<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="BorrowMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.Borrow" >
    <id column="BORROW_ID" property="borrowId" jdbcType="VARCHAR" />
    <result column="STRUCT_ID" property="structId" jdbcType="VARCHAR" />
    <result column="BORROW_TITLE" property="borrowTitle" jdbcType="VARCHAR" />
    <result column="BORROW_CONTENT" property="borrowContent" jdbcType="VARCHAR" />
    <result column="BORROW_STATE" property="borrowState" jdbcType="INTEGER" />
    <result column="RETURN_DATE" property="returnDate" jdbcType="DATE" />
    <result column="REVIEW_TYPE" property="reviewType" jdbcType="CHAR" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="FLOW_STATE" property="flowState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    BORROW_ID, STRUCT_ID, BORROW_TITLE, BORROW_CONTENT, BORROW_STATE, RETURN_DATE, REVIEW_TYPE, 
    IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY,FLOW_STAE
  </sql>
  <select id="findBorrowOne" resultType="pd" parameterType="pd" >
    select 
   BORROW_ID, STRUCT_ID, BORROW_TITLE, BORROW_CONTENT, BORROW_STATE, RETURN_DATE, REVIEW_TYPE,TYPE, 
    IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY, (select name from sys_user where user_id=tt_borrow.CREATE_BY) as CREATE_NAME
    ,(SELECT TRIBUNE_ID FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) AS TRIBUNE_ID
    from tt_borrow
    where BORROW_ID = #{BORROW_ID,jdbcType=VARCHAR}
  </select>
  
   <update id="updateByState" parameterType="pd">
  		 update tt_borrow   set   BORROW_STATE = #{BORROW_STATE,jdbcType=INTEGER} where BORROW_ID=#{BORROW_ID}
	  </update>
	  
	   <update id="updateByReviewType" parameterType="pd">
  		 update tt_borrow   set   REVIEW_TYPE = #{REVIEW_TYPE,jdbcType=INTEGER} where BORROW_ID=#{BORROW_ID}
	  </update>
  
  <select id="listPageBorrow" resultType="pd" parameterType="page" >
    
    SELECT   BORROW_ID, STRUCT_ID, BORROW_TITLE, BORROW_CONTENT, RETURN_DATE,TYPE, 
    IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY, (select name from sys_user where user_id=tt_borrow.CREATE_BY) as CREATE_NAME
    ,(SELECT STATE FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) AS STATE
	,(SELECT TRIBUNE_ID FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) AS TRIBUNE_ID,
	(SELECT tl.`STATE` FROM `tt_loan` tl WHERE tl.`CITY_ID`=tt_borrow.BORROW_ID) AS loan_state,
	  (SELECT s.`STRUCT_NAME` FROM `sys_structinfo` s WHERE s.`STRUCT_ID`=(SELECT 
    tl.`IN_STRUCT_ID` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID)) AS structName,
  (SELECT 
    tl.`RETURN_DATE` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID) AS returnDate ,
    (SELECT 
    tl.`DUTY_USER` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID) AS DUTY_USER ,
    (SELECT 
    tl.`DUTY_PHONE` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID) AS DUTY_PHONE 
 FROM `tt_borrow` WHERE (((SELECT TRIBUNE_ID FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) IN 
( SELECT TRIBUNE_ID FROM `tt_tribune_user` WHERE user_id=#{pd.USER_ID}) 
)OR (tt_borrow.`CREATE_BY`=#{pd.USER_ID})) AND is_del = '0'
    
    	<if test="pd.ITEMCOLLECTNAME!=null and pd.ITEMCOLLECTNAME != '' ">
		 	and (BORROW_TITLE LIKE #{pd.ITEMCOLLECTNAME2} or BORROW_CONTENT LIKE #{pd.ITEMCOLLECTNAME2}) 
		</if>
		
       <if test="pd.LASTLOGINSTART1 !=null and pd.LASTLOGINSTART1 != '' ">
		 		<if test="pd.LASTLOGINSTART2 !=null and pd.LASTLOGINSTART2 != '' ">
		 		AND CREATE_DATE  &gt;=#{pd.LASTLOGINSTART1} AND CREATE_DATE &lt;=#{pd.LASTLOGINSTART2} 
		 		</if>
		</if>
		
	 ORDER BY CREATE_DATE DESC    
  </select>
  
  <select id="listBorrow" resultType="pd" parameterType="page" >
  SELECT   BORROW_ID, STRUCT_ID, BORROW_TITLE, BORROW_CONTENT, RETURN_DATE, 
    IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY, (SELECT NAME FROM sys_user WHERE user_id=tt_borrow.CREATE_BY) AS CREATE_NAME
    ,(SELECT STATE FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) AS STATE
	,(SELECT TRIBUNE_ID FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) AS TRIBUNE_ID,
	(SELECT tl.`STATE` FROM `tt_loan` tl WHERE tl.`CITY_ID`=tt_borrow.BORROW_ID) AS loan_state,
	 (SELECT s.`STRUCT_NAME` FROM `sys_structinfo` s WHERE s.`STRUCT_ID`=(SELECT 
    tl.`IN_STRUCT_ID` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID)) AS structName,
  (SELECT 
    tl.`RETURN_DATE` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID) AS returnDate ,
    (SELECT 
    tl.`DUTY_USER` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID) AS DUTY_USER ,
    (SELECT 
    tl.`DUTY_PHONE` 
  FROM
    `tt_loan` tl 
  WHERE tl.`CITY_ID` = tt_borrow.BORROW_ID) AS DUTY_PHONE 
 FROM `tt_borrow` WHERE (((SELECT TRIBUNE_ID FROM `tt_tribune` t WHERE  t.`REVIEW_OBJ_ID`=tt_borrow.`BORROW_ID`) IN 
( SELECT TRIBUNE_ID FROM `tt_tribune_user` WHERE user_id=#{pd.USER_ID}) 
)OR (tt_borrow.`CREATE_BY`=#{pd.USER_ID})) AND is_del = '0'
    
		
	 ORDER BY CREATE_DATE DESC    
  </select>
  
  <select id="findBorrowListInHead" resultType="pd" parameterType="pd" >
    
    SELECT   BORROW_ID, STRUCT_ID, BORROW_TITLE, BORROW_CONTENT, BORROW_STATE, RETURN_DATE, REVIEW_TYPE, 
    IS_DEL, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY, (SELECT NAME FROM sys_user WHERE user_id=tt_borrow.CREATE_BY) AS CREATE_NAME

 	FROM `tt_borrow` WHERE tt_borrow.`BORROW_ID` IN 
	( SELECT tribune_id FROM `tt_tribune_user` WHERE user_id= #{USER_ID,jdbcType=VARCHAR}) 
	  AND is_del = '0' AND tt_borrow.`FLOW_STATE`='1' AND RIGHT(tt_borrow.REVIEW_TYPE, 1) = 
  (SELECT 
    u.`REVIEW_TYPE` 
  FROM
    sys_user u 
  WHERE u.`USER_ID` =  #{USER_ID,jdbcType=VARCHAR})  
      AND (SELECT state FROM `tt_tribune_user` WHERE user_id=#{USER_ID,jdbcType=VARCHAR} AND tribune_id=tt_borrow.`BORROW_ID`) =0
	 ORDER BY CREATE_DATE DESC  
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_borrow
    where BORROW_ID = #{borrowId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.Borrow" >
    insert into tt_borrow (BORROW_ID, STRUCT_ID, BORROW_TITLE, 
      BORROW_CONTENT, BORROW_STATE, RETURN_DATE, 
      REVIEW_TYPE, IS_DEL, CREATE_DATE, 
      CREATE_BY, UPDATE_DATE, UPDATE_BY
      )
    values (#{borrowId,jdbcType=VARCHAR}, #{structId,jdbcType=VARCHAR}, #{borrowTitle,jdbcType=VARCHAR}, 
      #{borrowContent,jdbcType=VARCHAR}, #{borrowState,jdbcType=INTEGER}, #{returnDate,jdbcType=DATE}, 
      #{reviewType,jdbcType=CHAR}, #{isDel,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pd" >
    insert into tt_borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BORROW_ID != null" >
        BORROW_ID,
      </if>
      <if test="STRUCT_ID != null" >
        STRUCT_ID,
      </if>
      <if test="BORROW_TITLE != null" >
        BORROW_TITLE,
      </if>
      <if test="BORROW_CONTENT != null" >
        BORROW_CONTENT,
      </if>
      <if test="BORROW_STATE != null" >
        BORROW_STATE,
      </if>
      <if test="RETURN_DATE != null" >
        RETURN_DATE,
      </if>
      <if test="REVIEW_TYPE != null" >
        REVIEW_TYPE,
      </if>
      <if test="IS_DEL != null" >
        IS_DEL,
      </if>
      <if test="CREATE_DATE != null" >
        CREATE_DATE,
      </if>
      <if test="CREATE_BY != null" >
        CREATE_BY,
      </if>
      <if test="UPDATE_DATE != null" >
        UPDATE_DATE,
      </if>
      <if test="UPDATE_BY != null" >
        UPDATE_BY,
      </if>
      <if test="FLOW_STATE != null" >
        FLOW_STATE,
      </if>
      <if test="TYPE != null" >
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BORROW_ID != null" >
        #{BORROW_ID,jdbcType=VARCHAR},
      </if>
      <if test="STRUCT_ID != null" >
        #{STRUCT_ID,jdbcType=VARCHAR},
      </if>
      <if test="BORROW_TITLE != null" >
        #{BORROW_TITLE,jdbcType=VARCHAR},
      </if>
      <if test="BORROW_CONTENT != null" >
        #{BORROW_CONTENT,jdbcType=VARCHAR},
      </if>
      <if test="BORROW_STATE != null" >
        #{BORROW_STATE,jdbcType=INTEGER},
      </if>
      <if test="RETURN_DATE != null" >
        #{RETURN_DATE,jdbcType=DATE},
      </if>
      <if test="REVIEW_TYPE != null" >
        #{REVIEW_TYPE,jdbcType=CHAR},
      </if>
      <if test="IS_DEL != null" >
        #{IS_DEL,jdbcType=INTEGER},
      </if>
      <if test="CREATE_DATE != null" >
        #{CREATE_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="CREATE_BY != null" >
        #{CREATE_BY,jdbcType=VARCHAR},
      </if>
      <if test="UPDATE_DATE != null" >
        #{UPDATE_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="UPDATE_BY != null" >
        #{UPDATE_BY,jdbcType=VARCHAR},
      </if>
      <if test="FLOW_STATE != null" >
        #{FLOW_STATE,jdbcType=INTEGER},
      </if>
      <if test="TYPE != null" >
        #{TYPE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd" >
    update tt_borrow
    <set >
      <if test="STRUCT_ID != null" >
        STRUCT_ID = #{STRUCT_ID,jdbcType=VARCHAR},
      </if>
      <if test="BORROW_TITLE != null" >
        BORROW_TITLE = #{BORROW_TITLE,jdbcType=VARCHAR},
      </if>
      <if test="BORROW_CONTENT != null" >
        BORROW_CONTENT = #{BORROW_CONTENT,jdbcType=VARCHAR},
      </if>
      <if test="BORROW_STATE != null" >
        BORROW_STATE = #{BORROW_STATE,jdbcType=INTEGER},
      </if>
      <if test="RETURN_DATE != null" >
        RETURN_DATE = #{RETURN_DATE,jdbcType=DATE},
      </if>
      <if test="REVIEW_TYPE != null" >
        REVIEW_TYPE = #{REVIEW_TYPE,jdbcType=CHAR},
      </if>
      <if test="IS_DEL != null" >
        IS_DEL = #{IS_DEL,jdbcType=INTEGER},
      </if>
      <if test="CREATE_DATE != null" >
        CREATE_DATE = #{CREATE_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="CREATE_BY != null" >
        CREATE_BY = #{CREATE_BY,jdbcType=VARCHAR},
      </if>
      <if test="UPDATE_DATE != null" >
        UPDATE_DATE = #{UPDATE_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="UPDATE_BY != null" >
        UPDATE_BY = #{UPDATE_BY,jdbcType=VARCHAR},
      </if>
      <if test="FLOW_STATE != null" >
        FLOW_STATE = #{FLOW_STATE,jdbcType=INTEGER},
      </if>
       <if test="TYPE != null" >
        TYPE = #{TYPE},
      </if>
    </set>
    where BORROW_ID = #{BORROW_ID,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.Borrow" >
    update tt_borrow
    set STRUCT_ID = #{structId,jdbcType=VARCHAR},
      BORROW_TITLE = #{borrowTitle,jdbcType=VARCHAR},
      BORROW_CONTENT = #{borrowContent,jdbcType=VARCHAR},
      BORROW_STATE = #{borrowState,jdbcType=INTEGER},
      RETURN_DATE = #{returnDate,jdbcType=DATE},
      REVIEW_TYPE = #{reviewType,jdbcType=CHAR},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where BORROW_ID = #{borrowId,jdbcType=VARCHAR}
  </update>
  
  <update id="deleteBorrowByid" parameterType="pd" >
    update tt_borrow
    set IS_DEL = 1
    where BORROW_ID = #{BORROW_ID,jdbcType=VARCHAR}
  </update>
  
  
  <!-- 发送 -->
   <update id="sentBorrowByid" parameterType="pd" >
    UPDATE `tt_tribune`
    SET STATE = 1
    WHERE TRIBUNE_ID = #{TRIBUNE_ID,jdbcType=VARCHAR}
  </update>
  
  <!-- 批量删除用户 -->
	<delete id="deleteAllM" parameterType="String" flushCache="false">
	 update tt_borrow set   IS_DEL = 1
		where 
			BORROW_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
</mapper>