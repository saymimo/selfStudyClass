<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="WageDetailMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.WageDetail" >
    <id column="WAGE_DETAIL_ID" property="wageDetailId" jdbcType="VARCHAR" />
    <result column="TASK_WAGE_ID" property="taskWageId" jdbcType="VARCHAR" />
    <result column="LW_IDENTITYCODE" property="lwIdentitycode" jdbcType="VARCHAR" />
    <result column="WAGE_MONEY" property="wageMoney" jdbcType="DECIMAL" />
    <result column="LOAN_MONEY" property="loanMoney" jdbcType="DECIMAL" />
    <result column="FINANCE_VOUCHER" property="financeVoucher" jdbcType="VARCHAR" />
    <result column="ITEM_ID" property="itemId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    WAGE_DETAIL_ID, TASK_WAGE_ID, LW_IDENTITYCODE, WAGE_MONEY, LOAN_MONEY,FINANCE_VOUCHER,ITEM_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_wage_detail
    where WAGE_DETAIL_ID = #{wageDetailId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_wage_detail
    where WAGE_DETAIL_ID = #{wageDetailId,jdbcType=VARCHAR}
  </delete>
  
  <!-- 查询列表 劳务工资  tt_lw_personalinfo  下载EXC -->
  <select id="listAllPerson" resultType="pd" parameterType="pd" useCache="false">
SELECT 
  d.`TASK_WAGE_ID`,
  d.`WAGE_DETAIL_ID`,
  d.`LW_IDENTITYCODE`,
  p.`LW_NAME`,
  p.`MOBILE_PHONE`,
  w.`CREATE_DATE`,
  SUM(IFNULL(d.`LOAN_MONEY`, 0)) AS LOAN_MONEY,
  SUM(IFNULL(d.`WAGE_MONEY`, 0)) AS WAGE_MONEY,
  (
    SUM(IFNULL(d.`WAGE_MONEY`, 0)) - SUM(IFNULL(d.`LOAN_MONEY`, 0))
  ) AS AMOUNT_MONEY 
FROM
  tt_wage_detail d 
  LEFT JOIN tt_lw_personalinfo p 
    ON p.`LW_IDENTITYCODE` = d.`LW_IDENTITYCODE`,
  tt_task_wage w 
WHERE w.`TASK_WAGE_ID` = d.`TASK_WAGE_ID` 
  AND d.`ITEM_ID` =#{ITEM_ID}
   <if test="LASTLOGINSTART1 !=null and LASTLOGINSTART1 != '' ">
		 		<if test="LASTLOGINSTART2 !=null and LASTLOGINSTART2 != '' ">
		 		AND (w.`WAGE_DATE`  &gt;=#{LASTLOGINSTART1} AND w.`WAGE_DATE` &lt;=#{LASTLOGINSTART2} )
		 		</if>
		 		</if>
   <if test="NAME !=null and NAME != '' ">
     AND ( p.`LW_NAME` LIKE #{NAME2} or p.`LW_IDENTITYCODE` LIKE #{NAME2} or p.`MOBILE_PHONE` LIKE #{NAME2})
   </if>
GROUP BY p.`LW_IDENTITYCODE` 
ORDER BY w.`WAGE_DATE`
  </select>
 <!--  劳务工资   其他详细    sf 2016-08-08 --> 
<select id="listPagePersonInfoTwo" parameterType="page" resultType="pd">
SELECT 
  wd.`WAGE_MONEY`,
  wd.`LOAN_MONEY`,
  CASE
    tw.WAGE_TYPE 
    WHEN 2 
    THEN 
    (SELECT 
      sd.`NAME` 
    FROM
      sys_dictionaries sd 
    WHERE sd.`P_BM` = 
      (SELECT 
        SANCTION_GENRE 
      FROM
        tt_lw_sanction ls 
      WHERE ls.WAGE_VOUCHER = wd.TASK_WAGE_ID)) 
  END AS SANCTION_GENRE,
  CASE
    TYPE 
    WHEN 0 
    THEN '工资' 
    WHEN 1 
    THEN '借款' 
    WHEN 2 
    THEN '奖励' 
    WHEN 3 
    THEN '罚款' 
  END TYPE_NAME,
  CASE
    tw.WAGE_TYPE 
    WHEN 0 
    THEN '合同结算' 
    WHEN 1 
    THEN '清单结算' 
    WHEN 2 
    THEN '劳务奖罚' 
  END TYPE,
  (SELECT 
    ta.`NAME` 
  FROM
    tt_taskinfo ta 
  WHERE ta.`UID` = 
    (SELECT 
      TASK_ID 
    FROM
      tt_lw_sanction ls 
    WHERE ls.WAGE_VOUCHER = wd.TASK_WAGE_ID)) TASK_NAME,
  (SELECT 
    su.NAME 
  FROM
    sys_user su 
  WHERE su.USER_ID = 
    (SELECT 
      CONSTRUCTION_USER 
    FROM
      tt_taskinfo ta 
    WHERE ta.UID = 
      (SELECT 
        findPTaskOneByCId (TASK_ID) 
      FROM
        tt_lw_sanction ls 
      WHERE ls.WAGE_VOUCHER = wd.TASK_WAGE_ID))) CONSTRUCTION_USER,
  (SELECT 
    ACTUALFINISH 
  FROM
    tt_taskinfo ta 
  WHERE ta.UID = 
    (SELECT 
      TASK_ID 
    FROM
      tt_lw_sanction ls 
    WHERE ls.WAGE_VOUCHER = wd.TASK_WAGE_ID)) ACTUALFINISH,
  '' PACT_NAME 
FROM
  tt_wage_detail wd,
  tt_task_wage tw 
WHERE tw.`TASK_WAGE_ID` = wd.`TASK_WAGE_ID` 
  AND tw.TASK_WAGE_ID IN 
  (SELECT 
    TASK_WAGE_ID 
  FROM
    tt_wage_detail) 
  AND tw.WAGE_TYPE != 0 
  AND wd.LW_IDENTITYCODE = #{pd.lwIdentitycode,jdbcType=VARCHAR}
  AND wd.ITEM_ID = #{pd.itemId,jdbcType=VARCHAR} 
</select>  


<!-- 劳务工资  借款详情 -->  
<select id="listPageForLoan" parameterType="page" resultType="pd">
SELECT 
  wd.`WAGE_MONEY`,
  wd.`LOAN_MONEY`,
  FINANCE_VOUCHER
FROM
  tt_wage_detail wd,
  tt_task_wage tw 
WHERE tw.`TASK_WAGE_ID` = wd.`TASK_WAGE_ID` 
  AND tw.TASK_WAGE_ID IN 
  (SELECT 
    TASK_WAGE_ID 
  FROM
    tt_wage_detail) 
  AND tw.TYPE = 1 
  AND wd.LW_IDENTITYCODE = #{pd.lwIdentitycode,jdbcType=VARCHAR}
  AND wd.ITEM_ID = #{pd.itemId,jdbcType=VARCHAR} 
</select>  
  
<!--  劳务工资 合同工资 详细    sf 2016-08-08 -->
<select id="listPagePersonInfo" parameterType="page" resultType="pd">
SELECT 
  lt.`AMOUNT`,
  taskName(ta.`UID`) TASK_NAME,
  (SELECT 
  	wa.`WAGE_VOUCHER` 
  FROM
  	tt_task_wage wa 
  WHERE wa.`TASK_WAGE_ID` =ta.WAGE_VOUCHER) WAGE_VOUCHER,
  (SELECT 
    su.NAME 
  FROM
    sys_user su 
  WHERE su.USER_ID = 
    (SELECT 
      CONSTRUCTION_USER 
    FROM
      tt_taskinfo ta 
    WHERE ta.UID = findPTaskOneByCId (lt.`TASK_ID`))) CONSTRUCTION_USER,
  ta.ACTUALFINISH,
  (SELECT 
    PACT_NAME 
  FROM
    tt_pactinfo tp 
  WHERE tp.PACT_ID = 
    (SELECT 
      le.PACT_ID 
    FROM
      tt_lw_execution le 
    WHERE le.TASK_ID = lt.`TASK_ID` 
      AND le.IS_WAGE = 1)) PACT_NAME 
FROM
  tt_taskinfo ta,
  tt_lw_taskinfo lt 
WHERE lt.`TASK_ID` = ta.`UID` 
  AND ta.PROJECTUID = #{pd.itemId,jdbcType=VARCHAR} 
  AND ta.`WAGE_VOUCHER` IN 
  (SELECT tw.`TASK_WAGE_ID`  FROM tt_task_wage tw   WHERE tw.`IS_POST` = 1   AND tw.`WAGE_TYPE` = 0) 
  AND lt.`LW_PERSONALINFO_ID` = (SELECT 
  lp.`LW_PERSONALINFO_ID` 
FROM
  tt_lw_personalinfo lp 
WHERE lp.`LW_IDENTITYCODE` = #{pd.lwIdentitycode,jdbcType=VARCHAR} 
  AND lp.`IS_DEL` = 0 
  AND lp.`ITEM_ID` = #{pd.itemId,jdbcType=VARCHAR} ) 
</select>  
   <!-- 查询列表 劳务工资  tt_lw_personalinfo  主页面显示 带分页-->
<select id="listPageAllPerson" resultType="pd" parameterType="page" useCache="false">
SELECT 
  d.`TASK_WAGE_ID`,
  d.`WAGE_DETAIL_ID`,
  d.`LW_IDENTITYCODE`,
  (SELECT 
    LW_NAME 
  FROM
    tt_lw_personalinfo p 
  WHERE p.LW_IDENTITYCODE = d.`LW_IDENTITYCODE` 
  GROUP BY p.LW_IDENTITYCODE) AS LW_NAME,
  (SELECT 
    MOBILE_PHONE 
  FROM
    tt_lw_personalinfo p 
  WHERE p.LW_IDENTITYCODE = d.`LW_IDENTITYCODE` 
  GROUP BY p.LW_IDENTITYCODE) AS MOBILE_PHONE,
  w.`CREATE_DATE`,
  SUM(IFNULL(d.`LOAN_MONEY`, 0)) AS LOAN_MONEY,
  SUM(IFNULL(d.`WAGE_MONEY`, 0)) AS WAGE_MONEY,
  (
    SUM(IFNULL(d.`WAGE_MONEY`, 0)) - SUM(IFNULL(d.`LOAN_MONEY`, 0))
  ) AS AMOUNT_MONEY 
FROM
  tt_wage_detail d ,
  tt_task_wage w 
WHERE w.`TASK_WAGE_ID` = d.`TASK_WAGE_ID` 
  AND d.`ITEM_ID` =#{pd.ITEM_ID}
   <if test="pd.LASTLOGINSTART1 !=null and pd.LASTLOGINSTART1 != '' ">
		 		<if test="pd.LASTLOGINSTART2 !=null and pd.LASTLOGINSTART2 != '' ">
		 		AND (w.`CREATE_DATE`  &gt;=#{pd.LASTLOGINSTART1} AND w.`CREATE_DATE` &lt;=#{pd.LASTLOGINSTART2} )
		 		</if>
		 		</if>
   <if test="pd.NAME !=null and pd.NAME != '' ">
     AND ( p.`LW_NAME` LIKE #{pd.NAME2,jdbcType=VARCHAR} or p.`LW_IDENTITYCODE` LIKE #{pd.NAME2,jdbcType=VARCHAR} or p.`MOBILE_PHONE` LIKE #{pd.NAME2,jdbcType=VARCHAR})
   </if> 
   GROUP BY d.`LW_IDENTITYCODE`
ORDER BY w.`CREATE_DATE` DESC
  </select>
 
  <!-- 跳转 tab 信息页面前查询  1 -->
  <select id="listPageTotabOne" resultType="pd" parameterType="pd">
SELECT 
  p.`LW_IDENTITYCODE`,
  SUM(lt.`AMOUNT`) AS WAGE_MONEY,
  p.`LW_NAME`,
  p.`MOBILE_PHONE` 
FROM
  tt_lw_taskinfo lt,
  tt_taskinfo t,
  tt_lw_personalinfo p ,
  tt_task_wage w
WHERE lt.`TASK_ID` = t.`UID` 
  AND p.`LW_PERSONALINFO_ID` = lt.`LW_PERSONALINFO_ID` 
  AND w.`TASK_WAGE_ID`=t.`WAGE_VOUCHER`
  AND t.`WAGE_VOUCHER` = #{pd.TASK_WAGE_ID,jdbcType=VARCHAR}  
GROUP BY p.`LW_IDENTITYCODE` 
  </select>
  
  <!-- 跳转 tab 信息页面前查询  2 -->
  <select id="listPageTotabTwo" resultType="pd" parameterType="pd">
SELECT 
  CASE
    WHEN w.`TYPE` = 0 
    THEN SUM(m.`WAGE_MONEY`) 
    WHEN w.`TYPE` = 1 
    THEN SUM(m.LOAN_MONEY) 
    WHEN w.`TYPE` = 2 
    THEN SUM(m.`WAGE_MONEY`) 
    WHEN w.`TYPE` = 3 
    THEN SUM(m.`WAGE_MONEY`) 
  END AS WAGE_MONEY,
  p.`LW_IDENTITYCODE`,
  p.`LW_NAME`,
  p.`MOBILE_PHONE` 
FROM
  tt_wage_detail_manual m,
  tt_lw_personalinfo p,
  tt_task_wage w 
WHERE m.`TASK_WAGE_ID` =#{pd.TASK_WAGE_ID,jdbcType=VARCHAR} 
  AND m.`LW_PERSONALINFO_ID` = p.`LW_PERSONALINFO_ID`
  AND w.TASK_WAGE_ID = m.TASK_WAGE_ID 
  GROUP BY m.`LW_PERSONALINFO_ID`
  </select>
  
  <insert id="insert" parameterType="com.ssc.entity.system.WageDetail" >
    insert into tt_wage_detail (WAGE_DETAIL_ID, TASK_WAGE_ID, LW_IDENTITYCODE, 
      WAGE_MONEY, LOAN_MONEY,FINANCE_VOUCHER,ITEM_ID)
    values (#{wageDetailId,jdbcType=VARCHAR}, #{taskWageId,jdbcType=VARCHAR}, #{lwIdentitycode,jdbcType=VARCHAR}, 
      #{wageMoney,jdbcType=DECIMAL}, #{loanMoney,jdbcType=DECIMAL},#{financeVoucher,jdbcType=VARCHAR},#{itemId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pd" >
    insert into tt_wage_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wageDetailId != null" >
        WAGE_DETAIL_ID,
      </if>
      <if test="taskWageId != null" >
        TASK_WAGE_ID,
      </if>
      <if test="lwIdentitycode != null" >
        LW_IDENTITYCODE,
      </if>
      <if test="wageMoney != null" >
        WAGE_MONEY,
      </if>
      <if test="loanMoney != null" >
        LOAN_MONEY,
      </if>
      <if test="financeVoucher != null" >
        FINANCE_VOUCHER,
      </if>
      <if test="itemId != null" >
        ITEM_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wageDetailId != null" >
        #{wageDetailId,jdbcType=VARCHAR},
      </if>
      <if test="taskWageId != null" >
        #{taskWageId,jdbcType=VARCHAR},
      </if>
      <if test="lwIdentitycode != null" >
        #{lwIdentitycode,jdbcType=VARCHAR},
      </if>
      <if test="wageMoney != null" >
        #{wageMoney,jdbcType=DECIMAL},
      </if>
      <if test="loanMoney != null" >
        #{loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="financeVoucher != null" >
        #{financeVoucher,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssc.entity.system.WageDetail" >
    update tt_wage_detail
    <set >
      <if test="taskWageId != null" >
        TASK_WAGE_ID = #{taskWageId,jdbcType=VARCHAR},
      </if>
      <if test="lwIdentitycode != null" >
        LW_IDENTITYCODE = #{lwIdentitycode,jdbcType=VARCHAR},
      </if>
      <if test="wageMoney != null" >
        WAGE_MONEY = #{wageMoney,jdbcType=DECIMAL},
      </if>
      <if test="loanMoney != null" >
        LOAN_MONEY = #{loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="financeVoucher != null" >
       FINANCE_VOUCHER= #{financeVoucher,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        ITEM_ID=#{itemId,jdbcType=VARCHAR},
      </if>
    </set>
    where WAGE_DETAIL_ID = #{wageDetailId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.WageDetail" >
    update tt_wage_detail
    set TASK_WAGE_ID = #{taskWageId,jdbcType=VARCHAR},
      LW_IDENTITYCODE = #{lwIdentitycode,jdbcType=VARCHAR},
      WAGE_MONEY = #{wageMoney,jdbcType=DECIMAL},
      LOAN_MONEY = #{loanMoney,jdbcType=DECIMAL},
      FINANCE_VOUCHER= #{financeVoucher,jdbcType=VARCHAR},
      ITEM_ID=#{itemId,jdbcType=VARCHAR}
    where WAGE_DETAIL_ID = #{wageDetailId,jdbcType=VARCHAR}
  </update>
</mapper>