<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TtInStorageMapper" >
  <resultMap id="BaseResultMap" type="com.ssc.entity.system.TtInStorage" >
    <id column="IN_STORAGE_ID" property="inStorageId" jdbcType="VARCHAR" />
    <result column="ITEM_STORAGE_ID" property="itemStorageId" jdbcType="VARCHAR" />
    <result column="IN_STORAGE_NO" property="inStorageNo" jdbcType="VARCHAR" />
    <result column="SPECIFICATION" property="specification" jdbcType="VARCHAR" />
    <result column="PAYMENT_TYPE" property="paymentType" jdbcType="INTEGER" />
    <result column="PACT_ID" property="pactId" jdbcType="VARCHAR" />
    <result column="PURCHASE_USER" property="purchaseUser" jdbcType="VARCHAR" />
    <result column="PURCHASE_UNIT" property="purchaseUnit" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="NUM" property="num" jdbcType="DECIMAL" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="REVIEW_USER" property="reviewUser" jdbcType="VARCHAR" />
     <result column="REVIEW_STATE" property="reviewState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    IN_STORAGE_ID, ITEM_STORAGE_ID, IN_STORAGE_NO, SPECIFICATION, PAYMENT_TYPE, PACT_ID, 
    PURCHASE_USER, PURCHASE_UNIT, REMARK, PRICE, NUM, AMOUNT, IS_DEL, CREATE_DATE, CREATE_BY, 
    UPDATE_DATE, UPDATE_BY,REVIEW_USER,REVIEW_STATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tt_in_storage
    where IN_STORAGE_ID = #{inStorageId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tt_in_storage
    where IN_STORAGE_ID = #{inStorageId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssc.entity.system.TtInStorage" >
    insert into tt_in_storage (IN_STORAGE_ID, ITEM_STORAGE_ID, IN_STORAGE_NO, 
      SPECIFICATION, PAYMENT_TYPE, PACT_ID, 
      PURCHASE_USER, PURCHASE_UNIT, REMARK, 
      PRICE, NUM, AMOUNT, 
      IS_DEL, CREATE_DATE, CREATE_BY, 
      UPDATE_DATE, UPDATE_BY)
    values (#{inStorageId,jdbcType=VARCHAR}, #{itemStorageId,jdbcType=VARCHAR}, #{inStorageNo,jdbcType=VARCHAR}, 
      #{specification,jdbcType=VARCHAR}, #{paymentType,jdbcType=INTEGER}, #{pactId,jdbcType=VARCHAR}, 
      #{purchaseUser,jdbcType=VARCHAR}, #{purchaseUnit,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{num,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, 
      #{isDel,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pd" >
    insert into tt_in_storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inStorageId != null" >
        IN_STORAGE_ID,
      </if>
      <if test="itemStorageId != null" >
        ITEM_STORAGE_ID,
      </if>
      <if test="inStorageNo != null" >
        IN_STORAGE_NO,
      </if>
      <if test="specification != null" >
        SPECIFICATION,
      </if>
      <if test="paymentType != null" >
        PAYMENT_TYPE,
      </if>
      <if test="pactId != null" >
        PACT_ID,
      </if>
      <if test="purchaseUser != null" >
        PURCHASE_USER,
      </if>
      <if test="purchaseUnit != null" >
        PURCHASE_UNIT,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="num != null" >
        NUM,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
        <if test="reviewUser != null" >
        REVIEW_USER,
      </if>
      <if test="reviewState != null" >
        REVIEW_STATE,
      </if>
      
      <if test="actualPrice != null" >
        ACTUAL_PRICE,
      </if>
      
      <if test="actualAmount != null" >
        ACTUAL_AMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inStorageId != null" >
        #{inStorageId,jdbcType=VARCHAR},
      </if>
      <if test="itemStorageId != null" >
        #{itemStorageId,jdbcType=VARCHAR},
      </if>
      <if test="inStorageNo != null" >
        #{inStorageNo,jdbcType=VARCHAR},
      </if>
      <if test="specification != null" >
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="pactId != null" >
        #{pactId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseUser != null" >
        #{purchaseUser,jdbcType=VARCHAR},
      </if>
      <if test="purchaseUnit != null" >
        #{purchaseUnit,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="num != null" >
        #{num,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="reviewUser != null" >
        #{reviewUser,jdbcType=VARCHAR},
      </if>
        <if test="reviewState != null" >
         #{reviewState,jdbcType=INTEGER},
      </if>
      
       <if test="actualPrice != null" >
        #{actualPrice},
      </if>
      
      <if test="actualAmount != null" >
        #{actualAmount},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd" >
    update tt_in_storage
    <set >
      <if test="itemStorageId != null" >
        ITEM_STORAGE_ID = #{itemStorageId,jdbcType=VARCHAR},
      </if>
      <if test="inStorageNo != null" >
        IN_STORAGE_NO = #{inStorageNo,jdbcType=VARCHAR},
      </if>
      <if test="specification != null" >
        SPECIFICATION = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        PAYMENT_TYPE = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="pactId != null" >
        PACT_ID = #{pactId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseUser != null" >
        PURCHASE_USER = #{purchaseUser,jdbcType=VARCHAR},
      </if>
      <if test="purchaseUnit != null" >
        PURCHASE_UNIT = #{purchaseUnit,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="num != null" >
        NUM = #{num,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="reviewUser != null" >
        REVIEW_USER = #{reviewUser,jdbcType=VARCHAR},
      </if>
      <if test="reviewState != null" >
        REVIEW_STATE = #{reviewState,jdbcType=INTEGER},
      </if>
    </set>
    where IN_STORAGE_ID = #{inStorageId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssc.entity.system.TtInStorage" >
    update tt_in_storage
    set ITEM_STORAGE_ID = #{itemStorageId,jdbcType=VARCHAR},
      IN_STORAGE_NO = #{inStorageNo,jdbcType=VARCHAR},
      SPECIFICATION = #{specification,jdbcType=VARCHAR},
      PAYMENT_TYPE = #{paymentType,jdbcType=INTEGER},
      PACT_ID = #{pactId,jdbcType=VARCHAR},
      PURCHASE_USER = #{purchaseUser,jdbcType=VARCHAR},
      PURCHASE_UNIT = #{purchaseUnit,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      NUM = #{num,jdbcType=DECIMAL},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where IN_STORAGE_ID = #{inStorageId,jdbcType=VARCHAR}
  </update>
  
  
  <select id="listPageInStorageByItemId" resultMap="BaseResultMap" parameterType="page">
  		 select 
		    IN_STORAGE_ID, ITEM_STORAGE_ID, IN_STORAGE_NO, SPECIFICATION, PAYMENT_TYPE, PACT_ID, 
  ( SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=i.PURCHASE_USER) as  PURCHASE_USER
    , PURCHASE_UNIT, REMARK, PRICE, NUM, AMOUNT, IS_DEL, CREATE_DATE, ( SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=i.CREATE_BY) as CREATE_BY, 
    UPDATE_DATE, UPDATE_BY,( SELECT s.`NAME` FROM `sys_user` s WHERE s.`USER_ID`=i.REVIEW_USER) as REVIEW_USER,REVIEW_STATE
		    from tt_in_storage i
		    where ITEM_STORAGE_ID = #{pd.itemStorageId,jdbcType=VARCHAR}
		    
		     <if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
					 IN_STORAGE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
					 or 
					 PURCHASE_UNIT LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
				)
		</if>
		    
		     <if test="pd.LASTLOGINSTART1 !=null and pd.LASTLOGINSTART1 != '' ">
		 		<if test="pd.LASTLOGINSTART2 !=null and pd.LASTLOGINSTART2 != '' ">
		 		AND CREATE_DATE  &gt;=#{pd.LASTLOGINSTART1} AND CREATE_DATE &lt;=#{pd.LASTLOGINSTART2} 
		 		</if>
		</if>
  ORDER BY  CREATE_DATE DESC
  </select>
  
  <!-- 根据申报编号查询 入库数量和审批数量 -->
  <select id="findRukuNumberAndShenpiNum" resultType="pd" parameterType="pd">
		SELECT 
		IFNULL(SUM(p.`INSTRUCTIONS_NUM`),0) AS shenpiNum,
		IFNULL((SELECT SUM(i.`NUM`) FROM tt_in_storage i WHERE i.`SPECIFICATION`=p.`DECLARE_NO` AND i.review_state=1),0) AS rukuNum
		 FROM  `tt_purchase_declare` p  WHERE p.`DECLARE_NO`=#{DeclarNo}
		  
  </select>
  
  <!-- 通过id查询入库明细 -->
  <select id="findInStorageInfoByInStorageId" resultType="pd" parameterType="pd" >
    select 
       IN_STORAGE_ID as inStorageId, ITEM_STORAGE_ID as itemStorageId, IN_STORAGE_NO as inStorageNo, SPECIFICATION as specification, PAYMENT_TYPE as paymentType, PACT_ID as pactId, 
    PURCHASE_USER as purchaseUser, PURCHASE_UNIT as  purchaseUnit, REMARK as remark, PRICE as price, NUM as num, AMOUNT as amount, IS_DEL as isDel, CREATE_DATE as createDate, CREATE_BY as createBy, 
    UPDATE_DATE as updateDate, UPDATE_BY as updateBy,REVIEW_USER as reviewUser,REVIEW_STATE as reviewState,
      IFNULL((SELECT SUM(i.`NUM`) FROM tt_in_storage i WHERE i.`SPECIFICATION`=t.SPECIFICATION AND i.review_state=1),0) AS rukuNum,
    (SELECT IFNULL(SUM(p.`INSTRUCTIONS_NUM`),0) AS shenpiNum FROM  `tt_purchase_declare` p  WHERE p.`DECLARE_NO`=t.`SPECIFICATION`) AS shenpiNum,
     (SELECT p.`PACT_NAME` FROM `tt_pactinfo` p WHERE p.`PACT_ID`=t.PACT_ID ) AS pactName,(SELECT p.UNIT FROM`tt_item_storage` p WHERE p.ITEM_STORAGE_ID=t.`ITEM_STORAGE_ID`) AS unit,
     ACTUAL_PRICE as actualPrice,ACTUAL_AMOUNT as actualAmount
    from tt_in_storage t
    where IN_STORAGE_ID = #{inStorageId,jdbcType=VARCHAR}
  </select>
  
   <!-- 通过id查询单位-->
  <select id="findUnit" resultType="pd" parameterType="pd" >
SELECT 
  t.`UNIT` AS unit 
FROM
  tt_item_storage t 
    where ITEM_STORAGE_ID = #{itemStorageId,jdbcType=VARCHAR}
    GROUP BY t.`ITEM_STORAGE_ID`
  </select>
  
  <!-- 收货通知  -->
  <select id="findItemStorageIdByitemAndPurchase" resultType="pd" parameterType="pd">
SELECT 
    s.ITEM_STORAGE_ID 
  FROM
    tt_item_storage s 
  WHERE s.`NAME` = 
    (SELECT 
      p.`NAME` 
    FROM
      tt_purchase p 
    WHERE p.`PURCHASE_ID` =  #{purchaseId}) 
    AND s.`SPECIFICATION` = 
    (SELECT 
      p.`SPECIFICATION` 
    FROM
      tt_purchase p 
    WHERE p.`PURCHASE_ID` =  #{purchaseId}) 
    AND s.`UNIT` = 
    (SELECT 
      p.`UNIT` 
    FROM
      tt_purchase p 
    WHERE p.`PURCHASE_ID` = #{purchaseId}) 
    AND s.`ITEM_ID` = #{itemId}
  
   </select>
   
   
   
   
   
  <select id="listPageinStorageByPurchaseIdList" resultType="pd" parameterType="page">
		  SELECT 
		    IN_STORAGE_ID AS inStorageId,
  ITEM_STORAGE_ID AS itemStorageId,
  IN_STORAGE_NO AS inStorageNo,
  SPECIFICATION AS specification,
  PAYMENT_TYPE AS paymentType,
  PACT_ID AS pactId,
  PURCHASE_USER AS purchaseUser,
  PURCHASE_UNIT AS purchaseUnit,
  REMARK AS remark,
  PRICE AS price,
  NUM AS num,
  AMOUNT AS amount,
  IS_DEL AS isDel,
  CREATE_DATE AS createDate,
  CREATE_BY AS createBy,
  UPDATE_DATE AS updateDate,
  UPDATE_BY AS updateBy,
  REVIEW_USER AS reviewUser,
  REVIEW_STATE AS reviewState,
 (  SELECT i.`ITEM_NAME` FROM `tt_iteminfo` i WHERE i.`ITEM_ID`=(SELECT s.`ITEM_ID` FROM `tt_item_storage` s  WHERE s.`ITEM_STORAGE_ID`= t.`ITEM_STORAGE_ID`))
 AS itemName
  
		FROM
		  `tt_in_storage` t 
		WHERE t.`SPECIFICATION` IN 
		  (SELECT 
		    t.`DECLARE_NO` 
		  FROM
		    `tt_purchase_declare` t 
		  WHERE t.`PURCHASE_ID` = #{pd.purchaseId} 
		    AND t.`DECLARE_STATE` = 1 
		    AND t.`IS_DEL` = 0 
		)
		<if test="pd.NAME != null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
					 IN_STORAGE_NO LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
					 or 
					 PURCHASE_UNIT LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%') 
				)
		</if>
		    
		     <if test="pd.LASTLOGINSTART1 !=null and pd.LASTLOGINSTART1 != '' ">
		 		<if test="pd.LASTLOGINSTART2 !=null and pd.LASTLOGINSTART2 != '' ">
		 		AND CREATE_DATE  &gt;=#{pd.LASTLOGINSTART1} AND CREATE_DATE &lt;=#{pd.LASTLOGINSTART2} 
		 		</if>
		</if>
  
  
  </select>
</mapper>